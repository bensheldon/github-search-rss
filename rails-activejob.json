{
    "version": "https://jsonfeed.org/version/1",
    "title": "rails/rails: Issues containing 'ActiveJob Job'",
    "home_page_url": "https://github.com/search?q=ActiveJob+Job+repo%3Arails%2Frails+is%3Aissue&type=Issues",
    "feed_url": "https://bensheldon.github.io/github-search-rss/rails-activejob.json",
    "description": "rails/rails: Issues containing 'ActiveJob Job' on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/94129?u=820327179dc649db72832d1ebbb9bfade6a20405&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">On latest main, tests for an application of mine reliably stall locally and in CI. Sometimes warnings like the following are printed:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"WARNING:  there is already a transaction in progress\nmessage type 0x43 arrived from server while idle\nmessage type 0x5a arrived from server while idle\"><pre class=\"notranslate\"><code class=\"notranslate\">WARNING:  there is already a transaction in progress\nmessage type 0x43 arrived from server while idle\nmessage type 0x5a arrived from server while idle\n</code></pre></div>\n<p dir=\"auto\">Environment:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">The app uses a single Postgres DB and AR’s Postgres adapter.</p>\n</li>\n<li>\n<p dir=\"auto\">It uses RSpec and FactoryBot, not Minitest or AR fixtures.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"rspec-core (3.12.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-expectations (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-mocks (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-rails (6.0.1)\n  actionpack (&gt;= 6.1)\n  activesupport (&gt;= 6.1)\n  railties (&gt;= 6.1)\n  rspec-core (~&gt; 3.11)\n  rspec-expectations (~&gt; 3.11)\n  rspec-mocks (~&gt; 3.11)\n  rspec-support (~&gt; 3.11)\nrspec-support (3.12.0)\"><pre class=\"notranslate\"><code class=\"notranslate\">rspec-core (3.12.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-expectations (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-mocks (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-rails (6.0.1)\n  actionpack (&gt;= 6.1)\n  activesupport (&gt;= 6.1)\n  railties (&gt;= 6.1)\n  rspec-core (~&gt; 3.11)\n  rspec-expectations (~&gt; 3.11)\n  rspec-mocks (~&gt; 3.11)\n  rspec-support (~&gt; 3.11)\nrspec-support (3.12.0)\n</code></pre></div>\n</li>\n<li>\n<p dir=\"auto\">It’s on Ruby 3.1.3.</p>\n</li>\n</ul>\n<p dir=\"auto\">A <code class=\"notranslate\">git bisect</code> pointed to <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/rails/rails/commit/1a2ca1920c62abdd08c809df1fa98fe0acf14bc3/hovercard\" href=\"https://github.com/rails/rails/commit/1a2ca1920c62abdd08c809df1fa98fe0acf14bc3\"><tt>1a2ca19</tt></a> (cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/byroot/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/byroot\">@byroot</a>). That change does seem relevant, but I haven’t been able to reproduce the issue in a minimal app yet. I’ve tried with both Minitest and RSpec.</p>\n<p dir=\"auto\">The tests usually stall in around the same place with the same seed, but not <em>exactly</em> the same place. And I looked at two stalled runs with different seeds that didn’t run any common tests before their stalls.</p>\n<p dir=\"auto\">This has been difficult to pin down so far but I will keep looking.</p>",
            "url": "https://github.com/rails/rails/issues/46797",
            "title": "Active Job async adapter may use connections without a lease",
            "date_modified": "2022-12-23T16:01:46.000Z",
            "date_published": "2022-12-23T04:15:25.000Z",
            "author": {
                "name": "georgeclaghorn",
                "url": "https://github.com/georgeclaghorn"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/99586?u=b4abd791d83e768c72cb832147b4a210caecf47d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Run a job with retry attempt 1. The won't be retried.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class FooJob &lt; ApplicationJob\n  class FooError &lt; StandardError; end\n\n  retry_on FooError, attempts: 1\n\n  def perform\n    raise FooError\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">FooJob</span> &lt; <span class=\"pl-v\">ApplicationJob</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">FooError</span> &lt; <span class=\"pl-v\">StandardError</span><span class=\"pl-kos\">;</span> <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-en\">retry_on</span> <span class=\"pl-v\">FooError</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">attempts</span>: <span class=\"pl-c1\">1</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n    <span class=\"pl-en\">raise</span> <span class=\"pl-v\">FooError</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">ActiveJob should retry at most the number of times specified by the attempts option.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">attempts: 0</code>: runs once, no retry<br>\n<code class=\"notranslate\">attempts: 1</code>: runs once, no retry<br>\n<code class=\"notranslate\">attempts: 2</code>: runs once, one retry<br>\n<code class=\"notranslate\">attempts: 3</code>: runs once, two retries</p>\n<p dir=\"auto\">The behavior is not consistent. We can either change the behavior to be consistent (won't happen?) or at least document it very clearly.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"358130415\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/33816\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/33816/hovercard\" href=\"https://github.com/rails/rails/issues/33816\">#33816</a> also pointed out the problem.</p>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: Rails 7.0.4</p>\n<p dir=\"auto\"><strong>Ruby version</strong>: ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-linux]</p>",
            "url": "https://github.com/rails/rails/issues/46419",
            "title": "ActiveJob's retry behavior is not consistent",
            "date_modified": "2022-11-08T14:13:31.000Z",
            "date_published": "2022-11-04T10:37:42.000Z",
            "author": {
                "name": "shouichi",
                "url": "https://github.com/shouichi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/75187597?u=68c0f410b8ee3255a103943b21427b556f9a5a21&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">ActiveJob produces a large amount of log noise, because errors that are emitted from ActiveJob don't have the standard Rails BacktraceCleaner applied. This is especially apparent when using Sorbet for Ruby types, since each application method call is wrapped by multiple Sorbet typechecking functions. My application's activejob error backtraces would typically log 4 non-relevant Sorbet function calls for each application function call. My workaround has been to monkey-patch Rails in our application. However, it seems to make sense to simply bring this behavior into ActiveJob as the default, as the backtrace cleaner is a pretty standard piece of Rails machinery that is used for most other backtraces in Rails.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">When ActiveJob encounters an error performing a job, rather than printing the full unfiltered (and noisy) exception backtrace, print the cleaned backtrace using Rails's BacktraceCleaner.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CI is passing.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/46555",
            "title": "Small PR: Apply Rails backtrace cleaner to ActiveJob backtrace printout",
            "date_modified": "2022-12-11T11:33:55.000Z",
            "date_published": "2022-11-23T00:45:44.000Z",
            "author": {
                "name": "warrenbhw",
                "url": "https://github.com/warrenbhw"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/79303?u=99e3bc7887879138e88a4538ca623b0a3d7538cb&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Like many folks, I set this in my <code class=\"notranslate\">config/environments/test.rb</code> file:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"config.active_job.queue_adapter = :inline  \"><pre class=\"notranslate\"><span class=\"pl-en\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">active_job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span> <span class=\"pl-c1\">=</span> <span class=\"pl-pds\">:inline</span>  </pre></div>\n<p dir=\"auto\">The reason I do this is to have easy-to-test, deterministic behavior of any potentially async delayed jobs triggered by the application. Under Rails 5, all of my tests (children of <code class=\"notranslate\">ActiveSupport::TestCase</code> and <code class=\"notranslate\">ActionDispatch::SystemTestCase</code> alike) would respect this queue adapter. However, under Rails 6, any built-in Rails test case that includes <code class=\"notranslate\">ActiveJob::TestHelper</code> will also override this setting for all descendants of <code class=\"notranslate\">ActiveJob::Base</code> (<a href=\"https://github.com/rails/rails/blob/master/activejob/lib/active_job/test_helper.rb#L39-L41\">relevant source</a>).</p>\n<p dir=\"auto\">The net effect of this is that my <code class=\"notranslate\">perform_later</code> and <code class=\"notranslate\">deliver_later</code> calls to jobs aren't being fired synchronously (or, in fact, at all) during my system tests, which is leading to test failures upon upgrading to Rails 6.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Here are two tests that demonstrates the problem:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"require &quot;test_helper&quot;\n\nclass JobTest &lt; ActiveSupport::TestCase\n  class SomeJob &lt; ActiveJob::Base\n    cattr_accessor :job_ran\n\n    def perform\n      @@job_ran = true\n    end\n  end\n\n  def test_some_job\n    assert_equal :inline, Rails.application.config.active_job.queue_adapter\n    assert_equal ActiveJob::QueueAdapters::InlineAdapter, SomeJob.queue_adapter.class\n\n    SomeJob.perform_later\n\n    assert_equal true, SomeJob.job_ran\n  end\nend\n\nclass JobSystemTest &lt; ActionDispatch::SystemTestCase\n  class OtherJob &lt; ActiveJob::Base\n    cattr_accessor :job_ran\n\n    def perform\n      @@job_ran = true\n    end\n  end\n\n  def test_other_job\n    assert_equal :inline, Rails.application.config.active_job.queue_adapter\n    assert_equal ActiveJob::QueueAdapters::InlineAdapter, OtherJob.queue_adapter.class\n\n    OtherJob.perform_later\n\n    assert_equal true, OtherJob.job_ran\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-en\">require</span> <span class=\"pl-s\">\"test_helper\"</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">JobTest</span> &lt; <span class=\"pl-v\">ActiveSupport</span>::<span class=\"pl-v\">TestCase</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">SomeJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span>\n    <span class=\"pl-en\">cattr_accessor</span> <span class=\"pl-pds\">:job_ran</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n      <span class=\"pl-c1\">@@job_ran</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">true</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_some_job</span>\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-pds\">:inline</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Rails</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">application</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">active_job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span>\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">QueueAdapters</span>::<span class=\"pl-v\">InlineAdapter</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">SomeJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">class</span>\n\n    <span class=\"pl-v\">SomeJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">SomeJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">job_ran</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">JobSystemTest</span> &lt; <span class=\"pl-v\">ActionDispatch</span>::<span class=\"pl-v\">SystemTestCase</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">OtherJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span>\n    <span class=\"pl-en\">cattr_accessor</span> <span class=\"pl-pds\">:job_ran</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n      <span class=\"pl-c1\">@@job_ran</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">true</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_other_job</span>\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-pds\">:inline</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Rails</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">application</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">active_job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span>\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">QueueAdapters</span>::<span class=\"pl-v\">InlineAdapter</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">OtherJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">class</span>\n\n    <span class=\"pl-v\">OtherJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">OtherJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">job_ran</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">I would expect the behavior to have remained as it did under Rails 5, where the <code class=\"notranslate\">active_job.queue_adapter</code> setting would be respected for all of Rails' test types.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The first test, which descends from <code class=\"notranslate\">ActiveSupport::TestCase</code> will pass and behave as it did under Rails 5. However, the second test, descending from from <code class=\"notranslate\">ActionDispatch::SystemTestCase</code> will now fail under Rails 6, because <code class=\"notranslate\">OtherJob</code>'s <code class=\"notranslate\">queue_adapter</code> will have been reset by <code class=\"notranslate\">ActiveJob::TestHelper</code> to be an instance of <code class=\"notranslate\">TestAdapter</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"JobSystemTest#test_other_job [/Users/justin/code/testdouble/present/test/lib/job_test.rb:33]:\n--- expected\n+++ actual\n@@ -1 +1 @@\n-ActiveJob::QueueAdapters::InlineAdapter\n+ActiveJob::QueueAdapters::TestAdapter\"><pre class=\"notranslate\"><code class=\"notranslate\">JobSystemTest#test_other_job [/Users/justin/code/testdouble/present/test/lib/job_test.rb:33]:\n--- expected\n+++ actual\n@@ -1 +1 @@\n-ActiveJob::QueueAdapters::InlineAdapter\n+ActiveJob::QueueAdapters::TestAdapter\n</code></pre></div>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: 6.0.0 as well as <a href=\"https://github.com/rails/rails/tree/2bc6a948a2f46f8cf2d44506af1be235691c84b5\">6-0-stable</a>, as of today.</p>\n<p dir=\"auto\"><strong>Ruby version</strong>: ruby 2.6.3p62 (2019-04-16 revision 67580) [x86_64-darwin18]</p>",
            "url": "https://github.com/rails/rails/issues/37270",
            "title": "Rails 6 inconsistently overrides ActiveJob queue_adapter setting with TestAdapter",
            "date_modified": "2022-11-17T08:07:16.000Z",
            "date_published": "2019-09-23T05:29:13.000Z",
            "author": {
                "name": "searls",
                "url": "https://github.com/searls"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/212648?u=26fba345a54b891629623ec9549fc0c54a2c2950&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">This Pull Request has been created because I needed <code class=\"notranslate\">retry_on attempts:</code> to use more complex logic than an Integer.</p>\n<p dir=\"auto\">In my specific case I was creating a concern for Jobs that would use <code class=\"notranslate\">retry_on</code> to allow jobs to quietly fail and retry. The concern was going to use a method to allow attempts to be customized in individual jobs.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    included do\n      retry_on(QuietRetryError, wait: :exponentially_longer, attempts: quiet_retry_attempts) do\n        # ...\n      end\n    end\"><pre class=\"notranslate\"><code class=\"notranslate\">    included do\n      retry_on(QuietRetryError, wait: :exponentially_longer, attempts: quiet_retry_attempts) do\n        # ...\n      end\n    end\n</code></pre></div>\n<p dir=\"auto\">However this ran into a state where the method needed to be defined and run when the concern was included instead of being available later in the job. It would be very fragile to have to define the method before including the concern. This lead to me to looking at if attempts accepted anything besides an integer. It did not but I saw there was already a pattern in place for wait to accept a Proc. I thought if that pattern was repeated for attempts than it would allow more flexibility for configuring attempts.</p>\n<p dir=\"auto\">My original thought was to have the Proc for attempts return a number similar to what the Proc for wait does. However, on thinking about it I decided that still did not leave much flexibility because attempts would still be determined by a number. Instead I switched it to return true/false so if the next attempt occurred could be determined by whatever logic was implemented in the Proc.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request changes ActiveJob retry_on attempts so it will accept a Proc.</p>\n<p dir=\"auto\">ActiveJob retry_on allowed the wait option to be set as a Proc that calculates the wait but did not give the same option for attempts. attempts could be set to only a number of times to attempt or unlimited. However, jobs sometimes need different logic than number of executions to determine if they should try again.</p>\n<p dir=\"auto\">This PR adds support for setting attempts to a Proc that returns either true or false. On true the retry will occur.</p>\n<p dir=\"auto\">As a an example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"retry_on ProcRetryError, attempts: -&gt;(executions) { executions &lt; 2 }\"><pre class=\"notranslate\"><code class=\"notranslate\">retry_on ProcRetryError, attempts: -&gt;(executions) { executions &lt; 2 }\n</code></pre></div>\n<h3 dir=\"auto\">Additional information</h3>\n\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> There are no typos in commit messages and comments.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Feature branch is up-to-date with <code class=\"notranslate\">main</code> (if not - rebase it).</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> PR is not in a draft state.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> CI is passing.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/46245",
            "title": "Add Proc as a type for ActiveJob retry_on attempts",
            "date_modified": "2022-10-18T21:34:58.000Z",
            "date_published": "2022-10-14T14:32:44.000Z",
            "author": {
                "name": "rosew",
                "url": "https://github.com/rosew"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4672858?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">At Shopify, we have been using different flavours of concurrency within <code class=\"notranslate\">ActiveJob</code> for several years.<br>\nThis year we have consolidated all of this functionality into one API method called <code class=\"notranslate\">concurrency</code>.<br>\nAfter validating that this works for the scale of Shopify we decided to port the API upstream.</p>\n<p dir=\"auto\">There have been others attempt to add locking to <code class=\"notranslate\">ActiveJob</code> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"354337924\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/33728\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/33728/hovercard\" href=\"https://github.com/rails/rails/pull/33728\">#33728</a></p>\n<p dir=\"auto\">While that functionality has nothing wrong, we have identified that locking is not enough as a concurrency primitive.</p>\n<p dir=\"auto\">At Shopify, we allow developers to specify multiple concurrency options for there jobs:</p>\n<p dir=\"auto\">In all examples below, <code class=\"notranslate\">keys</code> is the array of keys that will help build a unique concurrency key from the job arguments.</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">EndToEnd</code> where a job holds a concurrency ticket from the moment gets enqueue until the job is performed. When any jobs that try to enter the queue, we check if the concurrent limit is reached, and if it is, we drop the job.<br>\n<code class=\"notranslate\">concurrency(limit: 1, keys: ['checkout_id'])</code></li>\n</ul>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class PaymentProcessingJob &lt; ActiveJob\n  # We only allow one job to be in the queue and processing at all times.\n  # If a job tries to enter the queue while another job with the same checkout_id\n  # is in the queue or performing, we drop the new job.\n\n  # Do not want to charge the same checkout twice :)\n  concurrency(limit: 1, keys: ['checkout_id'])\n\n  def perform(params)\n    # Logic\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">PaymentProcessingJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>\n  <span class=\"pl-c\"># We only allow one job to be in the queue and processing at all times.</span>\n  <span class=\"pl-c\"># If a job tries to enter the queue while another job with the same checkout_id</span>\n  <span class=\"pl-c\"># is in the queue or performing, we drop the new job.</span>\n\n  <span class=\"pl-c\"># Do not want to charge the same checkout twice :)</span>\n  <span class=\"pl-en\">concurrency</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">limit</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">keys</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'checkout_id'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">params</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># Logic</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">EnqueueLimit</code> where a job holds a concurrency ticket from the moment gets enqueue until the jobs get dequeued. When any jobs that try to enter the queue, we check if the concurrent limit is reached and if it is, we drop the job.<br>\n<code class=\"notranslate\">concurrency(limit: { enqueue: 1 }, keys: ['checkout_id'])</code></p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">PerformLimit</code> where a job holds a concurrency ticket from the moment gets dequeued until the jobs get performed. At the time of the dequeue, we check if the concurrency limit is reached and if so we put that job back into the Delayed queue<br>\n<code class=\"notranslate\">concurrency(limit: { performed: 1 }, keys: ['checkout_id'])</code></p>\n</li>\n</ul>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class UpdateThemeSettingsReferencesJob &lt; ActiveJob\n  # We only allow one job to perform at any moment. \n  # This is often used as a form of throttling for expensive operations.\n  # When a job from the head of the queue tries to start performing while another job \n  # with the same key is already performing, we re-enqueue the new job with a delay.\n  concurrency(\n    limit: { perform: 1 },\n    keys: ['shop_id', 'model', 'model_id']\n  )\n\n  def perform(params)\n    # Logic \n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">UpdateThemeSettingsReferencesJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>\n  <span class=\"pl-c\"># We only allow one job to perform at any moment. </span>\n  <span class=\"pl-c\"># This is often used as a form of throttling for expensive operations.</span>\n  <span class=\"pl-c\"># When a job from the head of the queue tries to start performing while another job </span>\n  <span class=\"pl-c\"># with the same key is already performing, we re-enqueue the new job with a delay.</span>\n  <span class=\"pl-en\">concurrency</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-pds\">limit</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-pds\">perform</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-pds\">keys</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'shop_id'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'model'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'model_id'</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">params</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># Logic </span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">BoundedStages</code> is the combination of <code class=\"notranslate\">EnqueueLimit</code> and <code class=\"notranslate\">PerformLimit</code><br>\n<code class=\"notranslate\">concurrency(limit: { enqueue: 1, perform:1  }, keys: ['checkout_id'])</code></li>\n</ul>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class ExpensiveIdempotentSyncJob &lt; ActiveJob\n  # This job syncs the data of this shop with an external service.\n  # Since it is expensive, we want only one sync running at a time for each shop.\n  # We need to enqueue this job whenever something changes that requires syncing.\n  # However, if there is already an ExpensiveSyncJob in the queue, that job will sync all the changes made\n  # before it starts running, so there is no need to enqueue duplicates.\n  concurrency(limit: { enqueue: 1, perform: 1 }, keys: ['shop_id'])\n\n  def perform(params)\n    # Logic \n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">ExpensiveIdempotentSyncJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>\n  <span class=\"pl-c\"># This job syncs the data of this shop with an external service.</span>\n  <span class=\"pl-c\"># Since it is expensive, we want only one sync running at a time for each shop.</span>\n  <span class=\"pl-c\"># We need to enqueue this job whenever something changes that requires syncing.</span>\n  <span class=\"pl-c\"># However, if there is already an ExpensiveSyncJob in the queue, that job will sync all the changes made</span>\n  <span class=\"pl-c\"># before it starts running, so there is no need to enqueue duplicates.</span>\n  <span class=\"pl-en\">concurrency</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">limit</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-pds\">enqueue</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">perform</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">keys</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'shop_id'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">params</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># Logic </span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\"><strong><code class=\"notranslate\">ActiveJob</code> only care about the concurrency at the <code class=\"notranslate\">enqueue</code> (EndToEnd and EnqueueLimit) steps for the <code class=\"notranslate\">perform</code> cases (PerformLimit and BoundedStages) is up to the job adapters to implement it internally. So the adapters can decide to add the functionality or not <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji></strong></p>\n<h3 dir=\"auto\">Other Information</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">timeout</code> option allows specifying for how long a job can hold a concurrency ticket.</p>\n<p dir=\"auto\">At Shopify, we allow other API options like <code class=\"notranslate\">perform_delay</code> which configures the delay in which the job is placed back in the delayed queue when the <code class=\"notranslate\">PerformLimit</code> is reached.</p>\n<p dir=\"auto\">Here is an example of the API in use in one of our jobs:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"concurrency(limit: { perform: 8, perform_delay: 300 }, keys: ['task_name'])\"><pre class=\"notranslate\"><code class=\"notranslate\">concurrency(limit: { perform: 8, perform_delay: 300 }, keys: ['task_name'])\n</code></pre></div>",
            "url": "https://github.com/rails/rails/pull/40337",
            "title": "Add concurrency to ActiveJob",
            "date_modified": "2021-09-08T19:51:12.000Z",
            "date_published": "2020-10-05T18:27:44.000Z",
            "author": {
                "name": "GustavoCaso",
                "url": "https://github.com/GustavoCaso"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5864726?u=e92ece760a4f05c73e36340e2e4ea3abdfc7e128&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">Sidekiq has a useful optimisation called <code class=\"notranslate\">push_bulk</code> that enqueues many jobs at once, eliminating the repeated Redis roundtrips. However, this feature is not exposed through Active Job, so it only works for <code class=\"notranslate\">Sidekiq::Worker</code> jobs. This adds a barrier to Active Job adoption for apps that rely on this feature. It also makes it harder for other queue adapters to implement similar functionality, as they then have to take care of serialization, callbacks, etc. themselves.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This PR adds <code class=\"notranslate\">ActiveJob.perform_all_later([&lt;job 1&gt;, &lt;job2&gt;])</code>, backed by Sidekiq's <code class=\"notranslate\">push_bulk</code> and with a fallback to enqueuing serially if the queue adapter does not support bulk enqueue.</p>\n<h4 dir=\"auto\">Arguments</h4>\n<p dir=\"auto\">It's hard to support the full diversity of ways a Ruby method can be called with a simple array. In particular, jobs with a mix of positional and keyword arguments are difficult to distinguish from jobs with positional arguments that include a hash. Sidekiq gets around this by not supporting keyword arguments.</p>\n<p dir=\"auto\">While it is possible to support everything by treating the last hash in the array of arguments as keywords and requiring jobs with a hash as last positional argument to include an additional empty hash of keyword arguments, based on feedback on the PR, we chose to pass instantiated jobs, so we can let Ruby handle all these complexities.</p>\n<h4 dir=\"auto\">Delay</h4>\n<p dir=\"auto\">Passing in instantiated jobs also makes it easy for the user to specify delays for each job:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"user_jobs = users.map.with_index do |user, user_index|\n  UserJob.new(user).set(wait: user_index.seconds)\nend\nActiveJob.perform_all_later(user_jobs)\"><pre class=\"notranslate\"><span class=\"pl-s1\">user_jobs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">users</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">with_index</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">user</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">user_index</span>|\n  <span class=\"pl-v\">UserJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">set</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">wait</span>: <span class=\"pl-s1\">user_index</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">seconds</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-k\">end</span>\n<span class=\"pl-v\">ActiveJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_all_later</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">user_jobs</span><span class=\"pl-kos\">)</span></pre></div>\n\n<h4 dir=\"auto\">Return value</h4>\n<p dir=\"auto\">The return value of <code class=\"notranslate\">perform_all_later</code> is limited by Sidekiq's current behaviour. <code class=\"notranslate\">push_bulk</code> returns the (provider) ids of all jobs that were successfully enqueued. This means that if we try to enqueue 2 jobs, we may get back a single id with no way of knowing which job it belongs to, so we can't even map it back to Active Job's job ids. I chose to return the number of successfully enqueued jobs, but it may be better to always return <code class=\"notranslate\">true</code> for now, so that we can more easily change it later? In an ideal world, I think the return value would be an array of either the job or <code class=\"notranslate\">false</code>, to mirror the return value of <code class=\"notranslate\">perform_later</code>.</p>\n<h4 dir=\"auto\">Callbacks</h4>\n<p dir=\"auto\">Based on feedback in this PR, <code class=\"notranslate\">perform_all_later</code> does not run any callbacks. This is in line with the Active Record bulk methods, so it shouldn't be too surprising to users and it is clearly stated in the documentation.</p>\n<p dir=\"auto\">There are several issues with running callbacks:</p>\n<ul dir=\"auto\">\n<li>I don't see a good way to run <code class=\"notranslate\">around_enqueue</code> callbacks for each job in a way that the callback begins before the job is enqueued and ends after. Running them another way breaks the assumptions and gives strange results, for instance for Active Job's own enqueue instrumentation.</li>\n<li>The callbacks run on individual jobs, so they can't take advantage of the bulk nature of this method. This could lead to N+1 queries and greatly slow down what is meant to be a performance optimization.</li>\n</ul>\n\n\n<h4 dir=\"auto\">Batching</h4>\n<p dir=\"auto\">Sidekiq recommends batches of no more than 1000 jobs, and their newer bulk API <code class=\"notranslate\">perform_bulk</code> will automatically break them up into batches of that size if you pass a larger array. As recommended batch sizes will vary between back-ends, I'm not sure if this should be something that Active Job handles as opposed to the adapter, although we could make it configurable. This is also easy to add later.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">The performance benefit for 1000 jobs can be more than an order of magnitude:</p>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Enqueue type</th>\n<th>Serial time (ms)</th>\n<th>Bulk time (ms)</th>\n<th>Speedup</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Raw Sidekiq</td>\n<td>2661</td>\n<td>119</td>\n<td>22x</td>\n</tr>\n<tr>\n<td>Active Job Sidekiq</td>\n<td>2853</td>\n<td>208</td>\n<td>14x</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">(Measured in a simple test app in our production environment.)</p>\n<p dir=\"auto\">See also <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"628430906\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/39499\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/39499/hovercard\" href=\"https://github.com/rails/rails/pull/39499\">#39499</a> which was a previous stab at this and where I stole the name from (<g-emoji class=\"g-emoji\" alias=\"bow\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f647.png\">🙇</g-emoji> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vinistock/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vinistock\">@vinistock</a>).</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CI is passing.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/46603",
            "title": "Add `perform_all_later` to enqueue multiple jobs at once",
            "date_modified": "2022-12-17T13:51:18.000Z",
            "date_published": "2022-11-28T20:03:24.000Z",
            "author": {
                "name": "Mangara",
                "url": "https://github.com/Mangara"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/771968?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1286607479\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45476\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45476/hovercard\" href=\"https://github.com/rails/rails/pull/45476\">#45476</a>, <code class=\"notranslate\">ActiveRecord::Base.destroy_association_async_job</code> was made to accept a string which would be lazily constantized, to avoid loading <code class=\"notranslate\">ActiveJob::Base</code> too soon.  However, due to the way <code class=\"notranslate\">class_attribute</code> values are written, <em>each subclass</em> calling <code class=\"notranslate\">destroy_association_async_job</code> will <a href=\"https://github.com/rails/rails/pull/45476/files#diff-4411c7993e3f8ccfd8e09f44a81f10dfac3ea7dbd44cabd60b369040a00be324R28\">allocate a <code class=\"notranslate\">_destroy_association_async_job</code> singleton method</a> regardless of whether the subclass assigns a custom job value.</p>\n<p dir=\"auto\">Additionally, <code class=\"notranslate\">class_attribute</code> requires using a dummy attribute name so that the post-processing reader method is not overwritten when the attribute is set.  This is particularly <a href=\"https://github.com/rails/rails/pull/45476/files#diff-4411c7993e3f8ccfd8e09f44a81f10dfac3ea7dbd44cabd60b369040a00be324R35-R36\">cumbersome</a> when instance accessors are involved.</p>\n<p dir=\"auto\">This PR re-implements <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1286607479\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45476\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45476/hovercard\" href=\"https://github.com/rails/rails/pull/45476\">#45476</a> by adding support for a transform block to <code class=\"notranslate\">class_attribute</code>.  A transform block is applied to an attribute value when that value is first read, and the result is memoized as the actual value of the attribute.  Thus, using a transform block, <code class=\"notranslate\">destroy_association_async_job</code> can lazily constantize and memoize the result, without allocating additional singleton methods, and without juggling attribute names.</p>\n<p dir=\"auto\">The PR also applies the same technique to <code class=\"notranslate\">ActionMailer::Base.delivery_job</code>.  <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes pull request #45486.\">Closes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1287965823\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45486\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45486/hovercard\" href=\"https://github.com/rails/rails/pull/45486\">#45486</a>.</p>\n<p dir=\"auto\">I wrote about a few of the alternatives I considered in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1305305580\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45603\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45603/hovercard\" href=\"https://github.com/rails/rails/pull/45603\">#45603</a>.  <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes pull request #45603.\">Closes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1305305580\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45603\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45603/hovercard\" href=\"https://github.com/rails/rails/pull/45603\">#45603</a>.</p>",
            "url": "https://github.com/rails/rails/pull/45622",
            "title": "Use `class_attribute` transform block for job config",
            "date_modified": "2022-07-28T06:53:09.000Z",
            "date_published": "2022-07-18T20:56:53.000Z",
            "author": {
                "name": "jonathanhefner",
                "url": "https://github.com/jonathanhefner"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3263575?u=92ee5d4a6a643b31856ac542ba409309c5389493&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">I am trying to handle the case where the last step of a direct upload fails (the <code class=\"notranslate\">PATCH</code> call to my model), and I have noticed an odd behaviour. Here goes:</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ul dir=\"auto\">\n<li>Set up the <code class=\"notranslate\">Profile</code> model with <code class=\"notranslate\">has_one_attached :document</code>.</li>\n<li>Create an instance of <code class=\"notranslate\">Profile</code> (referred to as <code class=\"notranslate\">profile</code>)</li>\n<li>Use a direct upload form to attach a document to <code class=\"notranslate\">profile</code> (controller and view code below)</li>\n<li>Everything works fine so far, I can see the image and its filename.</li>\n<li>Force a failure in the <code class=\"notranslate\">PATCH</code> call to <code class=\"notranslate\">/profile/document</code>: intentionally modify a validation in the Profile model so that any call to Profile#update fails</li>\n<li>Upload another document for the same Profile, and watch the <code class=\"notranslate\">PATCH</code> fail.</li>\n</ul>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When this last step fails, I'd expect the whole state of my app to go back to its state from before the beginning of the upload process (the <code class=\"notranslate\">POST</code> call to <code class=\"notranslate\">rails/active_storage/direct_uploads</code>).</p>\n<p dir=\"auto\">I'd also expect the former file to still be there on the storage, and the new one to not be there.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The Attachment record for my Profile is still the same, but the original Blob was destroyed, and replaced by a new one (created by the first <code class=\"notranslate\">POST</code> to <code class=\"notranslate\">rails/active_storage/direct_uploads</code>). The Attachment points to the destroyed Blob.</p>\n<p dir=\"auto\"><code class=\"notranslate\">profile.document.attached?</code> returns <code class=\"notranslate\">true</code>, but other methods, e.g. <code class=\"notranslate\">filename</code> or <code class=\"notranslate\">service_url</code> are undefined. This breaks my views: the if passes, the statements inside break.</p>\n<p dir=\"auto\">S3/Disk contains the new file, and does not contain the former one.</p>\n<p dir=\"auto\">The logs tell me that the first call from the client to <code class=\"notranslate\">/rails/active_storage/direct_uploads</code> creates a Blob. Then, after the upload to S3 is done, the <code class=\"notranslate\">PATCH</code> call to <code class=\"notranslate\">/profile/document</code> destroys the former Attachment and creates a new one, but this is all rolled back when my validation fails. However, it also enqueues a job that purges the former Blob, instead of purging the newly created one.</p>\n<p dir=\"auto\">From my understanding, what this job does should depend upon the success of the <code class=\"notranslate\">PATCH</code> call. Is this an actual bug, or am I supposed to handle this manually? Or maybe there's just another way to write things and make it work automagically?</p>\n<p dir=\"auto\">One workaround I found is to call purge or detach on the document when the update fails. From a user's point of view it removes the former document, which isn't so nice, but at least my views don't break. The Attachment is destroyed, the Blob remains, the former file is destroyed, the new one is stored. This fix is commented out in the code sample.</p>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\">I get the bug on my local environment, both with S3 and Disk as targets.</p>\n<p dir=\"auto\"><strong>Rails version</strong>:<br>\nRails 5.2.0.rc1</p>\n<p dir=\"auto\"><strong>Ruby version</strong>:<br>\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin17]</p>\n<h3 dir=\"auto\">Code samples</h3>\n<p dir=\"auto\">Adapted for better readability.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class ProfilesController &lt; ApplicationController\n  def update\n    if current_user.profile.update(document_params)\n      flash[:notice] = &quot;Your document was successfully uploaded&quot;\n    else\n      # current_profile.reload.identity_document.purge # The fix\n      flash[:alert] = &quot;Something went wrong.&quot;\n    end\n    redirect_to my_form_url\n  end\n\n  private\n\n  def document_params\n    params.require(:profile).permit(:document)\n  end\nend\"><pre class=\"notranslate\"><code class=\"notranslate\">class ProfilesController &lt; ApplicationController\n  def update\n    if current_user.profile.update(document_params)\n      flash[:notice] = \"Your document was successfully uploaded\"\n    else\n      # current_profile.reload.identity_document.purge # The fix\n      flash[:alert] = \"Something went wrong.\"\n    end\n    redirect_to my_form_url\n  end\n\n  private\n\n  def document_params\n    params.require(:profile).permit(:document)\n  end\nend\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;% if @profile.document.attached? %&gt;\n    &lt;%= @profile.document.filename %&gt;\n    &lt;%= image_tag @profile.document %&gt;\n&lt;% else %&gt;\n    No document yet\n&lt;% end %&gt;\n\n&lt;%= form_for @profile do |f| %&gt;\n    &lt;%= f.file_field :document, direct_upload: true %&gt;\n    &lt;%= f.submit %&gt;\n&lt;% end %&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">&lt;% if @profile.document.attached? %&gt;\n    &lt;%= @profile.document.filename %&gt;\n    &lt;%= image_tag @profile.document %&gt;\n&lt;% else %&gt;\n    No document yet\n&lt;% end %&gt;\n\n&lt;%= form_for @profile do |f| %&gt;\n    &lt;%= f.file_field :document, direct_upload: true %&gt;\n    &lt;%= f.submit %&gt;\n&lt;% end %&gt;\n</code></pre></div>\n<p dir=\"auto\">Thanks in advance for your help!</p>",
            "url": "https://github.com/rails/rails/issues/31985",
            "title": "ActiveStorage: invalid Attachment when last step of direct upload fails",
            "date_modified": "2022-10-29T18:10:15.000Z",
            "date_published": "2018-02-13T17:56:05.000Z",
            "author": {
                "name": "SimonFrr",
                "url": "https://github.com/SimonFrr"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8219340?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n\n<p dir=\"auto\">ActiveJob serializes <code class=\"notranslate\">Symbol</code> <code class=\"notranslate\">Hash</code> keys by stringifying them, and storing an array of keys to be symbolized on deserialization as <code class=\"notranslate\">_aj_symbol_keys</code>. This means that if a <code class=\"notranslate\">Hash</code> has both <code class=\"notranslate\">Symbol</code> and <code class=\"notranslate\">String</code> keys with the same contents, they will collide.</p>\n<p dir=\"auto\">Specifically, the resulting hash ends up containing only a pair consisting of:</p>\n<ul dir=\"auto\">\n<li>the symbol key</li>\n<li>the last value</li>\n</ul>\n<p dir=\"auto\">This PR adds a check for this and logs a deprecation warning. It also introduces a setting to <code class=\"notranslate\">raise</code> instead of logging the warning, with the intention of making this behavior the default in Rails 7.2/8.0.</p>\n<h3 dir=\"auto\">Other Information</h3>\n\n\n<p dir=\"auto\">I have left a number of placeholders for the time being, because I wanted to get initial review and confirm we want to do this, before investing the time to write the docs, deprecation message, changelog, etc.</p>\n<hr>\n<p dir=\"auto\">cc. <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Mangara/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Mangara\">@Mangara</a>, who mentioned this in Slack</p>",
            "url": "https://github.com/rails/rails/pull/45676",
            "title": "Detect colliding keys in Active Job Hash serialization",
            "date_modified": "2022-07-28T07:38:01.000Z",
            "date_published": "2022-07-28T07:37:57.000Z",
            "author": {
                "name": "sambostock",
                "url": "https://github.com/sambostock"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/771968?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1286607479\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45476\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45476/hovercard\" href=\"https://github.com/rails/rails/pull/45476\">#45476</a>, <code class=\"notranslate\">ActiveRecord::Base.destroy_association_async_job</code> was made to accept a string which would lazily be constantized, to avoid loading <code class=\"notranslate\">ActiveJob::Base</code> too soon.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1287965823\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45486\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45486/hovercard\" href=\"https://github.com/rails/rails/pull/45486\">#45486</a> intends to solve the same problem for <code class=\"notranslate\">ActionMailer::Base.delivery_job</code>.</p>\n<p dir=\"auto\">While thinking about how to simplify the code from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1286607479\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45476\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45476/hovercard\" href=\"https://github.com/rails/rails/pull/45476\">#45476</a> for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1287965823\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45486\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45486/hovercard\" href=\"https://github.com/rails/rails/pull/45486\">#45486</a>, I realized that <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1286607479\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45476\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45476/hovercard\" href=\"https://github.com/rails/rails/pull/45476\">#45476</a> allocates a <code class=\"notranslate\">_destroy_association_async_job</code> method for every constantize.  e.g. Even if <code class=\"notranslate\">Post</code> and <code class=\"notranslate\">Comment</code> classes do not set a custom destroy job, <a href=\"https://github.com/rails/rails/pull/45476/files#diff-4411c7993e3f8ccfd8e09f44a81f10dfac3ea7dbd44cabd60b369040a00be324R28\"><code class=\"notranslate\">self._destroy_association_async_job = _destroy_association_async_job.constantize</code></a> will define a new singleton method for each class.</p>\n<p dir=\"auto\">This could be addressed by calling <code class=\"notranslate\">_destroy_association_async_job=</code> on the method owner:</p>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"index 0aa59fe885..b981f2e934 100644\n--- a/activerecord/lib/active_record/core.rb\n+++ b/activerecord/lib/active_record/core.rb\n@@ -25,7 +25,8 @@ module Core\n       # The job class used to destroy associations in the background.\n       def self.destroy_association_async_job\n         if _destroy_association_async_job.is_a?(String)\n-          self._destroy_association_async_job = _destroy_association_async_job.constantize\n+          owner = method(:_destroy_association_async_job=).owner\n+          owner._destroy_association_async_job = _destroy_association_async_job.constantize\n         end\n         _destroy_association_async_job\n       rescue NameError =&gt; error\"><pre class=\"notranslate\">index 0aa59fe885..b981f2e934 100644\n<span class=\"pl-md\">--- a/activerecord/lib/active_record/core.rb</span>\n<span class=\"pl-mi1\">+++ b/activerecord/lib/active_record/core.rb</span>\n<span class=\"pl-mdr\">@@ -25,7 +25,8 @@</span> module Core\n       # The job class used to destroy associations in the background.\n       def self.destroy_association_async_job\n         if _destroy_association_async_job.is_a?(String)\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>          self._destroy_association_async_job = _destroy_association_async_job.constantize</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>          owner = method(:_destroy_association_async_job=).owner</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>          owner._destroy_association_async_job = _destroy_association_async_job.constantize</span>\n         end\n         _destroy_association_async_job\n       rescue NameError =&gt; error</pre></div>\n<p dir=\"auto\">But that makes the code even more cumbersome to replicate for e.g. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1287965823\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45486\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45486/hovercard\" href=\"https://github.com/rails/rails/pull/45486\">#45486</a>.  And this seems like a pattern that may reoccur.</p>\n<p dir=\"auto\">This <strong>draft</strong> PR proposes a <code class=\"notranslate\">class_attribute</code> <code class=\"notranslate\">:constantize</code> option that would auto-constantize string values without allocating any additional singleton methods.</p>\n<p dir=\"auto\">On one hand, a <code class=\"notranslate\">:constantize</code> option feels over-specific.  On the other hand, it is an extremely simple and efficient implementation.</p>\n<p dir=\"auto\">Another alternative I considered was a <a href=\"https://github.com/jonathanhefner/rails/commit/8b533464fde986125f1f89580e1da4362937bbd5\"><code class=\"notranslate\">class_attribute</code> <code class=\"notranslate\">:lazy</code> option</a>.  It feels less over-specific, but requires wrapping values in a proc.</p>\n<p dir=\"auto\">And yet another alternative I considered was a <a href=\"https://github.com/jonathanhefner/rails/commit/06b2db17ce59a371a1944843476b286323b5259d\"><code class=\"notranslate\">ConstantizingProxy</code></a> class.  It is the least invasive / most orthogonal implementation, but it requires wrapping values in a proxy object, which is even less convenient than a proc.</p>",
            "url": "https://github.com/rails/rails/pull/45603",
            "title": "Add `:constantize` option for `class_attribute`",
            "date_modified": "2022-07-19T16:36:30.000Z",
            "date_published": "2022-07-14T21:26:48.000Z",
            "author": {
                "name": "jonathanhefner",
                "url": "https://github.com/jonathanhefner"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2741?u=387c085565dc648f11d835558ad1b6d524ddc91d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is a common source of job errors:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Project &lt; ApplicationRecord\n  after_create -&gt; { NotifyProjectParticipants.perform_later self }\nend\n\nclass NotifyProjectParticipants &lt; ApplicationJob\n  def perform(project)\n    # This will explode with a ActiveJob::DeserializationError,\n    #  if the job runs before the INSERT transaction for the new project completes.\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">Project</span> &lt; <span class=\"pl-v\">ApplicationRecord</span>\n  <span class=\"pl-en\">after_create</span> <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">NotifyProjectParticipants</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span> <span class=\"pl-smi\">self</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">NotifyProjectParticipants</span> &lt; <span class=\"pl-v\">ApplicationJob</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">project</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># This will explode with a ActiveJob::DeserializationError,</span>\n    <span class=\"pl-c\">#  if the job runs before the INSERT transaction for the new project completes.</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">It's insidious too. Because it'll often work in development, then fail in production, when your job queue is really fast, and your database might be bogged down.</p>\n<p dir=\"auto\">The proper way is of course:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Project &lt; ApplicationRecord\n  after_create_commit -&gt; { NotifyProjectParticipants.perform_later self }\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">Project</span> &lt; <span class=\"pl-v\">ApplicationRecord</span>\n  <span class=\"pl-en\">after_create_commit</span> <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">NotifyProjectParticipants</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span> <span class=\"pl-smi\">self</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">But that's easy to forget. So I suggest that we create a new default that disallow jobs from being scheduled within transactions. You should be able to turn that off, but it would be a better default, since it would catch this class for errors for more people before they deploy to production.</p>",
            "url": "https://github.com/rails/rails/issues/26045",
            "title": "Prevent jobs from being scheduled within transactions",
            "date_modified": "2021-03-09T23:05:04.000Z",
            "date_published": "2016-08-03T17:21:16.000Z",
            "author": {
                "name": "dhh",
                "url": "https://github.com/dhh"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/619324?u=d70bb67108fff36394d8534f91610daf31ea17fe&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">See <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"916099836\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/42430\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/42430/hovercard\" href=\"https://github.com/rails/rails/issues/42430\">#42430</a></p>\n<p dir=\"auto\">There are two ways for deleting an associated record:</p>\n<ol dir=\"auto\">\n<li>by deleting it explicitly (i.e. <code class=\"notranslate\">parent.has_many.first.destroy!</code>),</li>\n<li>by replacing the association (i.e. <code class=\"notranslate\">parent.has_many = []</code>).</li>\n</ol>\n<p dir=\"auto\">Previously, Active Record respected the asynchronous deletion only with<br>\nthe first approach. When replacing the association, it just detached the<br>\nrecord(s) from the parent without removing them from the database (via<br>\nenqueuing relevant background job).</p>\n<p dir=\"auto\">Make the dependent option consistent and cleanup records from the<br>\ndatabase even when removing them via replacing the association.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #42430.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"916099836\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/42430\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/42430/hovercard\" href=\"https://github.com/rails/rails/issues/42430\">#42430</a></p>",
            "url": "https://github.com/rails/rails/pull/42452",
            "title": "Respect the `dependent: :destroy_async` when replacing the association",
            "date_modified": "2022-02-25T11:04:38.000Z",
            "date_published": "2021-06-11T11:49:49.000Z",
            "author": {
                "name": "smt116",
                "url": "https://github.com/smt116"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4403594?u=e758135f56109a0a17dc54154c5ac9e624590153&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<ul dir=\"auto\">\n<li>Taking a cue from <a href=\"https://github.com/rails/rails/pull/38545#discussion_r388377526\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/38545/hovercard\">this</a> discussion with <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jeremy/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jeremy\">@jeremy</a>, the PR attempts to fix an issue that is mainly concerned with negative jitter values.</li>\n<li>If the jitter value is negative, the resultant <code class=\"notranslate\">scheduled_at</code> for the job may be set to a time before the current time.</li>\n<li>Which may result in unexpected behavior depending on the queuing backend used.</li>\n<li>\n<h4 dir=\"auto\">Proposed Solution</h4>\n<ul dir=\"auto\">\n<li>The changes verify that the value is either positive numeric or zero and raise the associated error if not</li>\n<li>Associated tests are added to validate the flow for negative jitter values and other probable invalid values like string or boolean</li>\n</ul>\n</li>\n<li>\n<h4 dir=\"auto\">Note</h4>\n<ul dir=\"auto\">\n<li>The chances of negative or invalid <code class=\"notranslate\">jitter</code> value are very low considering the default flow and very good documentation around <code class=\"notranslate\">jitter</code> usage. But cannot be ruled out in cases where for some reason the <code class=\"notranslate\">jitter</code> value is dynamically passed</li>\n</ul>\n</li>\n</ul>\n<h3 dir=\"auto\">Other Information</h3>\n<ul dir=\"auto\">\n<li>Raising the PR more than 2 years after <a href=\"https://github.com/rails/rails/pull/38545#discussion_r388377526\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/38545/hovercard\">the suggestion</a> given by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jeremy/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jeremy\">@jeremy</a> , better late than never I guess :)</li>\n</ul>\n\n",
            "url": "https://github.com/rails/rails/pull/45629",
            "title": "Raise Argument error for invalid jitter values",
            "date_modified": "2022-07-21T18:05:07.000Z",
            "date_published": "2022-07-20T13:28:57.000Z",
            "author": {
                "name": "aditya-vector",
                "url": "https://github.com/aditya-vector"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/453584?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Enqueueing lots of jobs from a running job causes memory to bloat. This seems to be caused by the <code class=\"notranslate\">ActiveJob::LogSubscriber</code>, which keeps a stack of all events (e.g. <code class=\"notranslate\">enqueue.active_job</code>) that happen during another event (<code class=\"notranslate\">perform.active_job</code>).</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">This job is written to show the bloat:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class TestJob &lt; ApplicationJob\n  queue_as :test\n  \n  def perform\n    10.times do\n      SecondTestJob.perform_later\n\n      subscriber = ObjectSpace.each_object(ActiveJob::LogSubscriber).first\n      dangling_event = subscriber&amp;.send(:event_stack)&amp;.first\n      if dangling_event\n        puts &quot;Found a dangling event with #{dangling_event.children.size} children.&quot;\n      else\n        puts 'There are no dangling events.'\n      end\n    end\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">TestJob</span> &lt; <span class=\"pl-v\">ApplicationJob</span>\n  <span class=\"pl-en\">queue_as</span> <span class=\"pl-pds\">:test</span>\n  \n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n    <span class=\"pl-c1\">10</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">times</span> <span class=\"pl-k\">do</span>\n      <span class=\"pl-v\">SecondTestJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n\n      <span class=\"pl-s1\">subscriber</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">ObjectSpace</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">each_object</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">LogSubscriber</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">first</span>\n      <span class=\"pl-s1\">dangling_event</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">subscriber</span>&amp;.<span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:event_stack</span><span class=\"pl-kos\">)</span>&amp;.<span class=\"pl-en\">first</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-s1\">dangling_event</span>\n        <span class=\"pl-en\">puts</span> <span class=\"pl-s\">\"Found a dangling event with <span class=\"pl-s1\"><span class=\"pl-kos\">#{</span><span class=\"pl-s1\">dangling_event</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">children</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">size</span><span class=\"pl-kos\">}</span></span> children.\"</span>\n      <span class=\"pl-k\">else</span>\n        <span class=\"pl-en\">puts</span> <span class=\"pl-s\">'There are no dangling events.'</span>\n      <span class=\"pl-k\">end</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">It will print <code class=\"notranslate\">Found a dangling event with X children.</code>, where <code class=\"notranslate\">X</code> is growing with the number of jobs that have been enqueued. This means each time a new job is enqueued, we will store an additional event and not release it until <code class=\"notranslate\">TestJob</code> finished performing.</p>\n<p dir=\"auto\">If the code is not excuted as active job (e.g. <code class=\"notranslate\">TestJob.new.perform</code>), the output is <code class=\"notranslate\">There are no dangling events.</code>, which means no events are accumulated and memory remains stable.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">I can enqueue an infinite amount of jobs from a job, without running out of memory.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Enqueuing jobs from a job is memory constrained, because events will pile up. This is especially a problem, if enqueueing jobs with large parameters, since the parameters will be referenced in memory as well. Example:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class TestLargeObjectJob &lt; ApplicationJob\n  queue_as :test\n  \n  def perform\n    10.times do\n      # large_object  should be garbage collectible after every iteration, but the dangling event will keep a reference to it, so large_object will never be collected\n      large_object = 'A' * 1_000_000\n      SecondTestJob.perform_later(large_object)\n    end\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">TestLargeObjectJob</span> &lt; <span class=\"pl-v\">ApplicationJob</span>\n  <span class=\"pl-en\">queue_as</span> <span class=\"pl-pds\">:test</span>\n  \n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n    <span class=\"pl-c1\">10</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">times</span> <span class=\"pl-k\">do</span>\n      <span class=\"pl-c\"># large_object  should be garbage collectible after every iteration, but the dangling event will keep a reference to it, so large_object will never be collected</span>\n      <span class=\"pl-s1\">large_object</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'A'</span> * <span class=\"pl-c1\">1_000_000</span>\n      <span class=\"pl-v\">SecondTestJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">large_object</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: 7.0.4</p>\n<p dir=\"auto\"><strong>Ruby version</strong>: 3.0.0</p>",
            "url": "https://github.com/rails/rails/issues/46185",
            "title": "Memory bloat in ActiveJob::LogSubscriber",
            "date_modified": "2022-10-10T09:28:15.000Z",
            "date_published": "2022-10-04T07:07:48.000Z",
            "author": {
                "name": "NobodysNightmare",
                "url": "https://github.com/NobodysNightmare"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/82798?u=7ac2d8d2b07be42b6bffccd8ba0d3a7cc1d49619&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n\n<p dir=\"auto\">This Pull Request has been created because I noticed a difference in behavior when inspecting <code class=\"notranslate\">ActiveJob::Core#scheduled_at</code> in non-test environments vs when inspecting in while executing tests.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">Prior to this change, <code class=\"notranslate\">ActiveJob::TestHelper</code> would set <code class=\"notranslate\">ActiveJob::Core#scheduled_at</code> to a <code class=\"notranslate\">Time</code> object in tests, however this attribute was set to a <code class=\"notranslate\">Float</code> objects in non-test environments:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/rails/rails/blob/d1aa6af5cc093164043641e99e30a9c8c60aa159/activejob/lib/active_job/core.rb#L161\">rails/activejob/lib/active_job/core.rb</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 161\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/rails/rails/commit/d1aa6af5cc093164043641e99e30a9c8c60aa159\">d1aa6af</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L161\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"161\"></td>\n          <td id=\"LC161\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">self</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">scheduled_at</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\">:wait</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">seconds</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">from_now</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">to_f</span> <span class=\"pl-k\">if</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\">:wait</span><span class=\"pl-kos\">]</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">This change ensures parity in all runtime environments.</p>\n<h3 dir=\"auto\">Additional information</h3>\n\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> There are no typos in commit messages and comments.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Feature branch is up-to-date with <code class=\"notranslate\">main</code> (if not - rebase it).</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> PR is not in a draft state.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CI is passing.</li>\n</ul>\n",
            "url": "https://github.com/rails/rails/pull/46258",
            "title": "fix: Ensure `ActiveJob::TestHelper` sets `scheduled_at` to a `Float`",
            "date_modified": "2022-11-28T17:19:55.000Z",
            "date_published": "2022-10-17T18:58:56.000Z",
            "author": {
                "name": "arielvalentin",
                "url": "https://github.com/arielvalentin"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5279284?u=40cbc3d0cb818159797fa8856c88c9e87fd8bd49&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n\n<p dir=\"auto\">This Pull Request has been created because there is currently no description of the ActiveJob --parent option introduced in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1294952934\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45528\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45528/hovercard\" href=\"https://github.com/rails/rails/pull/45528\">#45528</a> in the rails guide</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">ActiveJob: Add parent option to Active Job guide</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> There are no typos in commit messages and comments.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Feature branch is up-to-date with <code class=\"notranslate\">main</code> (if not - rebase it).</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> PR is not in a draft state.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CI is passing.</li>\n</ul>\n",
            "url": "https://github.com/rails/rails/pull/46194",
            "title": "ActiveJob: Add parent option to Active Job guides [ci-skip]",
            "date_modified": "2022-10-17T17:51:52.000Z",
            "date_published": "2022-10-04T17:22:59.000Z",
            "author": {
                "name": "sampatbadhe",
                "url": "https://github.com/sampatbadhe"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/619324?u=d70bb67108fff36394d8534f91610daf31ea17fe&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Steps to reproduce</h3>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Generate a new application:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"rails new AsyncDestroyTestApp --skip-action-mailer --skip-action-mailbox --skip-action-text --skip-active-storage --skip-action-cable --skip-sprockets --skip-spring --skip-listen --skip-javascript --skip-turbolinks --skip-jbuilder --skip-test --skip-system-test --skip-bootsnap\"><pre class=\"notranslate\"><code class=\"notranslate\">rails new AsyncDestroyTestApp --skip-action-mailer --skip-action-mailbox --skip-action-text --skip-active-storage --skip-action-cable --skip-sprockets --skip-spring --skip-listen --skip-javascript --skip-turbolinks --skip-jbuilder --skip-test --skip-system-test --skip-bootsnap\n</code></pre></div>\n</li>\n<li>\n<p dir=\"auto\">Apply the following diff (add models):</p>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"diff --git a/app/models/book.rb b/app/models/book.rb\nnew file mode 100644\nindex 0000000..f1e2a65\n--- /dev/null\n+++ b/app/models/book.rb\n@@ -0,0 +1,3 @@\n+class Book &lt; ApplicationRecord\n+  has_many :tags, dependent: :destroy_async\n+end\ndiff --git a/app/models/tag.rb b/app/models/tag.rb\nnew file mode 100644\nindex 0000000..7b23605\n--- /dev/null\n+++ b/app/models/tag.rb\n@@ -0,0 +1,2 @@\n+class Tag &lt; ApplicationRecord\n+end\ndiff --git a/db/migrate/20210609112034_add_books_and_tags.rb b/db/migrate/20210609112034_add_books_and_tags.rb\nnew file mode 100644\nindex 0000000..baed2c0\n--- /dev/null\n+++ b/db/migrate/20210609112034_add_books_and_tags.rb\n@@ -0,0 +1,8 @@\n+class AddBooksAndTags &lt; ActiveRecord::Migration[6.1]\n+  def change\n+    create_table :books\n+    create_table :tags do |t|\n+      t.references :book, foreign_key: true, null: true\n+    end\n+  end\n+end\ndiff --git a/db/schema.rb b/db/schema.rb\nnew file mode 100644\nindex 0000000..fca4c69\n--- /dev/null\n+++ b/db/schema.rb\n@@ -0,0 +1,24 @@\n+# This file is auto-generated from the current state of the database. Instead\n+# of editing this file, please use the migrations feature of Active Record to\n+# incrementally modify your database, and then regenerate this schema definition.\n+#\n+# This file is the source Rails uses to define your schema when running `bin/rails\n+# db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to\n+# be faster and is potentially less error prone than running all of your\n+# migrations from scratch. Old migrations may fail to apply correctly if those\n+# migrations use external dependencies or application code.\n+#\n+# It's strongly recommended that you check this file into your version control system.\n+\n+ActiveRecord::Schema.define(version: 2021_06_09_112034) do\n+\n+  create_table &quot;books&quot;, force: :cascade do |t|\n+  end\n+\n+  create_table &quot;tags&quot;, force: :cascade do |t|\n+    t.integer &quot;book_id&quot;\n+    t.index [&quot;book_id&quot;], name: &quot;index_tags_on_book_id&quot;\n+  end\n+\n+  add_foreign_key &quot;tags&quot;, &quot;books&quot;\n+end\"><pre class=\"notranslate\"><span class=\"pl-c1\">diff --git a/app/models/book.rb b/app/models/book.rb</span>\nnew file mode 100644\nindex 0000000..f1e2a65\n<span class=\"pl-md\">--- /dev/null</span>\n<span class=\"pl-mi1\">+++ b/app/models/book.rb</span>\n<span class=\"pl-mdr\">@@ -0,0 +1,3 @@</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>class Book &lt; ApplicationRecord</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  has_many :tags, dependent: :destroy_async</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>end</span>\n<span class=\"pl-c1\">diff --git a/app/models/tag.rb b/app/models/tag.rb</span>\nnew file mode 100644\nindex 0000000..7b23605\n<span class=\"pl-md\">--- /dev/null</span>\n<span class=\"pl-mi1\">+++ b/app/models/tag.rb</span>\n<span class=\"pl-mdr\">@@ -0,0 +1,2 @@</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>class Tag &lt; ApplicationRecord</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>end</span>\n<span class=\"pl-c1\">diff --git a/db/migrate/20210609112034_add_books_and_tags.rb b/db/migrate/20210609112034_add_books_and_tags.rb</span>\nnew file mode 100644\nindex 0000000..baed2c0\n<span class=\"pl-md\">--- /dev/null</span>\n<span class=\"pl-mi1\">+++ b/db/migrate/20210609112034_add_books_and_tags.rb</span>\n<span class=\"pl-mdr\">@@ -0,0 +1,8 @@</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>class AddBooksAndTags &lt; ActiveRecord::Migration[6.1]</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  def change</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    create_table :books</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    create_table :tags do |t|</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>      t.references :book, foreign_key: true, null: true</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    end</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  end</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>end</span>\n<span class=\"pl-c1\">diff --git a/db/schema.rb b/db/schema.rb</span>\nnew file mode 100644\nindex 0000000..fca4c69\n<span class=\"pl-md\">--- /dev/null</span>\n<span class=\"pl-mi1\">+++ b/db/schema.rb</span>\n<span class=\"pl-mdr\">@@ -0,0 +1,24 @@</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span># This file is auto-generated from the current state of the database. Instead</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span># of editing this file, please use the migrations feature of Active Record to</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span># incrementally modify your database, and then regenerate this schema definition.</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>#</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span># This file is the source Rails uses to define your schema when running `bin/rails</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span># db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span># be faster and is potentially less error prone than running all of your</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span># migrations from scratch. Old migrations may fail to apply correctly if those</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span># migrations use external dependencies or application code.</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>#</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span># It's strongly recommended that you check this file into your version control system.</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span></span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>ActiveRecord::Schema.define(version: 2021_06_09_112034) do</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span></span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  create_table \"books\", force: :cascade do |t|</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  end</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span></span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  create_table \"tags\", force: :cascade do |t|</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    t.integer \"book_id\"</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    t.index [\"book_id\"], name: \"index_tags_on_book_id\"</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  end</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span></span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  add_foreign_key \"tags\", \"books\"</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>end</span></pre></div>\n</li>\n</ol>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Consistent behavior when removing records asynchronously via passing a new list to the <code class=\"notranslate\">has_many</code> association (replacing). When you delete an object using <code class=\"notranslate\">parent.has_many_attr.first.destroy!</code>, Active Record will update the child's foreign key to <code class=\"notranslate\">nil</code> and schedule a job to delete an associated record from the database. However, when you will replace the \"has many\" association and delete the child (using <code class=\"notranslate\">parent.update!(has_many_attr: [])</code>) it will only update the foreign key. It won't actually cleanup them from the database:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"irb(main):001:0&gt; book = Book.create!(tags: [Tag.new, Tag.new])\n   (2.4ms)  SELECT sqlite_version(*)\n  TRANSACTION (0.1ms)  begin transaction\n  Book Create (1.4ms)  INSERT INTO &quot;books&quot; DEFAULT VALUES\n  Tag Create (1.2ms)  INSERT INTO &quot;tags&quot; (&quot;book_id&quot;) VALUES (?)  [[&quot;book_id&quot;, 1]]\n  Tag Create (0.2ms)  INSERT INTO &quot;tags&quot; (&quot;book_id&quot;) VALUES (?)  [[&quot;book_id&quot;, 1]]\n  TRANSACTION (2.1ms)  commit transaction\n=&gt; #&lt;Book:0x00007fcfa24c0c60 id: 1&gt;\nirb(main):002:0&gt; Tag.all\n  Tag Load (0.3ms)  SELECT &quot;tags&quot;.* FROM &quot;tags&quot;\n=&gt; [#&lt;Tag:0x00007fcfa258a420 id: 1, book_id: 1&gt;, #&lt;Tag:0x00007fcfa258a2b8 id: 2, book_id: 1&gt;]\nirb(main):003:0&gt; book.tags.last.destroy!\n  TRANSACTION (0.1ms)  begin transaction\n  Tag Destroy (0.8ms)  DELETE FROM &quot;tags&quot; WHERE &quot;tags&quot;.&quot;id&quot; = ?  [[&quot;id&quot;, 2]]\n  TRANSACTION (1.5ms)  commit transaction\n=&gt; #&lt;Tag:0x00007fcfa24c31b8 id: 2, book_id: 1&gt;\nirb(main):004:0&gt; Tag.all\n  Tag Load (0.2ms)  SELECT &quot;tags&quot;.* FROM &quot;tags&quot;\n=&gt; [#&lt;Tag:0x00007fcfa26c37b0 id: 1, book_id: 1&gt;]\nirb(main):005:0&gt; book.update!(tags: [])\n  TRANSACTION (0.1ms)  begin transaction\n  Tag Update All (1.0ms)  UPDATE &quot;tags&quot; SET &quot;book_id&quot; = ? WHERE &quot;tags&quot;.&quot;book_id&quot; = ? AND &quot;tags&quot;.&quot;id&quot; IN (?, ?)  [[&quot;book_id&quot;, nil], [&quot;book_id&quot;, 1], [nil, 1], [nil, 2]]\n  TRANSACTION (1.5ms)  commit transaction\n=&gt; true\nirb(main):006:0&gt; Tag.all\n  Tag Load (0.2ms)  SELECT &quot;tags&quot;.* FROM &quot;tags&quot;\n=&gt; [#&lt;Tag:0x00007fcfa25288b0 id: 1, book_id: nil&gt;]\nirb(main):007:0&gt; book.update!(tags: [Tag.new])\n  TRANSACTION (0.1ms)  begin transaction\n  Tag Create (1.2ms)  INSERT INTO &quot;tags&quot; (&quot;book_id&quot;) VALUES (?)  [[&quot;book_id&quot;, 1]]\n  TRANSACTION (9.4ms)  commit transaction\n=&gt; true\nirb(main):008:0&gt; Tag.all\n  Tag Load (0.3ms)  SELECT &quot;tags&quot;.* FROM &quot;tags&quot;\n=&gt; [#&lt;Tag:0x00007fcfa2e5b3d8 id: 1, book_id: nil&gt;, #&lt;Tag:0x00007fcfa2e5b310 id: 3, book_id: 1&gt;]\"><pre class=\"notranslate\"><span class=\"pl-en\">irb</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">main</span><span class=\"pl-kos\">)</span>:<span class=\"pl-c1\">001</span><span class=\"pl-pds\">:0</span>&gt; <span class=\"pl-s1\">book</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Book</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create!</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">tags</span>: <span class=\"pl-kos\">[</span><span class=\"pl-v\">Tag</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Tag</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n   <span class=\"pl-kos\">(</span><span class=\"pl-c1\">2.4</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\"></span>  <span class=\"pl-en\">SELECT</span> <span class=\"pl-en\">sqlite_version</span><span class=\"pl-kos\">(</span>*<span class=\"pl-kos\">)</span>\n  <span class=\"pl-c1\">TRANSACTION</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">0.1</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-k\">begin</span> <span class=\"pl-en\">transaction</span>\n  <span class=\"pl-en\">Book</span> <span class=\"pl-en\">Create</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">1.4</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">INSERT</span> <span class=\"pl-en\">INTO</span> <span class=\"pl-s\">\"books\"</span> <span class=\"pl-en\">DEFAULT</span> <span class=\"pl-c1\">VALUES</span>\n  <span class=\"pl-v\">Tag</span> <span class=\"pl-v\">Create</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">1.2</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-c1\">INSERT</span> <span class=\"pl-c1\">INTO</span> <span class=\"pl-s\">\"tags\"</span> <span class=\"pl-kos\">(</span><span class=\"pl-s\">\"book_id\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-en\">VALUES</span> <span class=\"pl-kos\">(</span>?)  <span class=\"pl-kos\">[</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"book_id\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-en\">Tag</span> <span class=\"pl-en\">Create</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">0.2</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">INSERT</span> <span class=\"pl-en\">INTO</span> <span class=\"pl-s\">\"tags\"</span> <span class=\"pl-kos\">(</span><span class=\"pl-s\">\"book_id\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">VALUES</span> <span class=\"pl-kos\">(</span>?)  <span class=\"pl-kos\">[</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"book_id\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-en\">TRANSACTION</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">2.1</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">commit</span> <span class=\"pl-en\">transaction</span>\n<span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c\">#&lt;Book:0x00007fcfa24c0c60 id: 1&gt;</span>\n<span class=\"pl-en\">irb</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">main</span><span class=\"pl-kos\">)</span>:<span class=\"pl-c1\">002</span><span class=\"pl-pds\">:0</span>&gt; <span class=\"pl-v\">Tag</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">all</span>\n  <span class=\"pl-en\">Tag</span> <span class=\"pl-en\">Load</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">0.3</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">SELECT</span> <span class=\"pl-s\">\"tags\"</span><span class=\"pl-kos\">.</span>* <span class=\"pl-en\">FROM</span> <span class=\"pl-s\">\"tags\"</span>\n<span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">[</span><span class=\"pl-c\">#&lt;Tag:0x00007fcfa258a420 id: 1, book_id: 1&gt;, #&lt;Tag:0x00007fcfa258a2b8 id: 2, book_id: 1&gt;]</span>\n<span class=\"pl-en\">irb</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">main</span><span class=\"pl-kos\">)</span>:<span class=\"pl-c1\">003</span><span class=\"pl-pds\">:0</span>&gt; <span class=\"pl-s1\">book</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tags</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">last</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">destroy!</span>\n  <span class=\"pl-c1\">TRANSACTION</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">0.1</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-k\">begin</span> <span class=\"pl-en\">transaction</span>\n  <span class=\"pl-v\">Tag</span> <span class=\"pl-v\">Destroy</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">0.8</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-c1\">DELETE</span> <span class=\"pl-c1\">FROM</span> <span class=\"pl-s\">\"tags\"</span> <span class=\"pl-c1\">WHERE</span> <span class=\"pl-s\">\"tags\"</span><span class=\"pl-kos\">.</span>\"<span class=\"pl-en\">id</span><span class=\"pl-s\">\" = ?  [[\"</span><span class=\"pl-en\">id</span><span class=\"pl-s\">\", 2]]</span>\n<span class=\"pl-s\">  TRANSACTION (1.5ms)  commit transaction</span>\n<span class=\"pl-s\">=&gt; #&lt;Tag:0x00007fcfa24c31b8 id: 2, book_id: 1&gt;</span>\n<span class=\"pl-s\">irb(main):004:0&gt; Tag.all</span>\n<span class=\"pl-s\">  Tag Load (0.2ms)  SELECT \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\".* FROM \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\"</span>\n<span class=\"pl-s\">=&gt; [#&lt;Tag:0x00007fcfa26c37b0 id: 1, book_id: 1&gt;]</span>\n<span class=\"pl-s\">irb(main):005:0&gt; book.update!(tags: [])</span>\n<span class=\"pl-s\">  TRANSACTION (0.1ms)  begin transaction</span>\n<span class=\"pl-s\">  Tag Update All (1.0ms)  UPDATE \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\" SET \"</span><span class=\"pl-en\">book_id</span><span class=\"pl-s\">\" = ? WHERE \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\".\"</span><span class=\"pl-en\">book_id</span><span class=\"pl-s\">\" = ? AND \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\".\"</span><span class=\"pl-en\">id</span><span class=\"pl-s\">\" IN (?, ?)  [[\"</span><span class=\"pl-en\">book_id</span><span class=\"pl-s\">\", nil], [\"</span><span class=\"pl-en\">book_id</span><span class=\"pl-s\">\", 1], [nil, 1], [nil, 2]]</span>\n<span class=\"pl-s\">  TRANSACTION (1.5ms)  commit transaction</span>\n<span class=\"pl-s\">=&gt; true</span>\n<span class=\"pl-s\">irb(main):006:0&gt; Tag.all</span>\n<span class=\"pl-s\">  Tag Load (0.2ms)  SELECT \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\".* FROM \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\"</span>\n<span class=\"pl-s\">=&gt; [#&lt;Tag:0x00007fcfa25288b0 id: 1, book_id: nil&gt;]</span>\n<span class=\"pl-s\">irb(main):007:0&gt; book.update!(tags: [Tag.new])</span>\n<span class=\"pl-s\">  TRANSACTION (0.1ms)  begin transaction</span>\n<span class=\"pl-s\">  Tag Create (1.2ms)  INSERT INTO \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\" (\"</span><span class=\"pl-en\">book_id</span><span class=\"pl-s\">\") VALUES (?)  [[\"</span><span class=\"pl-en\">book_id</span><span class=\"pl-s\">\", 1]]</span>\n<span class=\"pl-s\">  TRANSACTION (9.4ms)  commit transaction</span>\n<span class=\"pl-s\">=&gt; true</span>\n<span class=\"pl-s\">irb(main):008:0&gt; Tag.all</span>\n<span class=\"pl-s\">  Tag Load (0.3ms)  SELECT \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\".* FROM \"</span><span class=\"pl-en\">tags</span>\"\n<span class=\"pl-c1\">=</span>&gt; <span class=\"pl-kos\">[</span><span class=\"pl-c\">#&lt;Tag:0x00007fcfa2e5b3d8 id: 1, book_id: nil&gt;, #&lt;Tag:0x00007fcfa2e5b310 id: 3, book_id: 1&gt;]</span></pre></div>\n<p dir=\"auto\">Note that the tag with id = 1 is still there while Active Record should clean it up after calling <code class=\"notranslate\">book.update!(tags: [])</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Inconsistent behavior when replacing \"has many\" association (deleting some records asynchronously). Associated records are updated with the <code class=\"notranslate\">null</code> value for the foreign key when replacing the association as the whole, but there are no delete jobs scheduled.</p>\n<p dir=\"auto\">Note that using <code class=\"notranslate\">dependant: :destroy</code> works as expected:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"irb(main):001:0&gt; book = Book.create!(tags: [Tag.new, Tag.new])\n   (1.2ms)  SELECT sqlite_version(*)\n  TRANSACTION (0.1ms)  begin transaction\n  Book Create (1.3ms)  INSERT INTO &quot;books&quot; DEFAULT VALUES\n  Tag Create (0.4ms)  INSERT INTO &quot;tags&quot; (&quot;book_id&quot;) VALUES (?)  [[&quot;book_id&quot;, 1]]\n  Tag Create (0.3ms)  INSERT INTO &quot;tags&quot; (&quot;book_id&quot;) VALUES (?)  [[&quot;book_id&quot;, 1]]\n  TRANSACTION (1.6ms)  commit transaction\n=&gt; #&lt;Book:0x00007fd0d6be2e78 id: 1&gt;\nirb(main):002:0&gt; book.update!(tags: [])\n  TRANSACTION (0.1ms)  begin transaction\n  Tag Destroy (1.3ms)  DELETE FROM &quot;tags&quot; WHERE &quot;tags&quot;.&quot;id&quot; = ?  [[&quot;id&quot;, 1]]\n  Tag Destroy (0.4ms)  DELETE FROM &quot;tags&quot; WHERE &quot;tags&quot;.&quot;id&quot; = ?  [[&quot;id&quot;, 2]]\n  TRANSACTION (10.0ms)  commit transaction\n=&gt; true\nirb(main):003:0&gt; Tag.all\n  Tag Load (0.3ms)  SELECT &quot;tags&quot;.* FROM &quot;tags&quot;\n=&gt; []\nirb(main):004:0&gt;\"><pre class=\"notranslate\"><span class=\"pl-en\">irb</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">main</span><span class=\"pl-kos\">)</span>:<span class=\"pl-c1\">001</span><span class=\"pl-pds\">:0</span>&gt; <span class=\"pl-s1\">book</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Book</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create!</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">tags</span>: <span class=\"pl-kos\">[</span><span class=\"pl-v\">Tag</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Tag</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n   <span class=\"pl-kos\">(</span><span class=\"pl-c1\">1.2</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\"></span>  <span class=\"pl-en\">SELECT</span> <span class=\"pl-en\">sqlite_version</span><span class=\"pl-kos\">(</span>*<span class=\"pl-kos\">)</span>\n  <span class=\"pl-c1\">TRANSACTION</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">0.1</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-k\">begin</span> <span class=\"pl-en\">transaction</span>\n  <span class=\"pl-en\">Book</span> <span class=\"pl-en\">Create</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">1.3</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">INSERT</span> <span class=\"pl-en\">INTO</span> <span class=\"pl-s\">\"books\"</span> <span class=\"pl-en\">DEFAULT</span> <span class=\"pl-c1\">VALUES</span>\n  <span class=\"pl-v\">Tag</span> <span class=\"pl-v\">Create</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">0.4</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-c1\">INSERT</span> <span class=\"pl-c1\">INTO</span> <span class=\"pl-s\">\"tags\"</span> <span class=\"pl-kos\">(</span><span class=\"pl-s\">\"book_id\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-en\">VALUES</span> <span class=\"pl-kos\">(</span>?)  <span class=\"pl-kos\">[</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"book_id\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-en\">Tag</span> <span class=\"pl-en\">Create</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">0.3</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">INSERT</span> <span class=\"pl-en\">INTO</span> <span class=\"pl-s\">\"tags\"</span> <span class=\"pl-kos\">(</span><span class=\"pl-s\">\"book_id\"</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">VALUES</span> <span class=\"pl-kos\">(</span>?)  <span class=\"pl-kos\">[</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"book_id\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-en\">TRANSACTION</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">1.6</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">commit</span> <span class=\"pl-en\">transaction</span>\n<span class=\"pl-c1\">=&gt;</span> <span class=\"pl-c\">#&lt;Book:0x00007fd0d6be2e78 id: 1&gt;</span>\n<span class=\"pl-en\">irb</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">main</span><span class=\"pl-kos\">)</span>:<span class=\"pl-c1\">002</span><span class=\"pl-pds\">:0</span>&gt; <span class=\"pl-s1\">book</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update!</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">tags</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-c1\">TRANSACTION</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">0.1</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-k\">begin</span> <span class=\"pl-en\">transaction</span>\n  <span class=\"pl-en\">Tag</span> <span class=\"pl-en\">Destroy</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">1.3</span><span class=\"pl-en\">ms</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">DELETE</span> <span class=\"pl-en\">FROM</span> <span class=\"pl-s\">\"tags\"</span> <span class=\"pl-c1\">WHERE</span> <span class=\"pl-s\">\"tags\"</span><span class=\"pl-kos\">.</span>\"<span class=\"pl-en\">id</span><span class=\"pl-s\">\" = ?  [[\"</span><span class=\"pl-en\">id</span><span class=\"pl-s\">\", 1]]</span>\n<span class=\"pl-s\">  Tag Destroy (0.4ms)  DELETE FROM \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\" WHERE \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\".\"</span><span class=\"pl-en\">id</span><span class=\"pl-s\">\" = ?  [[\"</span><span class=\"pl-en\">id</span><span class=\"pl-s\">\", 2]]</span>\n<span class=\"pl-s\">  TRANSACTION (10.0ms)  commit transaction</span>\n<span class=\"pl-s\">=&gt; true</span>\n<span class=\"pl-s\">irb(main):003:0&gt; Tag.all</span>\n<span class=\"pl-s\">  Tag Load (0.3ms)  SELECT \"</span><span class=\"pl-en\">tags</span><span class=\"pl-s\">\".* FROM \"</span><span class=\"pl-en\">tags</span>\"\n<span class=\"pl-c1\">=</span>&gt; <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-en\">irb</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">main</span><span class=\"pl-kos\">)</span>:<span class=\"pl-c1\">004</span><span class=\"pl-pds\">:0</span>&gt;</pre></div>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: 6.1.3.2</p>\n<p dir=\"auto\"><strong>Ruby version</strong>: 3.0.1</p>",
            "url": "https://github.com/rails/rails/issues/42430",
            "title": "Inconsistent behavior of `dependent: :destroy_async` for  the`has_many` association",
            "date_modified": "2022-03-08T15:26:38.000Z",
            "date_published": "2021-06-09T11:33:37.000Z",
            "author": {
                "name": "smt116",
                "url": "https://github.com/smt116"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/30030?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">With the following code in a Rails configuration file:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Rails.logger = Logger.new(STDERR)\"><pre class=\"notranslate\"><span class=\"pl-v\">Rails</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">logger</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">STDERR</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">Causes duplicate log statements when running the app with <code class=\"notranslate\">rails s</code>. It's caused by the following:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/rails/rails/blob/346ae79d5a11152f508df8d5506f8a0682ddb74b/railties/lib/rails/commands/server/server_command.rb#L75-L85\">rails/railties/lib/rails/commands/server/server_command.rb</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 75 to 85\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/rails/rails/commit/346ae79d5a11152f508df8d5506f8a0682ddb74b\">346ae79</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L75\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"75\"></td>\n          <td id=\"LC75\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">log_to_stdout</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L76\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"76\"></td>\n          <td id=\"LC76\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">wrapped_app</span> <span class=\"pl-c\"># touch the app so the logger is set up</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L77\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"77\"></td>\n          <td id=\"LC77\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L78\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"78\"></td>\n          <td id=\"LC78\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-s1\">console</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">ActiveSupport</span>::<span class=\"pl-v\">Logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">STDOUT</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L79\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"79\"></td>\n          <td id=\"LC79\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-s1\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">formatter</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Rails</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">formatter</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L80\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"80\"></td>\n          <td id=\"LC80\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-s1\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">level</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Rails</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">level</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L81\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"81\"></td>\n          <td id=\"LC81\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L82\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"82\"></td>\n          <td id=\"LC82\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">unless</span> <span class=\"pl-v\">ActiveSupport</span>::<span class=\"pl-v\">Logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">logger_outputs_to?</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Rails</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">logger</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">STDOUT</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L83\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"83\"></td>\n          <td id=\"LC83\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-v\">Rails</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">extend</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">ActiveSupport</span>::<span class=\"pl-v\">Logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">broadcast</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">console</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L84\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"84\"></td>\n          <td id=\"LC84\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">end</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L85\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"85\"></td>\n          <td id=\"LC85\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">end</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">The implementation of <code class=\"notranslate\">logger_outputs_to?</code> uses private details of the logger instance to determine whether it's logging to <code class=\"notranslate\">STDOUT</code>. In this specific case, adding <code class=\"notranslate\">STDERR</code> as part of the check might also work. However, not all logger objects have the same private details causing this check to fail in those cases too.</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/rails/rails/blob/346ae79d5a11152f508df8d5506f8a0682ddb74b/activesupport/lib/active_support/logger.rb#L16-L20\">rails/activesupport/lib/active_support/logger.rb</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 16 to 20\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/rails/rails/commit/346ae79d5a11152f508df8d5506f8a0682ddb74b\">346ae79</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L16\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"16\"></td>\n          <td id=\"LC16\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-smi\">self</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">logger_outputs_to?</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">logger</span><span class=\"pl-kos\">,</span> *<span class=\"pl-s1\">sources</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L17\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"17\"></td>\n          <td id=\"LC17\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-s1\">logdev</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">instance_variable_get</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:@logdev</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L18\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"18\"></td>\n          <td id=\"LC18\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-s1\">logger_source</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">logdev</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dev</span> <span class=\"pl-k\">if</span> <span class=\"pl-s1\">logdev</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">respond_to?</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:dev</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L19\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"19\"></td>\n          <td id=\"LC19\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-s1\">sources</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">any?</span> <span class=\"pl-kos\">{</span> |<span class=\"pl-s1\">source</span>| <span class=\"pl-s1\">source</span> == <span class=\"pl-s1\">logger_source</span> <span class=\"pl-kos\">}</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L20\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"20\"></td>\n          <td id=\"LC20\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">end</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">I don't think we should be inspecting private object details and I believe that the implementation creates too many edge cases which are better handled by explicit configuration.</p>\n<p dir=\"auto\">My advice would be:</p>\n<ul dir=\"auto\">\n<li>Default to <code class=\"notranslate\">Rails.logger = Logger.new(STDERR)</code> (&amp; don't log to log files).</li>\n<li>Don't use <code class=\"notranslate\">instance_variable_get</code> and consider removing <code class=\"notranslate\">logger_outputs_to?</code>.</li>\n<li>Remove monkey patching (and private implementation introspection) of <code class=\"notranslate\">Rails.logger</code>.</li>\n<li>Educate users on how to get previous behaviour if it's desired.</li>\n</ul>\n<p dir=\"auto\">If we want to support output to multiple targets, this should be a feature of the log library not the interface for logging. I suggest some kind of tee logger should be appropriate, but I think it's better if we keep this simple in Rails and let <code class=\"notranslate\">logger</code> gem solve this problem.</p>",
            "url": "https://github.com/rails/rails/issues/44800",
            "title": "Too much magic in `Rails.logger` and logging to `STDERR` causes duplicate output.",
            "date_modified": "2022-10-24T09:20:46.000Z",
            "date_published": "2022-03-30T01:35:55.000Z",
            "author": {
                "name": "ioquatix",
                "url": "https://github.com/ioquatix"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/23382073?u=55f8422c10f384963cc802e9d9548f1250eeea11&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n\n<ul dir=\"auto\">\n<li>This Pull Request has been created because it is sometimes desirable to dynamically specify a number of retry attempts when queueing a job. It's currently only able to configure this at the class level, with the number of retry attempts specified there applying to all jobs of that type.</li>\n<li>With this change, each job instance that's queued can optionally have a custom number of retry attempts.</li>\n</ul>\n<h3 dir=\"auto\">Detail</h3>\n<ul dir=\"auto\">\n<li>This implements that functionality by allowing the <code class=\"notranslate\">attempts</code> param of retry_on to accept a proc.</li>\n<li>This proc takes the job instance as an argument.</li>\n<li>Example:\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class MyJob &lt; ActiveJob::Base\n    retry_on CustomRetryException, attempts: -&gt;(job){ job.arguments.last[:retries] || 5 }\n    def perform(retries:)\n        # job implementation\n    end\nend\nMyJob.perform_later(retries: 10)\nMyJob.perform_now(retries: 1)\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">MyJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span>\n    <span class=\"pl-en\">retry_on</span> <span class=\"pl-v\">CustomRetryException</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">attempts</span>: <span class=\"pl-c1\">-&gt;</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">job</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span> <span class=\"pl-s1\">job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">arguments</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">last</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\">:retries</span><span class=\"pl-kos\">]</span> || <span class=\"pl-c1\">5</span> <span class=\"pl-kos\">}</span>\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">retries</span>:<span class=\"pl-kos\">)</span>\n        <span class=\"pl-c\"># job implementation</span>\n    <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span>\n<span class=\"pl-v\">MyJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">retries</span>: <span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-v\">MyJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_now</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">retries</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span></pre></div>\n</li>\n</ul>\n\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> There are no typos in commit messages and comments.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Feature branch is up-to-date with <code class=\"notranslate\">main</code> (if not - rebase it).</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> PR is not in a draft state.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> CI is passing.</li>\n</ul>\n",
            "url": "https://github.com/rails/rails/pull/46261",
            "title": "Accept proc for `attempts:` argument of `retry_on`",
            "date_modified": "2022-10-28T18:57:27.000Z",
            "date_published": "2022-10-18T03:52:42.000Z",
            "author": {
                "name": "WillHalto",
                "url": "https://github.com/WillHalto"
            }
        }
    ]
}