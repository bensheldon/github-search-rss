{
    "version": "https://jsonfeed.org/version/1",
    "title": "rails/rails: Issues containing 'ActiveJob Job'",
    "home_page_url": "https://github.com/search?q=ActiveJob+Job+repo%3Arails%2Frails+is%3Aissue&type=Issues",
    "feed_url": "https://bensheldon.github.io/github-search-rss/rails-activejob.json",
    "description": "rails/rails: Issues containing 'ActiveJob Job' on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4672858?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">At Shopify, we have been using different flavours of concurrency within <code class=\"notranslate\">ActiveJob</code> for several years.<br>\nThis year we have consolidated all of this functionality into one API method called <code class=\"notranslate\">concurrency</code>.<br>\nAfter validating that this works for the scale of Shopify we decided to port the API upstream.</p>\n<p dir=\"auto\">There have been others attempt to add locking to <code class=\"notranslate\">ActiveJob</code> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"354337924\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/33728\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/33728/hovercard\" href=\"https://github.com/rails/rails/pull/33728\">#33728</a></p>\n<p dir=\"auto\">While that functionality has nothing wrong, we have identified that locking is not enough as a concurrency primitive.</p>\n<p dir=\"auto\">At Shopify, we allow developers to specify multiple concurrency options for there jobs:</p>\n<p dir=\"auto\">In all examples below, <code class=\"notranslate\">keys</code> is the array of keys that will help build a unique concurrency key from the job arguments.</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">EndToEnd</code> where a job holds a concurrency ticket from the moment gets enqueue until the job is performed. When any jobs that try to enter the queue, we check if the concurrent limit is reached, and if it is, we drop the job.<br>\n<code class=\"notranslate\">concurrency(limit: 1, keys: ['checkout_id'])</code></li>\n</ul>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class PaymentProcessingJob &lt; ActiveJob\n  # We only allow one job to be in the queue and processing at all times.\n  # If a job tries to enter the queue while another job with the same checkout_id\n  # is in the queue or performing, we drop the new job.\n\n  # Do not want to charge the same checkout twice :)\n  concurrency(limit: 1, keys: ['checkout_id'])\n\n  def perform(params)\n    # Logic\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">PaymentProcessingJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>\n  <span class=\"pl-c\"># We only allow one job to be in the queue and processing at all times.</span>\n  <span class=\"pl-c\"># If a job tries to enter the queue while another job with the same checkout_id</span>\n  <span class=\"pl-c\"># is in the queue or performing, we drop the new job.</span>\n\n  <span class=\"pl-c\"># Do not want to charge the same checkout twice :)</span>\n  <span class=\"pl-en\">concurrency</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">limit</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">keys</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'checkout_id'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">params</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># Logic</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">EnqueueLimit</code> where a job holds a concurrency ticket from the moment gets enqueue until the jobs get dequeued. When any jobs that try to enter the queue, we check if the concurrent limit is reached and if it is, we drop the job.<br>\n<code class=\"notranslate\">concurrency(limit: { enqueue: 1 }, keys: ['checkout_id'])</code></p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">PerformLimit</code> where a job holds a concurrency ticket from the moment gets dequeued until the jobs get performed. At the time of the dequeue, we check if the concurrency limit is reached and if so we put that job back into the Delayed queue<br>\n<code class=\"notranslate\">concurrency(limit: { performed: 1 }, keys: ['checkout_id'])</code></p>\n</li>\n</ul>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class UpdateThemeSettingsReferencesJob &lt; ActiveJob\n  # We only allow one job to perform at any moment. \n  # This is often used as a form of throttling for expensive operations.\n  # When a job from the head of the queue tries to start performing while another job \n  # with the same key is already performing, we re-enqueue the new job with a delay.\n  concurrency(\n    limit: { perform: 1 },\n    keys: ['shop_id', 'model', 'model_id']\n  )\n\n  def perform(params)\n    # Logic \n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">UpdateThemeSettingsReferencesJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>\n  <span class=\"pl-c\"># We only allow one job to perform at any moment. </span>\n  <span class=\"pl-c\"># This is often used as a form of throttling for expensive operations.</span>\n  <span class=\"pl-c\"># When a job from the head of the queue tries to start performing while another job </span>\n  <span class=\"pl-c\"># with the same key is already performing, we re-enqueue the new job with a delay.</span>\n  <span class=\"pl-en\">concurrency</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-pds\">limit</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-pds\">perform</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-pds\">keys</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'shop_id'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'model'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'model_id'</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">params</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># Logic </span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">BoundedStages</code> is the combination of <code class=\"notranslate\">EnqueueLimit</code> and <code class=\"notranslate\">PerformLimit</code><br>\n<code class=\"notranslate\">concurrency(limit: { enqueue: 1, perform:1  }, keys: ['checkout_id'])</code></li>\n</ul>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class ExpensiveIdempotentSyncJob &lt; ActiveJob\n  # This job syncs the data of this shop with an external service.\n  # Since it is expensive, we want only one sync running at a time for each shop.\n  # We need to enqueue this job whenever something changes that requires syncing.\n  # However, if there is already an ExpensiveSyncJob in the queue, that job will sync all the changes made\n  # before it starts running, so there is no need to enqueue duplicates.\n  concurrency(limit: { enqueue: 1, perform: 1 }, keys: ['shop_id'])\n\n  def perform(params)\n    # Logic \n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">ExpensiveIdempotentSyncJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>\n  <span class=\"pl-c\"># This job syncs the data of this shop with an external service.</span>\n  <span class=\"pl-c\"># Since it is expensive, we want only one sync running at a time for each shop.</span>\n  <span class=\"pl-c\"># We need to enqueue this job whenever something changes that requires syncing.</span>\n  <span class=\"pl-c\"># However, if there is already an ExpensiveSyncJob in the queue, that job will sync all the changes made</span>\n  <span class=\"pl-c\"># before it starts running, so there is no need to enqueue duplicates.</span>\n  <span class=\"pl-en\">concurrency</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">limit</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-pds\">enqueue</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">perform</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">keys</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'shop_id'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">params</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># Logic </span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\"><strong><code class=\"notranslate\">ActiveJob</code> only care about the concurrency at the <code class=\"notranslate\">enqueue</code> (EndToEnd and EnqueueLimit) steps for the <code class=\"notranslate\">perform</code> cases (PerformLimit and BoundedStages) is up to the job adapters to implement it internally. So the adapters can decide to add the functionality or not <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">😄</g-emoji></strong></p>\n<h3 dir=\"auto\">Other Information</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">timeout</code> option allows specifying for how long a job can hold a concurrency ticket.</p>\n<p dir=\"auto\">At Shopify, we allow other API options like <code class=\"notranslate\">perform_delay</code> which configures the delay in which the job is placed back in the delayed queue when the <code class=\"notranslate\">PerformLimit</code> is reached.</p>\n<p dir=\"auto\">Here is an example of the API in use in one of our jobs:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"concurrency(limit: { perform: 8, perform_delay: 300 }, keys: ['task_name'])\"><pre class=\"notranslate\"><code class=\"notranslate\">concurrency(limit: { perform: 8, perform_delay: 300 }, keys: ['task_name'])\n</code></pre></div>",
            "url": "https://github.com/rails/rails/pull/40337",
            "title": "Add concurrency to ActiveJob",
            "date_modified": "2023-05-22T11:21:46.000Z",
            "date_published": "2020-10-05T18:27:44.000Z",
            "author": {
                "name": "GustavoCaso",
                "url": "https://github.com/GustavoCaso"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/11689733?u=c3f8d8f491a0a77b2beddfc302ee071b8fb6d754&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><code class=\"notranslate\">after_discard</code> lets job authors define a block which will be run when a job is about to be discarded.</p>\n<p dir=\"auto\">This has utility for both job authors and for gems/modules included on jobs, which can use this method to run a block when a job fails.</p>\n<p dir=\"auto\"><code class=\"notranslate\">after_discard</code> respects the existing retry behaviour of jobs, but will run even if a retried exception is handled in a block passed to <code class=\"notranslate\">retry_on</code> or <code class=\"notranslate\">discard_on</code>.</p>\n\n<h3 dir=\"auto\">Motivation / Background</h3>\n\n<p dir=\"auto\"><code class=\"notranslate\">after_discard</code> has been used in Shopify's monolith for many years. Developers take advantage of it to define cleanup and failure handling code, and features have been built that rely on it for tracking job failures.</p>\n<p dir=\"auto\">While other parts of ActiveJob's current exception handling system get close to this behaviour, I believe that there is value in having a clearly defined way to run a block of code when a job has failed.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request changes no existing behaviour, but adds <code class=\"notranslate\">after_discard</code>.</p>\n<p dir=\"auto\"><code class=\"notranslate\">after_discard</code> is called in any situation where the job is about to be discarded due to a failure. Those cases are:</p>\n<ul dir=\"auto\">\n<li>When an exception is being raised by the job without <code class=\"notranslate\">retry_on</code> or <code class=\"notranslate\">discard_on</code> used</li>\n<li>When an exception is handled by <code class=\"notranslate\">discard_on</code> (with or without a block)</li>\n<li>When an exception is handled by <code class=\"notranslate\">retry_on</code> (with or without a block), but only after the job has run out of retries for that exception</li>\n<li>If multiple exceptions are raised when running the <code class=\"notranslate\">after_discard</code> blocks, then only the last exception will be raised. This behaviour ensures that all blocks will be run despite exceptions.</li>\n</ul>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48010",
            "title": "Add after_discard method to ActiveJob",
            "date_modified": "2023-05-08T18:29:19.000Z",
            "date_published": "2023-04-21T14:29:57.000Z",
            "author": {
                "name": "cardy31",
                "url": "https://github.com/cardy31"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/99586?u=b4abd791d83e768c72cb832147b4a210caecf47d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Run a job with retry attempt 1. The won't be retried.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class FooJob &lt; ApplicationJob\n  class FooError &lt; StandardError; end\n\n  retry_on FooError, attempts: 1\n\n  def perform\n    raise FooError\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">FooJob</span> &lt; <span class=\"pl-v\">ApplicationJob</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">FooError</span> &lt; <span class=\"pl-v\">StandardError</span><span class=\"pl-kos\">;</span> <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-en\">retry_on</span> <span class=\"pl-v\">FooError</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">attempts</span>: <span class=\"pl-c1\">1</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n    <span class=\"pl-en\">raise</span> <span class=\"pl-v\">FooError</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">ActiveJob should retry at most the number of times specified by the attempts option.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">attempts: 0</code>: runs once, no retry<br>\n<code class=\"notranslate\">attempts: 1</code>: runs once, no retry<br>\n<code class=\"notranslate\">attempts: 2</code>: runs once, one retry<br>\n<code class=\"notranslate\">attempts: 3</code>: runs once, two retries</p>\n<p dir=\"auto\">The behavior is not consistent. We can either change the behavior to be consistent (won't happen?) or at least document it very clearly.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"358130415\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/33816\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/33816/hovercard\" href=\"https://github.com/rails/rails/issues/33816\">#33816</a> also pointed out the problem.</p>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: Rails 7.0.4</p>\n<p dir=\"auto\"><strong>Ruby version</strong>: ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-linux]</p>",
            "url": "https://github.com/rails/rails/issues/46419",
            "title": "ActiveJob's retry behavior is not consistent",
            "date_modified": "2023-05-08T14:51:51.000Z",
            "date_published": "2022-11-04T10:37:42.000Z",
            "author": {
                "name": "shouichi",
                "url": "https://github.com/shouichi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/47554?u=7f919feee43d319ec01c7b135f4d1868a31bddc3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n\n<p dir=\"auto\">This Pull Request has been created to make a job's <code class=\"notranslate\">scheduled_at</code> value available during job execution by serializing/deserializing the value.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This change was initially proposed by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/adamnoto/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/adamnoto\">@adamnoto</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"298944061\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/32071\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/32071/hovercard\" href=\"https://github.com/rails/rails/pull/32071\">#32071</a> (2018), and closed because <code class=\"notranslate\">scheduled_at</code> was viewed as an implementation detail of the backend queue adapter.</p>\n<p dir=\"auto\">I am reopening this PR because I believe there have been some changes in the ecosystem, and with Active Job, that warrant revisiting how <code class=\"notranslate\">scheduled_at</code> is handled.</p>\n<p dir=\"auto\"><strong>Ecosystem changes:</strong> I'll point to my own <code class=\"notranslate\">good_job</code> backend, also <code class=\"notranslate\">skiplock</code>, that are designed for Active Job, and did not exist at the time the previous PR was closed five years ago. With these Active Job-native adapters, <code class=\"notranslate\">scheduled_at</code> is directly used for scheduled jobs, and rescheduled retries. I think Active Job is in a stronger position today to assert the value, and if not appropriate, adapters are able to override/re-assign the value before execution, for example, as they <a href=\"https://github.com/rails/rails/blob/bad9aa16ea17245e5de67490b82bc7ea89dceb4a/activejob/lib/active_job/queue_adapters/sidekiq_adapter.rb#L70\">typically do <code class=\"notranslate\">job.provider_job_id</code></a></p>\n<p dir=\"auto\"><strong>Active Job changes:</strong> There is a greater interface focus on the instance of <code class=\"notranslate\">ActiveJob::Base</code>. For example, <a href=\"https://github.com/rails/rails/pull/43434\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/43434/hovercard\">introducing <code class=\"notranslate\">#set</code></a> and the interface for <a href=\"https://github.com/rails/rails/pull/46603\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/46603/hovercard\">perform_all_later</a>. It would be nice to have full symmetry of attributes set on an instance <em>before</em> enqueue to be available on the instance <em>after</em> enqueue during execution.</p>\n<p dir=\"auto\">The inspiration for reopening this change was that I recently saw the <a href=\"https://github.com/fatkodima/sidekiq-expiring-jobs\"><code class=\"notranslate\">sidekiq-expiring-job</code></a> gem and thought that it would be nice if that could be easily implemented in an Active Job <code class=\"notranslate\">before_perform</code>. e.g.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class ApplicationJob &lt; ActiveJob::Base\n  ExpiredJobError = Class.new(StandardError)\n\n  discard_on ExpiredJobError\n  \n  before_perform do |job|\n    raise ExpiredJobError if job.scheduled_at &lt; 30.minutes.ago\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">ApplicationJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span>\n  <span class=\"pl-v\">ExpiredJobError</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Class</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">StandardError</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-en\">discard_on</span> <span class=\"pl-v\">ExpiredJobError</span>\n  \n  <span class=\"pl-en\">before_perform</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">job</span>|\n    <span class=\"pl-en\">raise</span> <span class=\"pl-v\">ExpiredJobError</span> <span class=\"pl-k\">if</span> <span class=\"pl-s1\">job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">scheduled_at</span> &lt; <span class=\"pl-c1\">30</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">minutes</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">ago</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">Lastly, <code class=\"notranslate\">scheduled_at</code> is not my favorite because it's a unix timestamp. If this is accepted, I'd love the ok to go through a deprecation cycle (or go through a deprecation cycle before accepting this PR) to convert it to a DateTime like <a href=\"https://github.com/rails/rails/pull/35238\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/35238/hovercard\"><code class=\"notranslate\">enqueued_at</code> is handled</a>.</p>\n<h3 dir=\"auto\">Additional information</h3>\n\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48066",
            "title": "Serialize and deserialize Active Job `scheduled_at`",
            "date_modified": "2023-04-26T02:02:30.000Z",
            "date_published": "2023-04-26T02:01:12.000Z",
            "author": {
                "name": "bensheldon",
                "url": "https://github.com/bensheldon"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/48229166?u=5ba18a03eaf49d9e82ca68b67d1011f64a7adf43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Upload a jpg file with a default ActiveStorage setup (but with AWS S3), with a normal form and <code class=\"notranslate\">file_field</code>.</p>\n<p dir=\"auto\">FYI: The image works fine to render after uploading in an <code class=\"notranslate\">image_tag</code></p>\n<p dir=\"auto\">The blob's metadata becomes <code class=\"notranslate\">{\"identified\":true,\"analyzed\":true}</code></p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The analyze job should work, adding width and height metadata</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Key line <code class=\"notranslate\"> 20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78] Skipping image analysis due to an Vips error: jpegload: parameter filename not set</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78]   S3 Storage (2705.0ms) Downloaded file from key: gmge8yk8zykhrtowf5shoi7hhpiz\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-CRITICAL **: 20:23:53.676: g_datalist_id_set_data_full: assertion 'key_id &gt; 0' failed\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-GObject-CRITICAL **: 20:23:53.676: g_param_spec_pool_lookup: assertion 'pool != NULL' failed\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-GObject-WARNING **: 20:23:53.676: g_object_set_is_valid_property: object class '(null)' has no property named 'filename'\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-CRITICAL **: 20:23:53.676: g_datalist_id_set_data_full: assertion 'key_id &gt; 0' failed\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-GObject-CRITICAL **: 20:23:53.676: g_param_spec_pool_lookup: assertion 'pool != NULL' failed\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-GObject-WARNING **: 20:23:53.676: g_object_set_is_valid_property: object class '(null)' has no property named 'access'\n20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78] Skipping image analysis due to an Vips error: jpegload: parameter filename not set\n20:23:53 web.1  |\n20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78]   TRANSACTION (0.5ms)  BEGIN\n20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78]   ActiveStorage::Blob Update (0.4ms)  UPDATE &quot;active_storage_blobs&quot; SET &quot;metadata&quot; = $1 WHERE &quot;active_storage_blobs&quot;.&quot;id&quot; = $2  [[&quot;metadata&quot;, &quot;{\\&quot;identified\\&quot;:true,\\&quot;analyzed\\&quot;:true}&quot;], [&quot;id&quot;, &quot;f9d5e9e7-8882-4cc2-9078-e4cb878fae08&quot;]]\n20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78]   TRANSACTION (0.8ms)  COMMIT\n20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78] Performed ActiveStorage::AnalyzeJob (Job ID: 2ab2d5d6-3997-415d-937e-19f6253b1e78) from Async(active_storage_analysis) in 4129.6ms\"><pre class=\"notranslate\"><code class=\"notranslate\">20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78]   S3 Storage (2705.0ms) Downloaded file from key: gmge8yk8zykhrtowf5shoi7hhpiz\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-CRITICAL **: 20:23:53.676: g_datalist_id_set_data_full: assertion 'key_id &gt; 0' failed\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-GObject-CRITICAL **: 20:23:53.676: g_param_spec_pool_lookup: assertion 'pool != NULL' failed\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-GObject-WARNING **: 20:23:53.676: g_object_set_is_valid_property: object class '(null)' has no property named 'filename'\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-CRITICAL **: 20:23:53.676: g_datalist_id_set_data_full: assertion 'key_id &gt; 0' failed\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-GObject-CRITICAL **: 20:23:53.676: g_param_spec_pool_lookup: assertion 'pool != NULL' failed\n20:23:53 web.1  |\n20:23:53 web.1  | (process:53709): GLib-GObject-WARNING **: 20:23:53.676: g_object_set_is_valid_property: object class '(null)' has no property named 'access'\n20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78] Skipping image analysis due to an Vips error: jpegload: parameter filename not set\n20:23:53 web.1  |\n20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78]   TRANSACTION (0.5ms)  BEGIN\n20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78]   ActiveStorage::Blob Update (0.4ms)  UPDATE \"active_storage_blobs\" SET \"metadata\" = $1 WHERE \"active_storage_blobs\".\"id\" = $2  [[\"metadata\", \"{\\\"identified\\\":true,\\\"analyzed\\\":true}\"], [\"id\", \"f9d5e9e7-8882-4cc2-9078-e4cb878fae08\"]]\n20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78]   TRANSACTION (0.8ms)  COMMIT\n20:23:53 web.1  | [ActiveJob] [ActiveStorage::AnalyzeJob] [2ab2d5d6-3997-415d-937e-19f6253b1e78] Performed ActiveStorage::AnalyzeJob (Job ID: 2ab2d5d6-3997-415d-937e-19f6253b1e78) from Async(active_storage_analysis) in 4129.6ms\n</code></pre></div>\n<p dir=\"auto\">Looks like it comes from here:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/rails/rails/blob/8d56a0e42f2dbee8c0d43db67501789c834fbc50/activestorage/lib/active_storage/analyzer/image_analyzer/vips.rb#L22\">rails/activestorage/lib/active_storage/analyzer/image_analyzer/vips.rb</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 22\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/rails/rails/commit/8d56a0e42f2dbee8c0d43db67501789c834fbc50\">8d56a0e</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L22\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"22\"></td>\n          <td id=\"LC22\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> ::<span class=\"pl-v\">Vips</span>::<span class=\"pl-v\">Image</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new_from_file</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">file</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">path</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">access</span>: <span class=\"pl-pds\">:sequential</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: 7.0.4.3<br>\n<strong>Ruby version</strong>: 3.1.4<br>\n<strong>libvips</strong>: vips-8.14.2 (brew install vips)</p>",
            "url": "https://github.com/rails/rails/issues/48186",
            "title": "AnalyzeJob with vips fails (jpegload: parameter filename not set)",
            "date_modified": "2023-05-15T04:03:35.000Z",
            "date_published": "2023-05-10T12:56:56.000Z",
            "author": {
                "name": "kg-currenxie",
                "url": "https://github.com/kg-currenxie"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/47554?u=7f919feee43d319ec01c7b135f4d1868a31bddc3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n\n<p dir=\"auto\">When an Active Job adapter uses the <code class=\"notranslate\">ActiveJob::EnqueueError</code> feature introduced in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"790210311\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/41191\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/41191/hovercard\" href=\"https://github.com/rails/rails/pull/41191\">#41191</a>, the log message incorrectly reports that the job was successfully enqueued. This fixes that by using the pre-existing failed-to-enqueue message when <code class=\"notranslate\">job.enqueue_error</code> is present.</p>\n<p dir=\"auto\">It would be really nice if this was backported as a bugfix to Rails 7.0, but I understand if the log message being incorrect is pretty minor.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/47865",
            "title": "Fix Active Job log message to correctly report a job failed to enqueue when the adapter raises an `ActiveJob::EnqueueError`",
            "date_modified": "2023-04-05T14:44:18.000Z",
            "date_published": "2023-04-05T01:10:07.000Z",
            "author": {
                "name": "bensheldon",
                "url": "https://github.com/bensheldon"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/79303?u=99e3bc7887879138e88a4538ca623b0a3d7538cb&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Like many folks, I set this in my <code class=\"notranslate\">config/environments/test.rb</code> file:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"config.active_job.queue_adapter = :inline  \"><pre class=\"notranslate\"><span class=\"pl-en\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">active_job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span> <span class=\"pl-c1\">=</span> <span class=\"pl-pds\">:inline</span>  </pre></div>\n<p dir=\"auto\">The reason I do this is to have easy-to-test, deterministic behavior of any potentially async delayed jobs triggered by the application. Under Rails 5, all of my tests (children of <code class=\"notranslate\">ActiveSupport::TestCase</code> and <code class=\"notranslate\">ActionDispatch::SystemTestCase</code> alike) would respect this queue adapter. However, under Rails 6, any built-in Rails test case that includes <code class=\"notranslate\">ActiveJob::TestHelper</code> will also override this setting for all descendants of <code class=\"notranslate\">ActiveJob::Base</code> (<a href=\"https://github.com/rails/rails/blob/master/activejob/lib/active_job/test_helper.rb#L39-L41\">relevant source</a>).</p>\n<p dir=\"auto\">The net effect of this is that my <code class=\"notranslate\">perform_later</code> and <code class=\"notranslate\">deliver_later</code> calls to jobs aren't being fired synchronously (or, in fact, at all) during my system tests, which is leading to test failures upon upgrading to Rails 6.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Here are two tests that demonstrates the problem:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"require &quot;test_helper&quot;\n\nclass JobTest &lt; ActiveSupport::TestCase\n  class SomeJob &lt; ActiveJob::Base\n    cattr_accessor :job_ran\n\n    def perform\n      @@job_ran = true\n    end\n  end\n\n  def test_some_job\n    assert_equal :inline, Rails.application.config.active_job.queue_adapter\n    assert_equal ActiveJob::QueueAdapters::InlineAdapter, SomeJob.queue_adapter.class\n\n    SomeJob.perform_later\n\n    assert_equal true, SomeJob.job_ran\n  end\nend\n\nclass JobSystemTest &lt; ActionDispatch::SystemTestCase\n  class OtherJob &lt; ActiveJob::Base\n    cattr_accessor :job_ran\n\n    def perform\n      @@job_ran = true\n    end\n  end\n\n  def test_other_job\n    assert_equal :inline, Rails.application.config.active_job.queue_adapter\n    assert_equal ActiveJob::QueueAdapters::InlineAdapter, OtherJob.queue_adapter.class\n\n    OtherJob.perform_later\n\n    assert_equal true, OtherJob.job_ran\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-en\">require</span> <span class=\"pl-s\">\"test_helper\"</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">JobTest</span> &lt; <span class=\"pl-v\">ActiveSupport</span>::<span class=\"pl-v\">TestCase</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">SomeJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span>\n    <span class=\"pl-en\">cattr_accessor</span> <span class=\"pl-pds\">:job_ran</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n      <span class=\"pl-c1\">@@job_ran</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">true</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_some_job</span>\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-pds\">:inline</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Rails</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">application</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">active_job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span>\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">QueueAdapters</span>::<span class=\"pl-v\">InlineAdapter</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">SomeJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">class</span>\n\n    <span class=\"pl-v\">SomeJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">SomeJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">job_ran</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">JobSystemTest</span> &lt; <span class=\"pl-v\">ActionDispatch</span>::<span class=\"pl-v\">SystemTestCase</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">OtherJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span>\n    <span class=\"pl-en\">cattr_accessor</span> <span class=\"pl-pds\">:job_ran</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n      <span class=\"pl-c1\">@@job_ran</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">true</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_other_job</span>\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-pds\">:inline</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Rails</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">application</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">active_job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span>\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">QueueAdapters</span>::<span class=\"pl-v\">InlineAdapter</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">OtherJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">class</span>\n\n    <span class=\"pl-v\">OtherJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n\n    <span class=\"pl-en\">assert_equal</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">OtherJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">job_ran</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">I would expect the behavior to have remained as it did under Rails 5, where the <code class=\"notranslate\">active_job.queue_adapter</code> setting would be respected for all of Rails' test types.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The first test, which descends from <code class=\"notranslate\">ActiveSupport::TestCase</code> will pass and behave as it did under Rails 5. However, the second test, descending from from <code class=\"notranslate\">ActionDispatch::SystemTestCase</code> will now fail under Rails 6, because <code class=\"notranslate\">OtherJob</code>'s <code class=\"notranslate\">queue_adapter</code> will have been reset by <code class=\"notranslate\">ActiveJob::TestHelper</code> to be an instance of <code class=\"notranslate\">TestAdapter</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"JobSystemTest#test_other_job [/Users/justin/code/testdouble/present/test/lib/job_test.rb:33]:\n--- expected\n+++ actual\n@@ -1 +1 @@\n-ActiveJob::QueueAdapters::InlineAdapter\n+ActiveJob::QueueAdapters::TestAdapter\"><pre class=\"notranslate\"><code class=\"notranslate\">JobSystemTest#test_other_job [/Users/justin/code/testdouble/present/test/lib/job_test.rb:33]:\n--- expected\n+++ actual\n@@ -1 +1 @@\n-ActiveJob::QueueAdapters::InlineAdapter\n+ActiveJob::QueueAdapters::TestAdapter\n</code></pre></div>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: 6.0.0 as well as <a href=\"https://github.com/rails/rails/tree/2bc6a948a2f46f8cf2d44506af1be235691c84b5\">6-0-stable</a>, as of today.</p>\n<p dir=\"auto\"><strong>Ruby version</strong>: ruby 2.6.3p62 (2019-04-16 revision 67580) [x86_64-darwin18]</p>",
            "url": "https://github.com/rails/rails/issues/37270",
            "title": "Rails 6 inconsistently overrides ActiveJob queue_adapter setting with TestAdapter",
            "date_modified": "2022-11-17T08:07:16.000Z",
            "date_published": "2019-09-23T05:29:13.000Z",
            "author": {
                "name": "searls",
                "url": "https://github.com/searls"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/94129?u=820327179dc649db72832d1ebbb9bfade6a20405&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">On latest main, tests for an application of mine reliably stall locally and in CI. Sometimes warnings like the following are printed:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"WARNING:  there is already a transaction in progress\nmessage type 0x43 arrived from server while idle\nmessage type 0x5a arrived from server while idle\"><pre class=\"notranslate\"><code class=\"notranslate\">WARNING:  there is already a transaction in progress\nmessage type 0x43 arrived from server while idle\nmessage type 0x5a arrived from server while idle\n</code></pre></div>\n<p dir=\"auto\">Environment:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">The app uses a single Postgres DB and AR’s Postgres adapter.</p>\n</li>\n<li>\n<p dir=\"auto\">It uses RSpec and FactoryBot, not Minitest or AR fixtures.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"rspec-core (3.12.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-expectations (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-mocks (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-rails (6.0.1)\n  actionpack (&gt;= 6.1)\n  activesupport (&gt;= 6.1)\n  railties (&gt;= 6.1)\n  rspec-core (~&gt; 3.11)\n  rspec-expectations (~&gt; 3.11)\n  rspec-mocks (~&gt; 3.11)\n  rspec-support (~&gt; 3.11)\nrspec-support (3.12.0)\"><pre class=\"notranslate\"><code class=\"notranslate\">rspec-core (3.12.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-expectations (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-mocks (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-rails (6.0.1)\n  actionpack (&gt;= 6.1)\n  activesupport (&gt;= 6.1)\n  railties (&gt;= 6.1)\n  rspec-core (~&gt; 3.11)\n  rspec-expectations (~&gt; 3.11)\n  rspec-mocks (~&gt; 3.11)\n  rspec-support (~&gt; 3.11)\nrspec-support (3.12.0)\n</code></pre></div>\n</li>\n<li>\n<p dir=\"auto\">It’s on Ruby 3.1.3.</p>\n</li>\n</ul>\n<p dir=\"auto\">A <code class=\"notranslate\">git bisect</code> pointed to <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/rails/rails/commit/1a2ca1920c62abdd08c809df1fa98fe0acf14bc3/hovercard\" href=\"https://github.com/rails/rails/commit/1a2ca1920c62abdd08c809df1fa98fe0acf14bc3\"><tt>1a2ca19</tt></a> (cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/byroot/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/byroot\">@byroot</a>). That change does seem relevant, but I haven’t been able to reproduce the issue in a minimal app yet. I’ve tried with both Minitest and RSpec.</p>\n<p dir=\"auto\">The tests usually stall in around the same place with the same seed, but not <em>exactly</em> the same place. And I looked at two stalled runs with different seeds that didn’t run any common tests before their stalls.</p>\n<p dir=\"auto\">This has been difficult to pin down so far but I will keep looking.</p>",
            "url": "https://github.com/rails/rails/issues/46797",
            "title": "Active Job async adapter may use connections without a lease",
            "date_modified": "2023-03-24T17:10:38.000Z",
            "date_published": "2022-12-23T04:15:25.000Z",
            "author": {
                "name": "georgeclaghorn",
                "url": "https://github.com/georgeclaghorn"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/75187597?u=68c0f410b8ee3255a103943b21427b556f9a5a21&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">ActiveJob produces a large amount of log noise, because errors that are emitted from ActiveJob don't have the standard Rails BacktraceCleaner applied. This is especially apparent when using Sorbet for Ruby types, since each application method call is wrapped by multiple Sorbet typechecking functions. My application's activejob error backtraces would typically log 4 non-relevant Sorbet function calls for each application function call. My workaround has been to monkey-patch Rails in our application. However, it seems to make sense to simply bring this behavior into ActiveJob as the default, as the backtrace cleaner is a pretty standard piece of Rails machinery that is used for most other backtraces in Rails.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">When ActiveJob encounters an error performing a job, rather than printing the full unfiltered (and noisy) exception backtrace, print the cleaned backtrace using Rails's BacktraceCleaner.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CI is passing.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/46555",
            "title": "Small PR: Apply Rails backtrace cleaner to ActiveJob backtrace printout",
            "date_modified": "2022-12-11T11:33:55.000Z",
            "date_published": "2022-11-23T00:45:44.000Z",
            "author": {
                "name": "warrenbhw",
                "url": "https://github.com/warrenbhw"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/212648?u=26fba345a54b891629623ec9549fc0c54a2c2950&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">This Pull Request has been created because I needed <code class=\"notranslate\">retry_on attempts:</code> to use more complex logic than an Integer.</p>\n<p dir=\"auto\">In my specific case I was creating a concern for Jobs that would use <code class=\"notranslate\">retry_on</code> to allow jobs to quietly fail and retry. The concern was going to use a method to allow attempts to be customized in individual jobs.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    included do\n      retry_on(QuietRetryError, wait: :exponentially_longer, attempts: quiet_retry_attempts) do\n        # ...\n      end\n    end\"><pre class=\"notranslate\"><code class=\"notranslate\">    included do\n      retry_on(QuietRetryError, wait: :exponentially_longer, attempts: quiet_retry_attempts) do\n        # ...\n      end\n    end\n</code></pre></div>\n<p dir=\"auto\">However this ran into a state where the method needed to be defined and run when the concern was included instead of being available later in the job. It would be very fragile to have to define the method before including the concern. This lead to me to looking at if attempts accepted anything besides an integer. It did not but I saw there was already a pattern in place for wait to accept a Proc. I thought if that pattern was repeated for attempts than it would allow more flexibility for configuring attempts.</p>\n<p dir=\"auto\">My original thought was to have the Proc for attempts return a number similar to what the Proc for wait does. However, on thinking about it I decided that still did not leave much flexibility because attempts would still be determined by a number. Instead I switched it to return true/false so if the next attempt occurred could be determined by whatever logic was implemented in the Proc.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request changes ActiveJob retry_on attempts so it will accept a Proc.</p>\n<p dir=\"auto\">ActiveJob retry_on allowed the wait option to be set as a Proc that calculates the wait but did not give the same option for attempts. attempts could be set to only a number of times to attempt or unlimited. However, jobs sometimes need different logic than number of executions to determine if they should try again.</p>\n<p dir=\"auto\">This PR adds support for setting attempts to a Proc that returns either true or false. On true the retry will occur.</p>\n<p dir=\"auto\">As a an example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"retry_on ProcRetryError, attempts: -&gt;(executions) { executions &lt; 2 }\"><pre class=\"notranslate\"><code class=\"notranslate\">retry_on ProcRetryError, attempts: -&gt;(executions) { executions &lt; 2 }\n</code></pre></div>\n<h3 dir=\"auto\">Additional information</h3>\n\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> There are no typos in commit messages and comments.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Feature branch is up-to-date with <code class=\"notranslate\">main</code> (if not - rebase it).</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> PR is not in a draft state.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> CI is passing.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/46245",
            "title": "Add Proc as a type for ActiveJob retry_on attempts",
            "date_modified": "2022-10-18T21:34:58.000Z",
            "date_published": "2022-10-14T14:32:44.000Z",
            "author": {
                "name": "rosew",
                "url": "https://github.com/rosew"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5657035?u=48dc5950e98b199e1ed1e8c5c3f1e4bfd2b39691&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Example:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Person.pluck_in_batches(:name, :email) do |batch|\n  jobs = batch.map { |name, email| PartyReminderJob.new(name, email) }\n  ActiveJob.perform_all_later(jobs)\nend\n\nPerson.pluck_each(:email) do |email|\n  PartyMailer.with(email: email).welcome_email.deliver_later\nend\"><pre class=\"notranslate\"><span class=\"pl-v\">Person</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pluck_in_batches</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:name</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">:email</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">batch</span>|\n  <span class=\"pl-s1\">jobs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">batch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span> <span class=\"pl-kos\">{</span> |<span class=\"pl-s1\">name</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">email</span>| <span class=\"pl-v\">PartyReminderJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">email</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span>\n  <span class=\"pl-v\">ActiveJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_all_later</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">jobs</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-v\">Person</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pluck_each</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:email</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">email</span>|\n  <span class=\"pl-v\">PartyMailer</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">with</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">email</span>: <span class=\"pl-s1\">email</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">welcome_email</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">deliver_later</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">Plucking in batches is a very popular feature I saw many projects reimplement themselves to gain some performance.<br>\nI saw this in 2 my previous projects, in OSS projects (was able to find in <a href=\"https://github.com/mastodon/mastodon/blob/main/lib/active_record/batches.rb\">mastodon</a>), a few popular <a href=\"https://rubygems.org/search?query=pluck\" rel=\"nofollow\">gems</a>.</p>\n<h2 dir=\"auto\">Benchmarks</h2>\n<p dir=\"auto\">Tested on a table with 50M records.<br>\nCompared to the recently introduced <a href=\"https://github.com/rails/rails/pull/45414\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45414/hovercard\">optimization</a> for range batching.</p>\n<div class=\"highlight highlight-source-sql notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"CREATE TABLE users (id bigserial PRIMARY KEY, val integer);\nINSERT INTO users (val) SELECT floor(random() * 30 + 1)::int FROM generate_series(1, 50000000) AS i;\nANALYZE users;\"><pre class=\"notranslate\"><span class=\"pl-k\">CREATE</span> <span class=\"pl-k\">TABLE</span> <span class=\"pl-en\">users</span> (id <span class=\"pl-k\">bigserial</span> <span class=\"pl-k\">PRIMARY KEY</span>, val <span class=\"pl-k\">integer</span>);\n<span class=\"pl-k\">INSERT INTO</span> users (val) <span class=\"pl-k\">SELECT</span> floor(random() <span class=\"pl-k\">*</span> <span class=\"pl-c1\">30</span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>)::<span class=\"pl-k\">int</span> <span class=\"pl-k\">FROM</span> generate_series(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">50000000</span>) <span class=\"pl-k\">AS</span> i;\nANALYZE users;</pre></div>\n<h3 dir=\"auto\">Whole table batching</h3>\n<p dir=\"auto\">Using ranges:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"start = Process.clock_gettime(Process::CLOCK_MONOTONIC)\nUser.in_batches(use_ranges: true) do |batch|\n  batch.pluck(:id, :val)\nend\n\nelapsed = Process.clock_gettime(Process::CLOCK_MONOTONIC) - start\nputs &quot;Elapsed: #{elapsed}s&quot;\"><pre class=\"notranslate\"><span class=\"pl-s1\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clock_gettime</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Process</span>::<span class=\"pl-c1\">CLOCK_MONOTONIC</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">in_batches</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">use_ranges</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">batch</span>|\n  <span class=\"pl-s1\">batch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pluck</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:id</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">:val</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-s1\">elapsed</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clock_gettime</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Process</span>::<span class=\"pl-c1\">CLOCK_MONOTONIC</span><span class=\"pl-kos\">)</span> - <span class=\"pl-s1\">start</span>\n<span class=\"pl-en\">puts</span> <span class=\"pl-s\">\"Elapsed: <span class=\"pl-s1\"><span class=\"pl-kos\">#{</span><span class=\"pl-s1\">elapsed</span><span class=\"pl-kos\">}</span></span>s\"</span></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">Elapsed: 209.20533800008707s</code></p>\n<p dir=\"auto\">Plucking in batches:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"start = Process.clock_gettime(Process::CLOCK_MONOTONIC)\nUser.pluck_in_batches(:id, :val) { }\nelapsed = Process.clock_gettime(Process::CLOCK_MONOTONIC) - start\nputs &quot;Elapsed: #{elapsed}s&quot;\"><pre class=\"notranslate\"><span class=\"pl-s1\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clock_gettime</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Process</span>::<span class=\"pl-c1\">CLOCK_MONOTONIC</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pluck_in_batches</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:id</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">:val</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-s1\">elapsed</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clock_gettime</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Process</span>::<span class=\"pl-c1\">CLOCK_MONOTONIC</span><span class=\"pl-kos\">)</span> - <span class=\"pl-s1\">start</span>\n<span class=\"pl-en\">puts</span> <span class=\"pl-s\">\"Elapsed: <span class=\"pl-s1\"><span class=\"pl-kos\">#{</span><span class=\"pl-s1\">elapsed</span><span class=\"pl-kos\">}</span></span>s\"</span></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">Elapsed: 113.7704949999461s</code> <g-emoji class=\"g-emoji\" alias=\"fire\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f525.png\">🔥</g-emoji></p>\n<h3 dir=\"auto\">Batching with conditions</h3>\n<p dir=\"auto\">Using ranges:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"start = Process.clock_gettime(Process::CLOCK_MONOTONIC)\nUser.where(&quot;val = 21&quot;).in_batches(use_ranges: true) do |batch|\n  batch.pluck(:id, :val)\nend\nelapsed = Process.clock_gettime(Process::CLOCK_MONOTONIC) - start\nputs &quot;Elapsed: #{elapsed}s&quot;\"><pre class=\"notranslate\"><span class=\"pl-s1\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clock_gettime</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Process</span>::<span class=\"pl-c1\">CLOCK_MONOTONIC</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"val = 21\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">in_batches</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">use_ranges</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">batch</span>|\n  <span class=\"pl-s1\">batch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pluck</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:id</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">:val</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-k\">end</span>\n<span class=\"pl-s1\">elapsed</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clock_gettime</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Process</span>::<span class=\"pl-c1\">CLOCK_MONOTONIC</span><span class=\"pl-kos\">)</span> - <span class=\"pl-s1\">start</span>\n<span class=\"pl-en\">puts</span> <span class=\"pl-s\">\"Elapsed: <span class=\"pl-s1\"><span class=\"pl-kos\">#{</span><span class=\"pl-s1\">elapsed</span><span class=\"pl-kos\">}</span></span>s\"</span></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">Elapsed: 28.136486999923363s</code></p>\n<p dir=\"auto\">No ranges:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"start = Process.clock_gettime(Process::CLOCK_MONOTONIC)\nUser.where(&quot;val = 21&quot;).in_batches do |batch|\n  batch.pluck(:id, :val)\nend\nelapsed = Process.clock_gettime(Process::CLOCK_MONOTONIC) - start\nputs &quot;Elapsed: #{elapsed}s&quot;\"><pre class=\"notranslate\"><span class=\"pl-s1\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clock_gettime</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Process</span>::<span class=\"pl-c1\">CLOCK_MONOTONIC</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"val = 21\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">in_batches</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">batch</span>|\n  <span class=\"pl-s1\">batch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pluck</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:id</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">:val</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-k\">end</span>\n<span class=\"pl-s1\">elapsed</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clock_gettime</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Process</span>::<span class=\"pl-c1\">CLOCK_MONOTONIC</span><span class=\"pl-kos\">)</span> - <span class=\"pl-s1\">start</span>\n<span class=\"pl-en\">puts</span> <span class=\"pl-s\">\"Elapsed: <span class=\"pl-s1\"><span class=\"pl-kos\">#{</span><span class=\"pl-s1\">elapsed</span><span class=\"pl-kos\">}</span></span>s\"</span></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">Elapsed: 39.96518399997149s</code></p>\n<p dir=\"auto\">Plucking in batches:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"start = Process.clock_gettime(Process::CLOCK_MONOTONIC)\nUser.where(&quot;val = 21&quot;).pluck_in_batches(:id, :val) do |batch|\nend\nelapsed = Process.clock_gettime(Process::CLOCK_MONOTONIC) - start\nputs &quot;Elapsed: #{elapsed}s&quot;\"><pre class=\"notranslate\"><span class=\"pl-s1\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clock_gettime</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Process</span>::<span class=\"pl-c1\">CLOCK_MONOTONIC</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"val = 21\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pluck_in_batches</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:id</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">:val</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">batch</span>|\n<span class=\"pl-k\">end</span>\n<span class=\"pl-s1\">elapsed</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clock_gettime</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Process</span>::<span class=\"pl-c1\">CLOCK_MONOTONIC</span><span class=\"pl-kos\">)</span> - <span class=\"pl-s1\">start</span>\n<span class=\"pl-en\">puts</span> <span class=\"pl-s\">\"Elapsed: <span class=\"pl-s1\"><span class=\"pl-kos\">#{</span><span class=\"pl-s1\">elapsed</span><span class=\"pl-kos\">}</span></span>s\"</span></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">Elapsed: 16.415813000057824s</code> <g-emoji class=\"g-emoji\" alias=\"fire\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f525.png\">🔥</g-emoji></p>\n<p dir=\"auto\">These numbers are for the db on my local machine. The improvement will be much larger in production due to simpler queries and SQL queries reduction by half.</p>\n<p dir=\"auto\">Also, implementing this feature would make <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1595875696\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/47466\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/47466/hovercard\" href=\"https://github.com/rails/rails/pull/47466\">#47466</a> unneeded.</p>\n<p dir=\"auto\">The logic in <code class=\"notranslate\">pluck_in_batches</code> looks similar to <code class=\"notranslate\">in_batches</code>, but trying to dry it (extracting similar logic into helper methods or trying to reuse <code class=\"notranslate\">pluck_in_batches</code> inside <code class=\"notranslate\">in_batches</code>) will make the code more complex and less understandable.</p>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/nvasilevski/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nvasilevski\">@nvasilevski</a> (as we discussed it in <a href=\"https://discuss.rubyonrails.org/t/yield-record-ids-to-in-batches-block/81102\" rel=\"nofollow\">https://discuss.rubyonrails.org/t/yield-record-ids-to-in-batches-block/81102</a>)</p>",
            "url": "https://github.com/rails/rails/pull/47894",
            "title": "Add `pluck_each` and `pluck_in_batches` batching methods",
            "date_modified": "2023-05-16T11:14:32.000Z",
            "date_published": "2023-04-08T11:12:06.000Z",
            "author": {
                "name": "fatkodima",
                "url": "https://github.com/fatkodima"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2575027?u=e7a9fe052c03fa59da09e064fdfacf2b1f627c2f&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">Active Support expects a <code class=\"notranslate\">File</code> instance, or at the very least an open <code class=\"notranslate\">IO</code> instance.<br>\nUnfortunately, a <code class=\"notranslate\">URL</code> is neither, but can be transformed into one.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This commit introduces the <code class=\"notranslate\">ActiveStorage::AttachRemoteFileJob</code> to download the remote file referenced by the <code class=\"notranslate\">URL</code>.</p>\n<p dir=\"auto\">When saving a record with attachments, support assignment to <code class=\"notranslate\">#{name}_url</code> and <code class=\"notranslate\">#{name}_urls</code> (for <code class=\"notranslate\">has_one_attached</code> and <code class=\"notranslate\">has_many_attached</code>, respectively), then download those for their underlying attachments.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"url = &quot;http://example.com/racecar.jpg&quot;\nrecord = User.new(...)\n\nassert_enqueued_with job: ActiveStorage::AttachRemoteFileJob, args: [record, :avatar, url] do\n  record.update! avatar_url: url\nend\n\n # some time later\n\nrecord.avatar.attached? #=&gt; true\"><pre class=\"notranslate\"><span class=\"pl-s1\">url</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"http://example.com/racecar.jpg\"</span>\n<span class=\"pl-s1\">record</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span>...<span class=\"pl-kos\">)</span>\n\n<span class=\"pl-en\">assert_enqueued_with</span> <span class=\"pl-pds\">job</span>: <span class=\"pl-v\">ActiveStorage</span>::<span class=\"pl-v\">AttachRemoteFileJob</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">args</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s1\">record</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">:avatar</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">url</span><span class=\"pl-kos\">]</span> <span class=\"pl-k\">do</span>\n  <span class=\"pl-s1\">record</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">update!</span> <span class=\"pl-pds\">avatar_url</span>: <span class=\"pl-s1\">url</span>\n<span class=\"pl-k\">end</span>\n\n <span class=\"pl-c\"># some time later</span>\n\n<span class=\"pl-s1\">record</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">avatar</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">attached?</span> <span class=\"pl-c\">#=&gt; true</span></pre></div>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/46801",
            "title": "Introduce ActiveStorage::AttachRemoteFileJob",
            "date_modified": "2023-01-30T11:56:07.000Z",
            "date_published": "2022-12-23T15:04:17.000Z",
            "author": {
                "name": "seanpdoyle",
                "url": "https://github.com/seanpdoyle"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3263575?u=92ee5d4a6a643b31856ac542ba409309c5389493&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">I am trying to handle the case where the last step of a direct upload fails (the <code class=\"notranslate\">PATCH</code> call to my model), and I have noticed an odd behaviour. Here goes:</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ul dir=\"auto\">\n<li>Set up the <code class=\"notranslate\">Profile</code> model with <code class=\"notranslate\">has_one_attached :document</code>.</li>\n<li>Create an instance of <code class=\"notranslate\">Profile</code> (referred to as <code class=\"notranslate\">profile</code>)</li>\n<li>Use a direct upload form to attach a document to <code class=\"notranslate\">profile</code> (controller and view code below)</li>\n<li>Everything works fine so far, I can see the image and its filename.</li>\n<li>Force a failure in the <code class=\"notranslate\">PATCH</code> call to <code class=\"notranslate\">/profile/document</code>: intentionally modify a validation in the Profile model so that any call to Profile#update fails</li>\n<li>Upload another document for the same Profile, and watch the <code class=\"notranslate\">PATCH</code> fail.</li>\n</ul>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When this last step fails, I'd expect the whole state of my app to go back to its state from before the beginning of the upload process (the <code class=\"notranslate\">POST</code> call to <code class=\"notranslate\">rails/active_storage/direct_uploads</code>).</p>\n<p dir=\"auto\">I'd also expect the former file to still be there on the storage, and the new one to not be there.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The Attachment record for my Profile is still the same, but the original Blob was destroyed, and replaced by a new one (created by the first <code class=\"notranslate\">POST</code> to <code class=\"notranslate\">rails/active_storage/direct_uploads</code>). The Attachment points to the destroyed Blob.</p>\n<p dir=\"auto\"><code class=\"notranslate\">profile.document.attached?</code> returns <code class=\"notranslate\">true</code>, but other methods, e.g. <code class=\"notranslate\">filename</code> or <code class=\"notranslate\">service_url</code> are undefined. This breaks my views: the if passes, the statements inside break.</p>\n<p dir=\"auto\">S3/Disk contains the new file, and does not contain the former one.</p>\n<p dir=\"auto\">The logs tell me that the first call from the client to <code class=\"notranslate\">/rails/active_storage/direct_uploads</code> creates a Blob. Then, after the upload to S3 is done, the <code class=\"notranslate\">PATCH</code> call to <code class=\"notranslate\">/profile/document</code> destroys the former Attachment and creates a new one, but this is all rolled back when my validation fails. However, it also enqueues a job that purges the former Blob, instead of purging the newly created one.</p>\n<p dir=\"auto\">From my understanding, what this job does should depend upon the success of the <code class=\"notranslate\">PATCH</code> call. Is this an actual bug, or am I supposed to handle this manually? Or maybe there's just another way to write things and make it work automagically?</p>\n<p dir=\"auto\">One workaround I found is to call purge or detach on the document when the update fails. From a user's point of view it removes the former document, which isn't so nice, but at least my views don't break. The Attachment is destroyed, the Blob remains, the former file is destroyed, the new one is stored. This fix is commented out in the code sample.</p>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\">I get the bug on my local environment, both with S3 and Disk as targets.</p>\n<p dir=\"auto\"><strong>Rails version</strong>:<br>\nRails 5.2.0.rc1</p>\n<p dir=\"auto\"><strong>Ruby version</strong>:<br>\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin17]</p>\n<h3 dir=\"auto\">Code samples</h3>\n<p dir=\"auto\">Adapted for better readability.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class ProfilesController &lt; ApplicationController\n  def update\n    if current_user.profile.update(document_params)\n      flash[:notice] = &quot;Your document was successfully uploaded&quot;\n    else\n      # current_profile.reload.identity_document.purge # The fix\n      flash[:alert] = &quot;Something went wrong.&quot;\n    end\n    redirect_to my_form_url\n  end\n\n  private\n\n  def document_params\n    params.require(:profile).permit(:document)\n  end\nend\"><pre class=\"notranslate\"><code class=\"notranslate\">class ProfilesController &lt; ApplicationController\n  def update\n    if current_user.profile.update(document_params)\n      flash[:notice] = \"Your document was successfully uploaded\"\n    else\n      # current_profile.reload.identity_document.purge # The fix\n      flash[:alert] = \"Something went wrong.\"\n    end\n    redirect_to my_form_url\n  end\n\n  private\n\n  def document_params\n    params.require(:profile).permit(:document)\n  end\nend\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;% if @profile.document.attached? %&gt;\n    &lt;%= @profile.document.filename %&gt;\n    &lt;%= image_tag @profile.document %&gt;\n&lt;% else %&gt;\n    No document yet\n&lt;% end %&gt;\n\n&lt;%= form_for @profile do |f| %&gt;\n    &lt;%= f.file_field :document, direct_upload: true %&gt;\n    &lt;%= f.submit %&gt;\n&lt;% end %&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">&lt;% if @profile.document.attached? %&gt;\n    &lt;%= @profile.document.filename %&gt;\n    &lt;%= image_tag @profile.document %&gt;\n&lt;% else %&gt;\n    No document yet\n&lt;% end %&gt;\n\n&lt;%= form_for @profile do |f| %&gt;\n    &lt;%= f.file_field :document, direct_upload: true %&gt;\n    &lt;%= f.submit %&gt;\n&lt;% end %&gt;\n</code></pre></div>\n<p dir=\"auto\">Thanks in advance for your help!</p>",
            "url": "https://github.com/rails/rails/issues/31985",
            "title": "ActiveStorage: invalid Attachment when last step of direct upload fails",
            "date_modified": "2023-02-16T00:18:19.000Z",
            "date_published": "2018-02-13T17:56:05.000Z",
            "author": {
                "name": "SimonFrr",
                "url": "https://github.com/SimonFrr"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2741?u=387c085565dc648f11d835558ad1b6d524ddc91d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is a common source of job errors:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Project &lt; ApplicationRecord\n  after_create -&gt; { NotifyProjectParticipants.perform_later self }\nend\n\nclass NotifyProjectParticipants &lt; ApplicationJob\n  def perform(project)\n    # This will explode with a ActiveJob::DeserializationError,\n    #  if the job runs before the INSERT transaction for the new project completes.\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">Project</span> &lt; <span class=\"pl-v\">ApplicationRecord</span>\n  <span class=\"pl-en\">after_create</span> <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">NotifyProjectParticipants</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span> <span class=\"pl-smi\">self</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">NotifyProjectParticipants</span> &lt; <span class=\"pl-v\">ApplicationJob</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">project</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># This will explode with a ActiveJob::DeserializationError,</span>\n    <span class=\"pl-c\">#  if the job runs before the INSERT transaction for the new project completes.</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">It's insidious too. Because it'll often work in development, then fail in production, when your job queue is really fast, and your database might be bogged down.</p>\n<p dir=\"auto\">The proper way is of course:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Project &lt; ApplicationRecord\n  after_create_commit -&gt; { NotifyProjectParticipants.perform_later self }\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">Project</span> &lt; <span class=\"pl-v\">ApplicationRecord</span>\n  <span class=\"pl-en\">after_create_commit</span> <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">NotifyProjectParticipants</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span> <span class=\"pl-smi\">self</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">But that's easy to forget. So I suggest that we create a new default that disallow jobs from being scheduled within transactions. You should be able to turn that off, but it would be a better default, since it would catch this class for errors for more people before they deploy to production.</p>",
            "url": "https://github.com/rails/rails/issues/26045",
            "title": "Prevent jobs from being scheduled within transactions",
            "date_modified": "2021-03-09T23:05:04.000Z",
            "date_published": "2016-08-03T17:21:16.000Z",
            "author": {
                "name": "dhh",
                "url": "https://github.com/dhh"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/771968?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1286607479\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45476\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45476/hovercard\" href=\"https://github.com/rails/rails/pull/45476\">#45476</a>, <code class=\"notranslate\">ActiveRecord::Base.destroy_association_async_job</code> was made to accept a string which would be lazily constantized, to avoid loading <code class=\"notranslate\">ActiveJob::Base</code> too soon.  However, due to the way <code class=\"notranslate\">class_attribute</code> values are written, <em>each subclass</em> calling <code class=\"notranslate\">destroy_association_async_job</code> will <a href=\"https://github.com/rails/rails/pull/45476/files#diff-4411c7993e3f8ccfd8e09f44a81f10dfac3ea7dbd44cabd60b369040a00be324R28\">allocate a <code class=\"notranslate\">_destroy_association_async_job</code> singleton method</a> regardless of whether the subclass assigns a custom job value.</p>\n<p dir=\"auto\">Additionally, <code class=\"notranslate\">class_attribute</code> requires using a dummy attribute name so that the post-processing reader method is not overwritten when the attribute is set.  This is particularly <a href=\"https://github.com/rails/rails/pull/45476/files#diff-4411c7993e3f8ccfd8e09f44a81f10dfac3ea7dbd44cabd60b369040a00be324R35-R36\">cumbersome</a> when instance accessors are involved.</p>\n<p dir=\"auto\">This PR re-implements <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1286607479\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45476\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45476/hovercard\" href=\"https://github.com/rails/rails/pull/45476\">#45476</a> by adding support for a transform block to <code class=\"notranslate\">class_attribute</code>.  A transform block is applied to an attribute value when that value is first read, and the result is memoized as the actual value of the attribute.  Thus, using a transform block, <code class=\"notranslate\">destroy_association_async_job</code> can lazily constantize and memoize the result, without allocating additional singleton methods, and without juggling attribute names.</p>\n<p dir=\"auto\">The PR also applies the same technique to <code class=\"notranslate\">ActionMailer::Base.delivery_job</code>.  <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes pull request #45486.\">Closes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1287965823\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45486\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45486/hovercard\" href=\"https://github.com/rails/rails/pull/45486\">#45486</a>.</p>\n<p dir=\"auto\">I wrote about a few of the alternatives I considered in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1305305580\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45603\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45603/hovercard\" href=\"https://github.com/rails/rails/pull/45603\">#45603</a>.  <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes pull request #45603.\">Closes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1305305580\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45603\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45603/hovercard\" href=\"https://github.com/rails/rails/pull/45603\">#45603</a>.</p>",
            "url": "https://github.com/rails/rails/pull/45622",
            "title": "Use `class_attribute` transform block for job config",
            "date_modified": "2022-07-28T06:53:09.000Z",
            "date_published": "2022-07-18T20:56:53.000Z",
            "author": {
                "name": "jonathanhefner",
                "url": "https://github.com/jonathanhefner"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8219340?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n\n<p dir=\"auto\">ActiveJob serializes <code class=\"notranslate\">Symbol</code> <code class=\"notranslate\">Hash</code> keys by stringifying them, and storing an array of keys to be symbolized on deserialization as <code class=\"notranslate\">_aj_symbol_keys</code>. This means that if a <code class=\"notranslate\">Hash</code> has both <code class=\"notranslate\">Symbol</code> and <code class=\"notranslate\">String</code> keys with the same contents, they will collide.</p>\n<p dir=\"auto\">Specifically, the resulting hash ends up containing only a pair consisting of:</p>\n<ul dir=\"auto\">\n<li>the symbol key</li>\n<li>the last value</li>\n</ul>\n<p dir=\"auto\">This PR adds a check for this and logs a deprecation warning. It also introduces a setting to <code class=\"notranslate\">raise</code> instead of logging the warning, with the intention of making this behavior the default in Rails 7.2/8.0.</p>\n<h3 dir=\"auto\">Other Information</h3>\n\n\n<p dir=\"auto\">I have left a number of placeholders for the time being, because I wanted to get initial review and confirm we want to do this, before investing the time to write the docs, deprecation message, changelog, etc.</p>\n<hr>\n<p dir=\"auto\">cc. <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Mangara/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Mangara\">@Mangara</a>, who mentioned this in Slack</p>",
            "url": "https://github.com/rails/rails/pull/45676",
            "title": "Detect colliding keys in Active Job Hash serialization",
            "date_modified": "2022-07-28T07:38:01.000Z",
            "date_published": "2022-07-28T07:37:57.000Z",
            "author": {
                "name": "sambostock",
                "url": "https://github.com/sambostock"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/99586?u=b4abd791d83e768c72cb832147b4a210caecf47d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">ActiveStorage variants are processed on the fly when they are needed but sometimes we're sure that they are accessed and want to process them upfront.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\"><code class=\"notranslate\">eager_transform</code> option is added when declaring variants.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class User &lt; ApplicationRecord\n  has_one_attached :avatar do |attachable|\n    attachable.variant :thumb, resize_to_limit: [100, 100], eager_transform: true\n  end\nend\"><pre class=\"notranslate\"><code class=\"notranslate\">class User &lt; ApplicationRecord\n  has_one_attached :avatar do |attachable|\n    attachable.variant :thumb, resize_to_limit: [100, 100], eager_transform: true\n  end\nend\n</code></pre></div>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">See also <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1583888020\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/47387\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/47387/hovercard\" href=\"https://github.com/rails/rails/issues/47387\">#47387</a>.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/47473",
            "title": "Add eager transformation of AS variants",
            "date_modified": "2023-04-20T08:52:44.000Z",
            "date_published": "2023-02-23T05:04:46.000Z",
            "author": {
                "name": "shouichi",
                "url": "https://github.com/shouichi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/771968?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1286607479\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45476\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45476/hovercard\" href=\"https://github.com/rails/rails/pull/45476\">#45476</a>, <code class=\"notranslate\">ActiveRecord::Base.destroy_association_async_job</code> was made to accept a string which would lazily be constantized, to avoid loading <code class=\"notranslate\">ActiveJob::Base</code> too soon.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1287965823\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45486\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45486/hovercard\" href=\"https://github.com/rails/rails/pull/45486\">#45486</a> intends to solve the same problem for <code class=\"notranslate\">ActionMailer::Base.delivery_job</code>.</p>\n<p dir=\"auto\">While thinking about how to simplify the code from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1286607479\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45476\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45476/hovercard\" href=\"https://github.com/rails/rails/pull/45476\">#45476</a> for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1287965823\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45486\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45486/hovercard\" href=\"https://github.com/rails/rails/pull/45486\">#45486</a>, I realized that <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1286607479\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45476\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45476/hovercard\" href=\"https://github.com/rails/rails/pull/45476\">#45476</a> allocates a <code class=\"notranslate\">_destroy_association_async_job</code> method for every constantize.  e.g. Even if <code class=\"notranslate\">Post</code> and <code class=\"notranslate\">Comment</code> classes do not set a custom destroy job, <a href=\"https://github.com/rails/rails/pull/45476/files#diff-4411c7993e3f8ccfd8e09f44a81f10dfac3ea7dbd44cabd60b369040a00be324R28\"><code class=\"notranslate\">self._destroy_association_async_job = _destroy_association_async_job.constantize</code></a> will define a new singleton method for each class.</p>\n<p dir=\"auto\">This could be addressed by calling <code class=\"notranslate\">_destroy_association_async_job=</code> on the method owner:</p>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"index 0aa59fe885..b981f2e934 100644\n--- a/activerecord/lib/active_record/core.rb\n+++ b/activerecord/lib/active_record/core.rb\n@@ -25,7 +25,8 @@ module Core\n       # The job class used to destroy associations in the background.\n       def self.destroy_association_async_job\n         if _destroy_association_async_job.is_a?(String)\n-          self._destroy_association_async_job = _destroy_association_async_job.constantize\n+          owner = method(:_destroy_association_async_job=).owner\n+          owner._destroy_association_async_job = _destroy_association_async_job.constantize\n         end\n         _destroy_association_async_job\n       rescue NameError =&gt; error\"><pre class=\"notranslate\">index 0aa59fe885..b981f2e934 100644\n<span class=\"pl-md\">--- a/activerecord/lib/active_record/core.rb</span>\n<span class=\"pl-mi1\">+++ b/activerecord/lib/active_record/core.rb</span>\n<span class=\"pl-mdr\">@@ -25,7 +25,8 @@</span> module Core\n       # The job class used to destroy associations in the background.\n       def self.destroy_association_async_job\n         if _destroy_association_async_job.is_a?(String)\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>          self._destroy_association_async_job = _destroy_association_async_job.constantize</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>          owner = method(:_destroy_association_async_job=).owner</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>          owner._destroy_association_async_job = _destroy_association_async_job.constantize</span>\n         end\n         _destroy_association_async_job\n       rescue NameError =&gt; error</pre></div>\n<p dir=\"auto\">But that makes the code even more cumbersome to replicate for e.g. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1287965823\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45486\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/45486/hovercard\" href=\"https://github.com/rails/rails/pull/45486\">#45486</a>.  And this seems like a pattern that may reoccur.</p>\n<p dir=\"auto\">This <strong>draft</strong> PR proposes a <code class=\"notranslate\">class_attribute</code> <code class=\"notranslate\">:constantize</code> option that would auto-constantize string values without allocating any additional singleton methods.</p>\n<p dir=\"auto\">On one hand, a <code class=\"notranslate\">:constantize</code> option feels over-specific.  On the other hand, it is an extremely simple and efficient implementation.</p>\n<p dir=\"auto\">Another alternative I considered was a <a href=\"https://github.com/jonathanhefner/rails/commit/8b533464fde986125f1f89580e1da4362937bbd5\"><code class=\"notranslate\">class_attribute</code> <code class=\"notranslate\">:lazy</code> option</a>.  It feels less over-specific, but requires wrapping values in a proc.</p>\n<p dir=\"auto\">And yet another alternative I considered was a <a href=\"https://github.com/jonathanhefner/rails/commit/06b2db17ce59a371a1944843476b286323b5259d\"><code class=\"notranslate\">ConstantizingProxy</code></a> class.  It is the least invasive / most orthogonal implementation, but it requires wrapping values in a proxy object, which is even less convenient than a proc.</p>",
            "url": "https://github.com/rails/rails/pull/45603",
            "title": "Add `:constantize` option for `class_attribute`",
            "date_modified": "2022-07-19T16:36:30.000Z",
            "date_published": "2022-07-14T21:26:48.000Z",
            "author": {
                "name": "jonathanhefner",
                "url": "https://github.com/jonathanhefner"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/16636757?u=27830160a8177896eb66623c0a9b730015a2aae0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR removes the noise in the tests below</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bin/test test/callbacks_test.rb\n\n# Running:\n\n.....[ActiveJob] [ActionMailer::MailDeliveryJob] [9388b095-a5f6-4a34-a0d8-9c87d89f1c1e] Performing ActionMailer::MailDeliveryJob (Job ID: 9388b095-a5f6-4a34-a0d8-9c87d89f1c1e) from Test(mailers) enqueued at 2023-04-26T14:46:50.506852000Z with arguments: &quot;CallbackMailer&quot;, &quot;test_message&quot;, &quot;deliver_now&quot;, {:args=&gt;[]}\n[ActiveJob] [ActionMailer::MailDeliveryJob] [9388b095-a5f6-4a34-a0d8-9c87d89f1c1e] Performed ActionMailer::MailDeliveryJob (Job ID: 9388b095-a5f6-4a34-a0d8-9c87d89f1c1e) from Test(mailers) in 1.22ms\n[ActiveJob] Enqueued ActionMailer::MailDeliveryJob (Job ID: 9388b095-a5f6-4a34-a0d8-9c87d89f1c1e) to Test(mailers) with arguments: &quot;CallbackMailer&quot;, &quot;test_message&quot;, &quot;deliver_now&quot;, {:args=&gt;[]}\n.\n\nFinished in 0.110022s, 54.5345 runs/s, 136.3364 assertions/s.\n6 runs, 15 assertions, 0 failures, 0 errors, 0 skips\"><pre class=\"notranslate\"><code class=\"notranslate\">bin/test test/callbacks_test.rb\n\n# Running:\n\n.....[ActiveJob] [ActionMailer::MailDeliveryJob] [9388b095-a5f6-4a34-a0d8-9c87d89f1c1e] Performing ActionMailer::MailDeliveryJob (Job ID: 9388b095-a5f6-4a34-a0d8-9c87d89f1c1e) from Test(mailers) enqueued at 2023-04-26T14:46:50.506852000Z with arguments: \"CallbackMailer\", \"test_message\", \"deliver_now\", {:args=&gt;[]}\n[ActiveJob] [ActionMailer::MailDeliveryJob] [9388b095-a5f6-4a34-a0d8-9c87d89f1c1e] Performed ActionMailer::MailDeliveryJob (Job ID: 9388b095-a5f6-4a34-a0d8-9c87d89f1c1e) from Test(mailers) in 1.22ms\n[ActiveJob] Enqueued ActionMailer::MailDeliveryJob (Job ID: 9388b095-a5f6-4a34-a0d8-9c87d89f1c1e) to Test(mailers) with arguments: \"CallbackMailer\", \"test_message\", \"deliver_now\", {:args=&gt;[]}\n.\n\nFinished in 0.110022s, 54.5345 runs/s, 136.3364 assertions/s.\n6 runs, 15 assertions, 0 failures, 0 errors, 0 skips\n</code></pre></div>",
            "url": "https://github.com/rails/rails/pull/48070",
            "title": "Remove noise from actionmailer callbacks test",
            "date_modified": "2023-04-26T23:52:30.000Z",
            "date_published": "2023-04-26T14:48:55.000Z",
            "author": {
                "name": "shivamsinghchahar",
                "url": "https://github.com/shivamsinghchahar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/16636757?u=27830160a8177896eb66623c0a9b730015a2aae0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Currently, we don't document the use case for ActiveJob's <code class=\"notranslate\">queue_with_priority</code> block arguments. It seems necessary to document them in the API docs as well considering how useful this option is.</p>",
            "url": "https://github.com/rails/rails/pull/48099",
            "title": "Document queue_with_priority block arguments and their use [ci skip]",
            "date_modified": "2023-05-20T23:22:02.000Z",
            "date_published": "2023-04-30T06:51:33.000Z",
            "author": {
                "name": "shivamsinghchahar",
                "url": "https://github.com/shivamsinghchahar"
            }
        }
    ]
}