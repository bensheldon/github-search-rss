{
    "version": "https://jsonfeed.org/version/1",
    "title": "rails/rails: Issues containing 'ActiveJob Job'",
    "home_page_url": "https://github.com/search?q=ActiveJob+Job+repo%3Arails%2Frails+is%3Aissue&type=Issues",
    "feed_url": "https://bensheldon.github.io/github-search-rss/rails-activejob.json",
    "description": "rails/rails: Issues containing 'ActiveJob Job' on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/47848?u=41ccf0d1865a17f47d140f73a3293f1f3559fc0f&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This config now accepts the following values:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">:never</code> - Never defer the enqueue.</li>\n<li><code class=\"notranslate\">:always</code> - Always defer the enqueue.</li>\n<li><code class=\"notranslate\">:default</code> - Let the queue adapter define the behaviour.</li>\n</ul>\n<p dir=\"auto\">We believe that his behavior should not be defined by the adapter, and changing its value globally to all jobs can be too much of a sharp knife.</p>\n<p dir=\"auto\">We should still allow specific jobs to change <code class=\"notranslate\">enqueue_after_transaction_commit</code> between <code class=\"notranslate\">true</code> and <code class=\"notranslate\">false</code>, but document explicitly what are the issues that messing with this value could cause.</p>\n<p dir=\"auto\">See discussion in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2476187879\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/52659\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/52659/hovercard?comment_id=2302422632&amp;comment_type=issue_comment\" href=\"https://github.com/rails/rails/pull/52659#issuecomment-2302422632\">#52659 (comment)</a></p>",
            "url": "https://github.com/rails/rails/issues/52675",
            "title": "Deprecate `config.active_job.enqueue_after_transaction_commit` config",
            "date_modified": "2024-10-09T21:49:40.000Z",
            "date_published": "2024-08-21T20:09:31.000Z",
            "author": {
                "name": "rafaelfranca",
                "url": "https://github.com/rafaelfranca"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2741?u=ce0dd0173c534e7e8b72e1cb393fed76e904a91c&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">We used to ship with a million database adapters in the box, but eventually settled on just offering official support for mysql/pgsql/sqlite. Folks can of course use whatever database they desire, but the work to maintain db2 or sqlserver or oracle falls to those vendors or the broader community.</p>\n<p dir=\"auto\">With Solid Queue becoming the default for Rails 8, it's time to do the same for Active Job. For starters, I think we can boil it down to the single-process adapters (inline/async/test) and then adapters for resque, sidekiq, and then of course Solid Queue (which actually just has the adapter in the gem!). Everything else should be extracted into separate adapter gems, like activejob-suckerpunch or whatever.</p>\n<p dir=\"auto\">Tracking the work:</p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th>Adapter</th>\n<th>Task</th>\n<th>PR</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>backburner_adapter</td>\n<td>Extract</td>\n<td>PDI</td>\n</tr>\n<tr>\n<td>resque_adapter</td>\n<td>Upstream</td>\n<td>PDI</td>\n</tr>\n<tr>\n<td>sneakers_adapter</td>\n<td>Extract</td>\n<td>PDI</td>\n</tr>\n<tr>\n<td>delayed_job_adapter</td>\n<td>Extract</td>\n<td>PDI</td>\n</tr>\n<tr>\n<td>queue_classic_adapter</td>\n<td>Extract</td>\n<td>PDI</td>\n</tr>\n<tr>\n<td>sidekiq_adapter</td>\n<td>Depends</td>\n<td>PDI</td>\n</tr>\n<tr>\n<td>sucker_punch_adapter</td>\n<td>Remove</td>\n<td><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2526614555\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/52935\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/52935/hovercard\" href=\"https://github.com/rails/rails/pull/52935\">#52935</a></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>",
            "url": "https://github.com/rails/rails/issues/52929",
            "title": "Eject most Active Job adapters into separate gems",
            "date_modified": "2024-09-20T02:36:17.000Z",
            "date_published": "2024-09-14T15:18:06.000Z",
            "author": {
                "name": "dhh",
                "url": "https://github.com/dhh"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/30030?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">There are three cases for error handling:</p>\n<p dir=\"auto\">1/ Normal job submission, and the job executes successfully.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"::ActiveJob::Base.execute(GoodJob.new.serialize)\"><pre class=\"notranslate\">::<span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">execute</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">GoodJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">serialize</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">2/ Normal job submission, but the job fails, and there is no appropriate error handler (<code class=\"notranslate\">retry_on</code>). The job is discarded as expected, and the error is logged, but this method still raises an exception.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"::ActiveJob::Base.execute(BadJob.new.serialize)\"><pre class=\"notranslate\">::<span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">execute</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">BadJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">serialize</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">3/ Bad job submission (or other internal error). The job is not processed, an error is raised, but there is no log.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"::ActiveJob::Base.execute({})\"><pre class=\"notranslate\">::<span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">execute</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">The problem is, the error raised by (2) is logged, but the error raised by (3) is not.</p>\n<p dir=\"auto\">A job server may wrap <code class=\"notranslate\">ActiveJob::Base.execute</code> like so:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Execute the given job.\nwhile job = read_job\n\tbegin\n\t\t::ActiveJob::Base.execute(job)\n\trescue =&gt; error\n\t\tlog_error(error)\n\tend\nend\"><pre class=\"notranslate\"><span class=\"pl-c\"># Execute the given job.</span>\n<span class=\"pl-k\">while</span> <span class=\"pl-s1\">job</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">read_job</span>\n\t<span class=\"pl-k\">begin</span>\n\t\t::<span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">execute</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">job</span><span class=\"pl-kos\">)</span>\n\t<span class=\"pl-k\">rescue</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">error</span>\n\t\t<span class=\"pl-en\">log_error</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">)</span>\n\t<span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">In case (2) above, this will lead to two log messages being emitted for the failure, one from ActiveJob and one from the Job runner. This is not ideal from a usability point of view, ideally only one log message should be emitted.</p>\n<p dir=\"auto\">One way to solve the problem is this:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Execute the given job.\nwhile job = read_job\n\tbegin\n\t\t::ActiveJob::Base.execute(job)\n\trescue =&gt; error\n\t\t# Ignore errors, logged by ActiveJob.\n\tend\nend\"><pre class=\"notranslate\"><span class=\"pl-c\"># Execute the given job.</span>\n<span class=\"pl-k\">while</span> <span class=\"pl-s1\">job</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">read_job</span>\n\t<span class=\"pl-k\">begin</span>\n\t\t::<span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">execute</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">job</span><span class=\"pl-kos\">)</span>\n\t<span class=\"pl-k\">rescue</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">error</span>\n\t\t<span class=\"pl-c\"># Ignore errors, logged by ActiveJob.</span>\n\t<span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">Now ActiveJob is fully responsible for logging. However, there are some situations as shown in case (3) where <code class=\"notranslate\">ActiveJob::Base.execute</code> can raise errors which are not logged. That is problematic as that would result in a silent failure which is a very bad user experience.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This proposal changes case (2) to not re-raise the exception if the job is not retried. The error is still logged by ActiveJob, but the error is not propagated up, as it's normal and expected that the job is discarded in that case.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/52557",
            "title": "If a job fails due to an error, it is discarded, and don't re-raise.",
            "date_modified": "2024-08-12T15:35:42.000Z",
            "date_published": "2024-08-09T23:29:35.000Z",
            "author": {
                "name": "ioquatix",
                "url": "https://github.com/ioquatix"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/277819?u=f88292414deeecfd67fee18ae9d7297bcc001138&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Follow up to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2563418980\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/53160\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/53160/hovercard\" href=\"https://github.com/rails/rails/pull/53160\">#53160</a></p>\n<p dir=\"auto\">Technically this is a behavior change so adding a changelog and tests to prevent regressions.</p>\n<p dir=\"auto\">That change was also backported to 7.2, so this can be too.</p>",
            "url": "https://github.com/rails/rails/pull/53169",
            "title": "Add tests and changelog for \"Fix log level of ActiveJob :retry_stopped event\"",
            "date_modified": "2024-10-04T16:25:23.000Z",
            "date_published": "2024-10-04T05:50:34.000Z",
            "author": {
                "name": "zzak",
                "url": "https://github.com/zzak"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/803765?u=1068ad3fe7323acb63e9fe65e558ba0aabe5d3fe&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">I realized that retrying a job from GoodJob would enqueue it in the current locale of the GoodJob dashboard, even if the job was originally enqueued in a different locale.</p>\n<p dir=\"auto\">For instance, it was enqueued in <code class=\"notranslate\">:fr</code>, and failed. When I retried it from the dashboard that was in <code class=\"notranslate\">:en</code>, it was enqueued with an <code class=\"notranslate\">:en</code> locale ( I noticed it because it failed again with a missing translation error)</p>\n<p dir=\"auto\">I tracked it down to the <code class=\"notranslate\">serialize</code> method of <code class=\"notranslate\">ActiveJob</code> who always sets <code class=\"notranslate\">locale</code> from <code class=\"notranslate\">I18n.locale</code></p>\n<p dir=\"auto\">This PR changes the serialize method to actually return the original local from the job if it is set, and default to the current locale if not.</p>",
            "url": "https://github.com/rails/rails/pull/52121",
            "title": "Include the actual ActiveJob locale when serializing rather than I18n locale",
            "date_modified": "2024-10-04T20:59:41.000Z",
            "date_published": "2024-06-13T20:17:11.000Z",
            "author": {
                "name": "Intrepidd",
                "url": "https://github.com/Intrepidd"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5122678?u=204301f9f9fe8930fd26fe3bfe65b6ffaffd8b59&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Steps to reproduce</h3>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# frozen_string_literal: true\n\nrequire &quot;bundler/inline&quot;\n\ngemfile(true) do\n  source &quot;https://rubygems.org&quot;\n\n  gem &quot;rails&quot;\n  # If you want to test against edge Rails replace the previous line with this:\n  # gem &quot;rails&quot;, github: &quot;rails/rails&quot;, branch: &quot;main&quot;\nend\n\nrequire &quot;active_job&quot;\nrequire &quot;minitest/autorun&quot;\n\nclass BuggyJob &lt; ActiveJob::Base\n  def perform\n    puts &quot;performed&quot;\n  end\nend\n\nclass BuggyJobTest &lt; ActiveJob::TestCase\n  def test_should_not_find_job\n    at =  Time.new(&quot;1989-12-31T12:00:01&quot;)\n    wait_until = Time.new(&quot;1989-12-31T12:00:02&quot;)\n\n    assert_raise ActiveSupport::TestCase::Assertion do\n      assert_enqueued_with(job: BuggyJob, at:) do\n        BuggyJob.set(wait_until:).perform_later\n      end\n    end\n  end\n\n  def test_assert_enqueued_with_date\n    at = Date.tomorrow.noon\n    wait_until = Date.tomorrow.noon\n\n    assert_enqueued_with(job: BuggyJob, at:) do\n      BuggyJob.set(wait_until:).perform_later\n    end\n  end\n\n  def test_assert_enqueued_with_date_range\n    at_matcher = -&gt;(job_at) { (Date.yesterday..Date.tomorrow).cover?(job_at) }\n\n    BuggyJob.set(wait_until: Date.today.noon).perform_later\n\n    assert_enqueued_with(job: BuggyJob, at: at_matcher)\n  end\nend\n\"><pre class=\"notranslate\"><span class=\"pl-c\"># frozen_string_literal: true</span>\n\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"bundler/inline\"</span>\n\n<span class=\"pl-en\">gemfile</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span>\n  <span class=\"pl-en\">source</span> <span class=\"pl-s\">\"https://rubygems.org\"</span>\n\n  <span class=\"pl-en\">gem</span> <span class=\"pl-s\">\"rails\"</span>\n  <span class=\"pl-c\"># If you want to test against edge Rails replace the previous line with this:</span>\n  <span class=\"pl-c\"># gem \"rails\", github: \"rails/rails\", branch: \"main\"</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"active_job\"</span>\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"minitest/autorun\"</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">BuggyJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n    <span class=\"pl-en\">puts</span> <span class=\"pl-s\">\"performed\"</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">BuggyJobTest</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">TestCase</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_should_not_find_job</span>\n    <span class=\"pl-s1\">at</span> <span class=\"pl-c1\">=</span>  <span class=\"pl-v\">Time</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"1989-12-31T12:00:01\"</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-s1\">wait_until</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Time</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"1989-12-31T12:00:02\"</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-en\">assert_raise</span> <span class=\"pl-v\">ActiveSupport</span>::<span class=\"pl-v\">TestCase</span>::<span class=\"pl-v\">Assertion</span> <span class=\"pl-k\">do</span>\n      <span class=\"pl-en\">assert_enqueued_with</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">job</span>: <span class=\"pl-v\">BuggyJob</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">at</span>:<span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span>\n        <span class=\"pl-v\">BuggyJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">set</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">wait_until</span>:<span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n      <span class=\"pl-k\">end</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_assert_enqueued_with_date</span>\n    <span class=\"pl-s1\">at</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tomorrow</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">noon</span>\n    <span class=\"pl-s1\">wait_until</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tomorrow</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">noon</span>\n\n    <span class=\"pl-en\">assert_enqueued_with</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">job</span>: <span class=\"pl-v\">BuggyJob</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">at</span>:<span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span>\n      <span class=\"pl-v\">BuggyJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">set</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">wait_until</span>:<span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_assert_enqueued_with_date_range</span>\n    <span class=\"pl-s1\">at_matcher</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">-&gt;</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">job_at</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-kos\">(</span><span class=\"pl-v\">Date</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">yesterday</span>..<span class=\"pl-v\">Date</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tomorrow</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">cover?</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">job_at</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-v\">BuggyJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">set</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">wait_until</span>: <span class=\"pl-v\">Date</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">today</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">noon</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n\n    <span class=\"pl-en\">assert_enqueued_with</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">job</span>: <span class=\"pl-v\">BuggyJob</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">at</span>: <span class=\"pl-s1\">at_matcher</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The test should fail, since the values are different.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The test passes</p>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: <code class=\"notranslate\">7.1.3.4</code></p>\n<p dir=\"auto\"><strong>Ruby version</strong>: <code class=\"notranslate\">ruby 3.3.3 (2024-06-12 revision f1c7b6f435) [arm64-darwin23]</code></p>",
            "url": "https://github.com/rails/rails/issues/52478",
            "title": "ActiveJob: `assert_enqueued_with` does not support second-level granularity when asserting against the `at` argument  ",
            "date_modified": "2024-08-30T21:23:22.000Z",
            "date_published": "2024-08-01T14:34:51.000Z",
            "author": {
                "name": "stevepolitodesign",
                "url": "https://github.com/stevepolitodesign"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/6012864?u=42344b270861184fd764bdf6d19f19cc66a926ad&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Steps to reproduce</h3>\n\n\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# frozen_string_literal: true\n\nrequire &quot;bundler/inline&quot;\n\ngemfile(true) do\n  source &quot;https://rubygems.org&quot;\n\n  gem &quot;rails&quot;\n  # If you want to test against edge Rails replace the previous line with this:\n  # gem &quot;rails&quot;, github: &quot;rails/rails&quot;, branch: &quot;main&quot;\nend\n\nrequire &quot;active_job&quot;\nrequire &quot;minitest/autorun&quot;\n\nclass BuggyJobTest &lt; ActiveJob::TestCase\n  class BuggyJob &lt; ActiveJob::Base\n    rescue_from(StandardError) do |error|\n      $i18n_locale_is_eq_job_locale = I18n.locale.to_s == locale.to_s\n    end\n\n    def perform\n      raise 'error'\n    end\n  end\n\n  def test_stuff\n    I18n.available_locales = %i(en ja)\n    I18n.with_locale(:ja) do\n      BuggyJob.perform_later\n    end\n\n    perform_enqueued_jobs\n    assert($i18n_locale_is_eq_job_locale)\n  end\nend\n\"><pre class=\"notranslate\"><span class=\"pl-c\"># frozen_string_literal: true</span>\n\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"bundler/inline\"</span>\n\n<span class=\"pl-en\">gemfile</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span>\n  <span class=\"pl-en\">source</span> <span class=\"pl-s\">\"https://rubygems.org\"</span>\n\n  <span class=\"pl-en\">gem</span> <span class=\"pl-s\">\"rails\"</span>\n  <span class=\"pl-c\"># If you want to test against edge Rails replace the previous line with this:</span>\n  <span class=\"pl-c\"># gem \"rails\", github: \"rails/rails\", branch: \"main\"</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"active_job\"</span>\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"minitest/autorun\"</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">BuggyJobTest</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">TestCase</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">BuggyJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span>\n    <span class=\"pl-en\">rescue_from</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">StandardError</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">error</span>|\n      $i18n_locale_is_eq_job_locale <span class=\"pl-c1\">=</span> <span class=\"pl-v\">I18n</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">locale</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">to_s</span> == <span class=\"pl-en\">locale</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">to_s</span>\n    <span class=\"pl-k\">end</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n      <span class=\"pl-en\">raise</span> <span class=\"pl-s\">'error'</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_stuff</span>\n    <span class=\"pl-v\">I18n</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">available_locales</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">%i(</span><span class=\"pl-pds\">en</span> <span class=\"pl-pds\">ja</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-v\">I18n</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">with_locale</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:ja</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span>\n      <span class=\"pl-v\">BuggyJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n    <span class=\"pl-k\">end</span>\n\n    <span class=\"pl-en\">perform_enqueued_jobs</span>\n    <span class=\"pl-en\">assert</span><span class=\"pl-kos\">(</span>$i18n_locale_is_eq_job_locale<span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">I18n.locale</code> inside the <code class=\"notranslate\">rescue_from</code> should be the same of <code class=\"notranslate\">job.locale</code></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">I18n.locale</code> inside the <code class=\"notranslate\">rescue_from</code> is the current locale</p>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: 7.1.3.4</p>\n<p dir=\"auto\"><strong>Ruby version</strong>: 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux]</p>",
            "url": "https://github.com/rails/rails/issues/52183",
            "title": "ActiveJob does not use the job locale inside the rescue_from block",
            "date_modified": "2024-07-10T21:11:08.000Z",
            "date_published": "2024-06-21T14:35:35.000Z",
            "author": {
                "name": "alanoliveira",
                "url": "https://github.com/alanoliveira"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5657035?u=48dc5950e98b199e1ed1e8c5c3f1e4bfd2b39691&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #52183.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2366680034\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/52183\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/52183/hovercard\" href=\"https://github.com/rails/rails/issues/52183\">#52183</a>.</p>\n<p dir=\"auto\">The problem was that the locale and the timezone are set only when running the <code class=\"notranslate\">perform</code> method of the job<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/rails/rails/blob/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e/activejob/lib/active_job/translation.rb#L8-L10\">rails/activejob/lib/active_job/translation.rb</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 8 to 10\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/rails/rails/commit/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e\">16d8b82</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L8\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"8\"></td>\n          <td id=\"LC8\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-en\">around_perform</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">job</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">block</span>| </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L9\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"9\"></td>\n          <td id=\"LC9\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-v\">I18n</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">with_locale</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">locale</span><span class=\"pl-kos\">,</span> &amp;<span class=\"pl-s1\">block</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L10\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"10\"></td>\n          <td id=\"LC10\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">end</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\n<div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/rails/rails/blob/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e/activejob/lib/active_job/execution.rb#L45-L51\">rails/activejob/lib/active_job/execution.rb</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 45 to 51\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/rails/rails/commit/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e\">16d8b82</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L45\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"45\"></td>\n          <td id=\"LC45\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform_now</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L46\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"46\"></td>\n          <td id=\"LC46\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-c\"># Guard against jobs that were persisted before we started counting executions by zeroing out nil counters</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L47\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"47\"></td>\n          <td id=\"LC47\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-smi\">self</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">executions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-en\">executions</span> || <span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span> + <span class=\"pl-c1\">1</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L48\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"48\"></td>\n          <td id=\"LC48\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L49\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"49\"></td>\n          <td id=\"LC49\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">deserialize_arguments_if_needed</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L50\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"50\"></td>\n          <td id=\"LC50\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L51\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"51\"></td>\n          <td id=\"LC51\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">_perform_job</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\n<div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/rails/rails/blob/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e/activejob/lib/active_job/execution.rb#L65-L70\">rails/activejob/lib/active_job/execution.rb</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 65 to 70\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/rails/rails/commit/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e\">16d8b82</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L65\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"65\"></td>\n          <td id=\"LC65\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">_perform_job</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L66\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"66\"></td>\n          <td id=\"LC66\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-v\">ActiveSupport</span>::<span class=\"pl-v\">ExecutionContext</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\">:job</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">self</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L67\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"67\"></td>\n          <td id=\"LC67\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">run_callbacks</span> <span class=\"pl-pds\">:perform</span> <span class=\"pl-k\">do</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L68\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"68\"></td>\n          <td id=\"LC68\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span>*<span class=\"pl-en\">arguments</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L69\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"69\"></td>\n          <td id=\"LC69\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">end</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L70\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"70\"></td>\n          <td id=\"LC70\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">end</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">But when the job raises </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/rails/rails/blob/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e/activejob/lib/active_job/execution.rb#L52-L58\">rails/activejob/lib/active_job/execution.rb</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 52 to 58\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/rails/rails/commit/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e\">16d8b82</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L52\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"52\"></td>\n          <td id=\"LC52\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">rescue</span> <span class=\"pl-v\">Exception</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">exception</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L53\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"53\"></td>\n          <td id=\"LC53\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-s1\">handled</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">rescue_with_handler</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">exception</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L54\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"54\"></td>\n          <td id=\"LC54\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> <span class=\"pl-s1\">handled</span> <span class=\"pl-k\">if</span> <span class=\"pl-s1\">handled</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L55\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"55\"></td>\n          <td id=\"LC55\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">run_after_discard_procs</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">exception</span><span class=\"pl-kos\">)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L57\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"57\"></td>\n          <td id=\"LC57\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">raise</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">end</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n, we are outside of <code class=\"notranslate\">around_perform</code> block and so the global values are not correctly set. So we need to wrap the whole <code class=\"notranslate\">perform_now</code> method.<p></p>",
            "url": "https://github.com/rails/rails/pull/52188",
            "title": "Preserve timezone and locale in ActiveJob exception handlers",
            "date_modified": "2024-06-21T20:54:10.000Z",
            "date_published": "2024-06-21T20:52:17.000Z",
            "author": {
                "name": "fatkodima",
                "url": "https://github.com/fatkodima"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4672858?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">At Shopify, we have been using different flavours of concurrency within <code class=\"notranslate\">ActiveJob</code> for several years.<br>\nThis year we have consolidated all of this functionality into one API method called <code class=\"notranslate\">concurrency</code>.<br>\nAfter validating that this works for the scale of Shopify we decided to port the API upstream.</p>\n<p dir=\"auto\">There have been others attempt to add locking to <code class=\"notranslate\">ActiveJob</code> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"354337924\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/33728\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/33728/hovercard\" href=\"https://github.com/rails/rails/pull/33728\">#33728</a></p>\n<p dir=\"auto\">While that functionality has nothing wrong, we have identified that locking is not enough as a concurrency primitive.</p>\n<p dir=\"auto\">At Shopify, we allow developers to specify multiple concurrency options for there jobs:</p>\n<p dir=\"auto\">In all examples below, <code class=\"notranslate\">keys</code> is the array of keys that will help build a unique concurrency key from the job arguments.</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">EndToEnd</code> where a job holds a concurrency ticket from the moment gets enqueue until the job is performed. When any jobs that try to enter the queue, we check if the concurrent limit is reached, and if it is, we drop the job.<br>\n<code class=\"notranslate\">concurrency(limit: 1, keys: ['checkout_id'])</code></li>\n</ul>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class PaymentProcessingJob &lt; ActiveJob\n  # We only allow one job to be in the queue and processing at all times.\n  # If a job tries to enter the queue while another job with the same checkout_id\n  # is in the queue or performing, we drop the new job.\n\n  # Do not want to charge the same checkout twice :)\n  concurrency(limit: 1, keys: ['checkout_id'])\n\n  def perform(params)\n    # Logic\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">PaymentProcessingJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>\n  <span class=\"pl-c\"># We only allow one job to be in the queue and processing at all times.</span>\n  <span class=\"pl-c\"># If a job tries to enter the queue while another job with the same checkout_id</span>\n  <span class=\"pl-c\"># is in the queue or performing, we drop the new job.</span>\n\n  <span class=\"pl-c\"># Do not want to charge the same checkout twice :)</span>\n  <span class=\"pl-en\">concurrency</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">limit</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">keys</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'checkout_id'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">params</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># Logic</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">EnqueueLimit</code> where a job holds a concurrency ticket from the moment gets enqueue until the jobs get dequeued. When any jobs that try to enter the queue, we check if the concurrent limit is reached and if it is, we drop the job.<br>\n<code class=\"notranslate\">concurrency(limit: { enqueue: 1 }, keys: ['checkout_id'])</code></p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">PerformLimit</code> where a job holds a concurrency ticket from the moment gets dequeued until the jobs get performed. At the time of the dequeue, we check if the concurrency limit is reached and if so we put that job back into the Delayed queue<br>\n<code class=\"notranslate\">concurrency(limit: { performed: 1 }, keys: ['checkout_id'])</code></p>\n</li>\n</ul>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class UpdateThemeSettingsReferencesJob &lt; ActiveJob\n  # We only allow one job to perform at any moment. \n  # This is often used as a form of throttling for expensive operations.\n  # When a job from the head of the queue tries to start performing while another job \n  # with the same key is already performing, we re-enqueue the new job with a delay.\n  concurrency(\n    limit: { perform: 1 },\n    keys: ['shop_id', 'model', 'model_id']\n  )\n\n  def perform(params)\n    # Logic \n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">UpdateThemeSettingsReferencesJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>\n  <span class=\"pl-c\"># We only allow one job to perform at any moment. </span>\n  <span class=\"pl-c\"># This is often used as a form of throttling for expensive operations.</span>\n  <span class=\"pl-c\"># When a job from the head of the queue tries to start performing while another job </span>\n  <span class=\"pl-c\"># with the same key is already performing, we re-enqueue the new job with a delay.</span>\n  <span class=\"pl-en\">concurrency</span><span class=\"pl-kos\">(</span>\n    <span class=\"pl-pds\">limit</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-pds\">perform</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-pds\">keys</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'shop_id'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'model'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'model_id'</span><span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">params</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># Logic </span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">BoundedStages</code> is the combination of <code class=\"notranslate\">EnqueueLimit</code> and <code class=\"notranslate\">PerformLimit</code><br>\n<code class=\"notranslate\">concurrency(limit: { enqueue: 1, perform:1  }, keys: ['checkout_id'])</code></li>\n</ul>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class ExpensiveIdempotentSyncJob &lt; ActiveJob\n  # This job syncs the data of this shop with an external service.\n  # Since it is expensive, we want only one sync running at a time for each shop.\n  # We need to enqueue this job whenever something changes that requires syncing.\n  # However, if there is already an ExpensiveSyncJob in the queue, that job will sync all the changes made\n  # before it starts running, so there is no need to enqueue duplicates.\n  concurrency(limit: { enqueue: 1, perform: 1 }, keys: ['shop_id'])\n\n  def perform(params)\n    # Logic \n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">ExpensiveIdempotentSyncJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>\n  <span class=\"pl-c\"># This job syncs the data of this shop with an external service.</span>\n  <span class=\"pl-c\"># Since it is expensive, we want only one sync running at a time for each shop.</span>\n  <span class=\"pl-c\"># We need to enqueue this job whenever something changes that requires syncing.</span>\n  <span class=\"pl-c\"># However, if there is already an ExpensiveSyncJob in the queue, that job will sync all the changes made</span>\n  <span class=\"pl-c\"># before it starts running, so there is no need to enqueue duplicates.</span>\n  <span class=\"pl-en\">concurrency</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">limit</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-pds\">enqueue</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">perform</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">keys</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'shop_id'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">params</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c\"># Logic </span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\"><strong><code class=\"notranslate\">ActiveJob</code> only care about the concurrency at the <code class=\"notranslate\">enqueue</code> (EndToEnd and EnqueueLimit) steps for the <code class=\"notranslate\">perform</code> cases (PerformLimit and BoundedStages) is up to the job adapters to implement it internally. So the adapters can decide to add the functionality or not 😄</strong></p>\n<h3 dir=\"auto\">Other Information</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">timeout</code> option allows specifying for how long a job can hold a concurrency ticket.</p>\n<p dir=\"auto\">At Shopify, we allow other API options like <code class=\"notranslate\">perform_delay</code> which configures the delay in which the job is placed back in the delayed queue when the <code class=\"notranslate\">PerformLimit</code> is reached.</p>\n<p dir=\"auto\">Here is an example of the API in use in one of our jobs:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"concurrency(limit: { perform: 8, perform_delay: 300 }, keys: ['task_name'])\"><pre class=\"notranslate\"><code class=\"notranslate\">concurrency(limit: { perform: 8, perform_delay: 300 }, keys: ['task_name'])\n</code></pre></div>",
            "url": "https://github.com/rails/rails/pull/40337",
            "title": "Add concurrency to ActiveJob",
            "date_modified": "2023-12-23T23:07:32.000Z",
            "date_published": "2020-10-05T18:27:44.000Z",
            "author": {
                "name": "GustavoCaso",
                "url": "https://github.com/GustavoCaso"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/75187597?u=97791928a7e78e7a393a98d42708cdcf71545238&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">ActiveJob produces a large amount of log noise, because errors that are emitted from ActiveJob don't have the standard Rails BacktraceCleaner applied. This is especially apparent when using Sorbet for Ruby types, since each application method call is wrapped by multiple Sorbet typechecking functions. My application's activejob error backtraces would typically log 4 non-relevant Sorbet function calls for each application function call. My workaround has been to monkey-patch Rails in our application. However, it seems to make sense to simply bring this behavior into ActiveJob as the default, as the backtrace cleaner is a pretty standard piece of Rails machinery that is used for most other backtraces in Rails.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">When ActiveJob encounters an error performing a job, rather than printing the full unfiltered (and noisy) exception backtrace, print the cleaned backtrace using Rails's BacktraceCleaner.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CI is passing.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/46555",
            "title": "Small PR: Apply Rails backtrace cleaner to ActiveJob backtrace printout",
            "date_modified": "2024-09-19T23:30:07.000Z",
            "date_published": "2022-11-23T00:45:44.000Z",
            "author": {
                "name": "warrenbhw",
                "url": "https://github.com/warrenbhw"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/139634?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Resque workers can be killed.</p>\n<p dir=\"auto\">If they are killed with SIGKILL, the error handling in ActiveJob doesn't kick in, because it's not raised as an exception within the job code.</p>\n<p dir=\"auto\">The failures <em>can</em> be detected in Resque because other workers call <code class=\"notranslate\">prune_dead_workers</code> and trigger <code class=\"notranslate\">on_failure_XXX</code> hooks on the job class, which can be handled, but ActiveJob currently misses these exceptions and cannot trigger retry logic.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n\n<ol dir=\"auto\">\n<li>Create an ActiveJob instance</li>\n<li>Add <code class=\"notranslate\">rescue_from(Resque::DirtyExit) { retry_job } </code></li>\n<li>Enqueue in resque, and kill it mid-job with SIGKILL</li>\n<li>Wait for the worker to be pruned</li>\n<li>The error will be visible in the resque failure queue, but the retry will never happen.</li>\n</ol>\n\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# frozen_string_literal: true\n\nrequire &quot;bundler/inline&quot;\n\n# this requires redis-server to be in PATH\n\ngemfile(true) do\n  source &quot;https://rubygems.org&quot;\n\n  git_source(:github) { |repo| &quot;https://github.com/#{repo}.git&quot; }\n\n  gem &quot;rails&quot;, github: &quot;rails/rails&quot;, branch: &quot;main&quot;\n  # gem &quot;rails&quot;, github: &quot;geoffyoungs/rails&quot;, branch: &quot;resque-dirty-exit-active-job&quot;\n  gem 'redis'\n  gem 'resque'\nend\n\nrequire &quot;active_support&quot;\nrequire &quot;active_support/core_ext/object/blank&quot;\nrequire &quot;active_job&quot;\nrequire &quot;resque&quot;\nrequire &quot;minitest/autorun&quot;\n\nENV['QUEUE'] = 'std'\nENV['FORK_PER_JOB'] = 'false'\nREDIS_PORT = 8765\nREDIS_DB = 'resque_dirty_exit_active_job.rdb'+$$.to_s\nActiveJob::Base.queue_adapter = :resque\n\nclass BugTest &lt; Minitest::Test\n  class Job &lt; ActiveJob::Base\n    def self.status=(value)\n      Resque.redis.set('job_status', value)\n    end\n\n    def self.status\n      Resque.redis.get('job_status')\n    end\n\n    queue_as ENV['QUEUE']\n\n    rescue_from(Resque::DirtyExit) do |exception|\n      Job.status = 'retry'\n      retry_job\n    end\n\n    def perform\n      sleep 2\n      Job.status = 'done'\n    end\n  end\n\n  def setup\n    spawn_redis\n    connect_to_redis\n    clear_redis\n    FileUtils.rm_f(REDIS_DB)\n  end\n\n  def teardown\n    kill_redis\n    FileUtils.rm_f(REDIS_DB)\n  end\n\n  def test_whether_job_is_retried_after_dirty_exit\n    Job.status = 'start'\n\n    Job.perform_later\n\n    assert Job.status.eql?('start')\n\n    work_for(1)\n\n    wait_for_workers_to_be_pruned\n\n    assert Job.status.eql?('retry')\n\n    work_for(3)\n\n    assert Job.status.eql?('done')\n  end\n\n  private\n\n  def work_for(time=0.5)\n    pid = fork {\n      connect_to_redis\n      worker = Resque::Worker.new\n      worker.prepare\n      worker.heartbeat\n      worker.work(1)\n      exit!\n    }\n    sleep(time)\n    kill('KILL', pid)\n  end\n\n  def spawn_redis\n    @redis ||= spawn(['redis-server', '--port', REDIS_PORT.to_s, '--dbfilename', REDIS_DB].join(' '), out: File.open('/dev/null', 'w'))\n  end\n\n  def clear_redis\n    Resque::Failure.clear\n    Resque.remove_queue('std')\n    Job.status = ''\n  end\n\n  def kill_redis\n    kill('INT', @redis)\n    @redis = nil\n  end\n\n  def kill(signal, pid)\n    Process.kill(signal, pid)\n    Process.waitpid(pid)\n  end\n\n  def connect_to_redis\n    Resque.redis = Redis.new(port: REDIS_PORT)\n  end\n\n  def wait_for_workers_to_be_pruned\n    while (workers = Resque::Worker.all).any?\n      sleep(0.1)\n      workers.first.prune_dead_workers\n    end\n  end\nend\n\"><pre class=\"notranslate\"><span class=\"pl-c\"># frozen_string_literal: true</span>\n\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"bundler/inline\"</span>\n\n<span class=\"pl-c\"># this requires redis-server to be in PATH</span>\n\n<span class=\"pl-en\">gemfile</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span>\n  <span class=\"pl-en\">source</span> <span class=\"pl-s\">\"https://rubygems.org\"</span>\n\n  <span class=\"pl-en\">git_source</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:github</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> |<span class=\"pl-s1\">repo</span>| <span class=\"pl-s\">\"https://github.com/<span class=\"pl-s1\"><span class=\"pl-kos\">#{</span><span class=\"pl-s1\">repo</span><span class=\"pl-kos\">}</span></span>.git\"</span> <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-en\">gem</span> <span class=\"pl-s\">\"rails\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">github</span>: <span class=\"pl-s\">\"rails/rails\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">branch</span>: <span class=\"pl-s\">\"main\"</span>\n  <span class=\"pl-c\"># gem \"rails\", github: \"geoffyoungs/rails\", branch: \"resque-dirty-exit-active-job\"</span>\n  <span class=\"pl-en\">gem</span> <span class=\"pl-s\">'redis'</span>\n  <span class=\"pl-en\">gem</span> <span class=\"pl-s\">'resque'</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"active_support\"</span>\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"active_support/core_ext/object/blank\"</span>\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"active_job\"</span>\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"resque\"</span>\n<span class=\"pl-en\">require</span> <span class=\"pl-s\">\"minitest/autorun\"</span>\n\n<span class=\"pl-c1\">ENV</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'QUEUE'</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'std'</span>\n<span class=\"pl-c1\">ENV</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'FORK_PER_JOB'</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'false'</span>\n<span class=\"pl-c1\">REDIS_PORT</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">8765</span>\n<span class=\"pl-c1\">REDIS_DB</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'resque_dirty_exit_active_job.rdb'</span>+$$<span class=\"pl-kos\">.</span><span class=\"pl-en\">to_s</span>\n<span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_adapter</span> <span class=\"pl-c1\">=</span> <span class=\"pl-pds\">:resque</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">BugTest</span> &lt; <span class=\"pl-v\">Minitest</span>::<span class=\"pl-v\">Test</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">Job</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span>\n    <span class=\"pl-k\">def</span> <span class=\"pl-smi\">self</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-v\">Resque</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redis</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">set</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'job_status'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">value</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">end</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-smi\">self</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span>\n      <span class=\"pl-v\">Resque</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redis</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'job_status'</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">end</span>\n\n    <span class=\"pl-en\">queue_as</span> <span class=\"pl-c1\">ENV</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'QUEUE'</span><span class=\"pl-kos\">]</span>\n\n    <span class=\"pl-en\">rescue_from</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Resque</span>::<span class=\"pl-v\">DirtyExit</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">exception</span>|\n      <span class=\"pl-v\">Job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'retry'</span>\n      <span class=\"pl-en\">retry_job</span>\n    <span class=\"pl-k\">end</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n      <span class=\"pl-en\">sleep</span> <span class=\"pl-c1\">2</span>\n      <span class=\"pl-v\">Job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'done'</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">setup</span>\n    <span class=\"pl-en\">spawn_redis</span>\n    <span class=\"pl-en\">connect_to_redis</span>\n    <span class=\"pl-en\">clear_redis</span>\n    <span class=\"pl-v\">FileUtils</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">rm_f</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">REDIS_DB</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">teardown</span>\n    <span class=\"pl-en\">kill_redis</span>\n    <span class=\"pl-v\">FileUtils</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">rm_f</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">REDIS_DB</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_whether_job_is_retried_after_dirty_exit</span>\n    <span class=\"pl-v\">Job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'start'</span>\n\n    <span class=\"pl-v\">Job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n\n    <span class=\"pl-en\">assert</span> <span class=\"pl-v\">Job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">eql?</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'start'</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-en\">work_for</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-en\">wait_for_workers_to_be_pruned</span>\n\n    <span class=\"pl-en\">assert</span> <span class=\"pl-v\">Job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">eql?</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'retry'</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-en\">work_for</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-en\">assert</span> <span class=\"pl-v\">Job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">eql?</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'done'</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">private</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">work_for</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">time</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">0.5</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-s1\">pid</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">fork</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-en\">connect_to_redis</span>\n      <span class=\"pl-s1\">worker</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Resque</span>::<span class=\"pl-v\">Worker</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span>\n      <span class=\"pl-s1\">worker</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">prepare</span>\n      <span class=\"pl-s1\">worker</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">heartbeat</span>\n      <span class=\"pl-s1\">worker</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">work</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-en\">exit!</span>\n    <span class=\"pl-kos\">}</span>\n    <span class=\"pl-en\">sleep</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">time</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-en\">kill</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'KILL'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">pid</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">spawn_redis</span>\n    <span class=\"pl-c1\">@redis</span> ||= <span class=\"pl-en\">spawn</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'redis-server'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'--port'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">REDIS_PORT</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">to_s</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'--dbfilename'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">REDIS_DB</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">' '</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">out</span>: <span class=\"pl-v\">File</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">open</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/dev/null'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'w'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">clear_redis</span>\n    <span class=\"pl-v\">Resque</span>::<span class=\"pl-v\">Failure</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clear</span>\n    <span class=\"pl-v\">Resque</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">remove_queue</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'std'</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-v\">Job</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">status</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">''</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">kill_redis</span>\n    <span class=\"pl-en\">kill</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'INT'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">@redis</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-c1\">@redis</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">nil</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">kill</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">signal</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">pid</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">kill</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">signal</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">pid</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-v\">Process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">waitpid</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">pid</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">connect_to_redis</span>\n    <span class=\"pl-v\">Resque</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redis</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Redis</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">port</span>: <span class=\"pl-c1\">REDIS_PORT</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">wait_for_workers_to_be_pruned</span>\n    <span class=\"pl-k\">while</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">workers</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Resque</span>::<span class=\"pl-v\">Worker</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">all</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">any?</span>\n      <span class=\"pl-en\">sleep</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0.1</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-s1\">workers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">first</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">prune_dead_workers</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n\n<p dir=\"auto\">It should be possible to handle the exception in the ActiveJob class.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n\n<p dir=\"auto\">It's not possible to handle the exception in ActiveJob without additional resque behaviour added to the JobWrapper class.</p>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: 7.0.0-7.2.0pre (at least)</p>\n<p dir=\"auto\"><strong>Ruby version</strong>: Any</p>",
            "url": "https://github.com/rails/rails/issues/49734",
            "title": "Killed Resque jobs cannot be retried using ActiveJob",
            "date_modified": "2023-10-30T12:53:05.000Z",
            "date_published": "2023-10-21T19:25:48.000Z",
            "author": {
                "name": "geoffyoungs",
                "url": "https://github.com/geoffyoungs"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/47554?u=7f919feee43d319ec01c7b135f4d1868a31bddc3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is not a new issue with Rails autoloading, but a challenge I feel when working with Engines (either developing engines as a gem maintainer or consuming engines as an application developer)</p>\n<p dir=\"auto\">For example, an Engine may have a setup like this:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"module GoodJob\n  class ApplicationJob &lt; ActiveJob::Base\n    # some configuration\n    ActiveSupport.run_load_hooks(:good_job_application_job, self)\n  end\n\n  class UtilityOneJob &lt; ApplicationJob; end\n  class UtilityTwoJob &lt; ApplicationJob; end\n  class UtilityThreeJob &lt; ApplicationJob; end\n  # ... and many more\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">module</span> <span class=\"pl-v\">GoodJob</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">ApplicationJob</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">Base</span>\n    <span class=\"pl-c\"># some configuration</span>\n    <span class=\"pl-v\">ActiveSupport</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">run_load_hooks</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:good_job_application_job</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">self</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">UtilityOneJob</span> &lt; <span class=\"pl-v\">ApplicationJob</span><span class=\"pl-kos\">;</span> <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">UtilityTwoJob</span> &lt; <span class=\"pl-v\">ApplicationJob</span><span class=\"pl-kos\">;</span> <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">UtilityThreeJob</span> &lt; <span class=\"pl-v\">ApplicationJob</span><span class=\"pl-kos\">;</span> <span class=\"pl-k\">end</span>\n  <span class=\"pl-c\"># ... and many more</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">I give an example of GoodJob, but this is a very analogous situation to other Engines with autoloaded classes/subclasses (models, controllers, etc.); for example Devise, which has a <code class=\"notranslate\">DeviseController</code> (with load_hook) that is then subclassed with <a href=\"https://github.com/heartcombo/devise/wiki/How-To:-Create-custom-layouts#application--devise-config\">a desire to extend</a>.</p>\n<p dir=\"auto\">I want to be able to allow application developers to extend the subclasses, and I want to defer autoloaded constants as much as possible (ideally not touching Action Controller or Active Model at all until during initialization), and this seems like it should be reasonable:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# config/initializers/good_job.rb\n\nActiveSupport.on_load(:good_job_application_job) do\n  # Customize a subclass\n  GoodJob::UtilityJobOne.queue_name = &quot;something_custom&quot;\nend\"><pre class=\"notranslate\"><span class=\"pl-c\"># config/initializers/good_job.rb</span>\n\n<span class=\"pl-v\">ActiveSupport</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on_load</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:good_job_application_job</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span>\n  <span class=\"pl-c\"># Customize a subclass</span>\n  <span class=\"pl-v\">GoodJob</span>::<span class=\"pl-v\">UtilityJobOne</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"something_custom\"</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">This <em>usually</em> works ok, except in the case when the <code class=\"notranslate\">UtilityJobOne</code> <em>being loaded causes ApplicationJob to be loaded for the very first time</em>, in which case it raises a <code class=\"notranslate\">uninitialized constant UtilityJobOne (NameError)</code>. This is because of the autoloading chain:</p>\n<p dir=\"auto\"><code class=\"notranslate\">GoodJob::UtilityJobOne</code> first must load its parent class <code class=\"notranslate\">GoodJob::ApplicationJob</code> for the first time, which triggers the load_hook which itself references <code class=\"notranslate\">UtilityOneJob</code> which has not yet completed loading and thus a <code class=\"notranslate\">NameError</code> 💥</p>\n<p dir=\"auto\">There is what I consider a workaround for this which is to use <code class=\"notranslate\">inherited</code> (which is triggered _after the subclass constant is loaded), but I find it somewhat complex and wonder if there is a better way, or whether this is something that should be turned into a hook pattern:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# config/initializers/good_job.rb\n\nmodule ConfigureUtilityJob\n  def inherited(subclass)\n    super\n    if subclass.to_s == &quot;UtilityJobOne&quot;\n      subclass.queue_name = &quot;something_custom&quot;\n    end\n  end\nend\n\nActiveSupport.on_load(:good_job_application_job) do\n  GoodJob::ApplicationJob.extend ConfigureUtilityJob\nend\"><pre class=\"notranslate\"><span class=\"pl-c\"># config/initializers/good_job.rb</span>\n\n<span class=\"pl-k\">module</span> <span class=\"pl-v\">ConfigureUtilityJob</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">inherited</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">subclass</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-smi\">super</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-s1\">subclass</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">to_s</span> == <span class=\"pl-s\">\"UtilityJobOne\"</span>\n      <span class=\"pl-s1\">subclass</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">queue_name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"something_custom\"</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-v\">ActiveSupport</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on_load</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:good_job_application_job</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span>\n  <span class=\"pl-v\">GoodJob</span>::<span class=\"pl-v\">ApplicationJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">extend</span> <span class=\"pl-v\">ConfigureUtilityJob</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">I realize that another solution as a engine maintainer is to add load hooks to every subclass, but that seems onerous, and as an application developer I'd have to convince other engine maintainers to do so (which is totally ok, so long as there isn't a better way I'm missing or a reasonable central interface for modifying autoloaded subclasses).</p>",
            "url": "https://github.com/rails/rails/issues/51327",
            "title": "Autoloaded classes raise NameError when accessed in parent's on_load hook during load",
            "date_modified": "2024-10-03T19:33:22.000Z",
            "date_published": "2024-03-14T15:06:07.000Z",
            "author": {
                "name": "bensheldon",
                "url": "https://github.com/bensheldon"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/99586?u=b4abd791d83e768c72cb832147b4a210caecf47d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Run a job with retry attempt 1. The won't be retried.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class FooJob &lt; ApplicationJob\n  class FooError &lt; StandardError; end\n\n  retry_on FooError, attempts: 1\n\n  def perform\n    raise FooError\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">FooJob</span> &lt; <span class=\"pl-v\">ApplicationJob</span>\n  <span class=\"pl-k\">class</span> <span class=\"pl-v\">FooError</span> &lt; <span class=\"pl-v\">StandardError</span><span class=\"pl-kos\">;</span> <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-en\">retry_on</span> <span class=\"pl-v\">FooError</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">attempts</span>: <span class=\"pl-c1\">1</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span>\n    <span class=\"pl-en\">raise</span> <span class=\"pl-v\">FooError</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">ActiveJob should retry at most the number of times specified by the attempts option.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">attempts: 0</code>: runs once, no retry<br>\n<code class=\"notranslate\">attempts: 1</code>: runs once, no retry<br>\n<code class=\"notranslate\">attempts: 2</code>: runs once, one retry<br>\n<code class=\"notranslate\">attempts: 3</code>: runs once, two retries</p>\n<p dir=\"auto\">The behavior is not consistent. We can either change the behavior to be consistent (won't happen?) or at least document it very clearly.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"358130415\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/33816\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/33816/hovercard\" href=\"https://github.com/rails/rails/issues/33816\">#33816</a> also pointed out the problem.</p>\n<h3 dir=\"auto\">System configuration</h3>\n<p dir=\"auto\"><strong>Rails version</strong>: Rails 7.0.4</p>\n<p dir=\"auto\"><strong>Ruby version</strong>: ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-linux]</p>",
            "url": "https://github.com/rails/rails/issues/46419",
            "title": "ActiveJob's retry behavior is not consistent",
            "date_modified": "2023-07-25T22:51:14.000Z",
            "date_published": "2022-11-04T10:37:42.000Z",
            "author": {
                "name": "shouichi",
                "url": "https://github.com/shouichi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5122678?u=204301f9f9fe8930fd26fe3bfe65b6ffaffd8b59&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">The current guidance on how to initialize a custom serializer does not work. Instead, it raises a <code class=\"notranslate\">NameError</code>.</p>\n<p dir=\"auto\">I found I needed to use the <code class=\"notranslate\">to_prepare</code> <a href=\"https://guides.rubyonrails.org/configuring.html#initialization-events\" rel=\"nofollow\">initialization events</a><br>\nto correctly configure a custom serializer:</p>\n<p dir=\"auto\">Additionally, add the private <code class=\"notranslate\">klass</code> instance method to match the example in the API.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/53192",
            "title": "Guides: Update serialization section [ci skip]",
            "date_modified": "2024-10-08T21:33:21.000Z",
            "date_published": "2024-10-05T02:11:56.000Z",
            "author": {
                "name": "stevepolitodesign",
                "url": "https://github.com/stevepolitodesign"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5122678?u=204301f9f9fe8930fd26fe3bfe65b6ffaffd8b59&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #52478.\">Closes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2442642275\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/52478\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/52478/hovercard\" href=\"https://github.com/rails/rails/issues/52478\">#52478</a></p>\n<p dir=\"auto\">Prior to this commit, tests using <a href=\"https://edgeapi.rubyonrails.org/classes/ActiveJob/TestHelper.html#method-i-assert_enqueued_with\" rel=\"nofollow\">assert_enqueued_with</a> asserting against the <code class=\"notranslate\">at</code> argument would incorrectly pass if testing with values that used second-level precision.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class BuggyJobTest &lt; ActiveJob::TestCase\n  def test_should_not_find_job\n    at =  Time.new(&quot;1989-12-31T12:00:01&quot;)\n    wait_until = Time.new(&quot;1989-12-31T12:00:02&quot;)\n\n    assert_enqueued_with(job: BuggyJob, at:) do\n      BuggyJob.set(wait_until:).perform_later\n    end\n\n    fail &quot;Should not reach this line because assert_enqueued_with should have failed&quot;\n  end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">BuggyJobTest</span> &lt; <span class=\"pl-v\">ActiveJob</span>::<span class=\"pl-v\">TestCase</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_should_not_find_job</span>\n    <span class=\"pl-s1\">at</span> <span class=\"pl-c1\">=</span>  <span class=\"pl-v\">Time</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"1989-12-31T12:00:01\"</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-s1\">wait_until</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Time</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"1989-12-31T12:00:02\"</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-en\">assert_enqueued_with</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">job</span>: <span class=\"pl-v\">BuggyJob</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">at</span>:<span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span>\n      <span class=\"pl-v\">BuggyJob</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">set</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">wait_until</span>:<span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">perform_later</span>\n    <span class=\"pl-k\">end</span>\n\n    <span class=\"pl-en\">fail</span> <span class=\"pl-s\">\"Should not reach this line because assert_enqueued_with should have failed\"</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/52479",
            "title": "Support second-level precision for `assert_enqueued_with`",
            "date_modified": "2024-08-11T07:52:04.000Z",
            "date_published": "2024-08-01T14:45:12.000Z",
            "author": {
                "name": "stevepolitodesign",
                "url": "https://github.com/stevepolitodesign"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/94129?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">On latest main, tests for an application of mine reliably stall locally and in CI. Sometimes warnings like the following are printed:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"WARNING:  there is already a transaction in progress\nmessage type 0x43 arrived from server while idle\nmessage type 0x5a arrived from server while idle\"><pre class=\"notranslate\"><code class=\"notranslate\">WARNING:  there is already a transaction in progress\nmessage type 0x43 arrived from server while idle\nmessage type 0x5a arrived from server while idle\n</code></pre></div>\n<p dir=\"auto\">Environment:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">The app uses a single Postgres DB and AR’s Postgres adapter.</p>\n</li>\n<li>\n<p dir=\"auto\">It uses RSpec and FactoryBot, not Minitest or AR fixtures.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"rspec-core (3.12.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-expectations (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-mocks (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-rails (6.0.1)\n  actionpack (&gt;= 6.1)\n  activesupport (&gt;= 6.1)\n  railties (&gt;= 6.1)\n  rspec-core (~&gt; 3.11)\n  rspec-expectations (~&gt; 3.11)\n  rspec-mocks (~&gt; 3.11)\n  rspec-support (~&gt; 3.11)\nrspec-support (3.12.0)\"><pre class=\"notranslate\"><code class=\"notranslate\">rspec-core (3.12.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-expectations (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-mocks (3.12.0)\n  diff-lcs (&gt;= 1.2.0, &lt; 2.0)\n  rspec-support (~&gt; 3.12.0)\nrspec-rails (6.0.1)\n  actionpack (&gt;= 6.1)\n  activesupport (&gt;= 6.1)\n  railties (&gt;= 6.1)\n  rspec-core (~&gt; 3.11)\n  rspec-expectations (~&gt; 3.11)\n  rspec-mocks (~&gt; 3.11)\n  rspec-support (~&gt; 3.11)\nrspec-support (3.12.0)\n</code></pre></div>\n</li>\n<li>\n<p dir=\"auto\">It’s on Ruby 3.1.3.</p>\n</li>\n</ul>\n<p dir=\"auto\">A <code class=\"notranslate\">git bisect</code> pointed to <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/rails/rails/commit/1a2ca1920c62abdd08c809df1fa98fe0acf14bc3/hovercard\" href=\"https://github.com/rails/rails/commit/1a2ca1920c62abdd08c809df1fa98fe0acf14bc3\"><tt>1a2ca19</tt></a> (cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/byroot/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/byroot\">@byroot</a>). That change does seem relevant, but I haven’t been able to reproduce the issue in a minimal app yet. I’ve tried with both Minitest and RSpec.</p>\n<p dir=\"auto\">The tests usually stall in around the same place with the same seed, but not <em>exactly</em> the same place. And I looked at two stalled runs with different seeds that didn’t run any common tests before their stalls.</p>\n<p dir=\"auto\">This has been difficult to pin down so far but I will keep looking.</p>",
            "url": "https://github.com/rails/rails/issues/46797",
            "title": "Active Job async adapter may use connections without a lease",
            "date_modified": "2024-06-06T16:57:27.000Z",
            "date_published": "2022-12-23T04:15:25.000Z",
            "author": {
                "name": "georgeclaghorn",
                "url": "https://github.com/georgeclaghorn"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2575027?u=e7a9fe052c03fa59da09e064fdfacf2b1f627c2f&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">By the time an <code class=\"notranslate\">ActiveJob::Base#perform</code> method is invoked, Active Record instances are already deserialized and reified through GlobalID integration.</p>\n<p dir=\"auto\">Unfortunately, since end-users don't have a means of configuring that loading process, it's common for Active Job executions to raise be at conflict with the application's Active Record strict loading configuration. That can result in errors like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ActiveRecord::StrictLoadingViolationError: `Article` is marked for strict_loading. The Tag association named `:tags` cannot be lazily loaded.\"><pre class=\"notranslate\"><code class=\"notranslate\">ActiveRecord::StrictLoadingViolationError: `Article` is marked for strict_loading. The Tag association named `:tags` cannot be lazily loaded.\n</code></pre></div>\n<p dir=\"auto\">Fortunately, calls to <code class=\"notranslate\">GlobalID::Locator.locate</code> support an optional <code class=\"notranslate\">includes:</code> keyword argument that's incorporated into the Active Record query to fetch the record.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This commit introduces a rudimentary interface to provide <code class=\"notranslate\">ActiveJob::Base</code> descendants with a means of eager-loading associations to comply with strict loading.</p>\n<p dir=\"auto\">While it certainly isn't the public interface to ship, this change supports something in the realm of the following example:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Article &lt; ApplicationRecord\n  self.strict_loading_by_default = true\n\n  has_and_belongs_to_many :tags\nend\n\nclass Tag &lt; ApplicationRecord\n  has_and_belongs_to_many :articles\nend\n\nclass PublishJob &lt; ApplicationJob\n  def perform(article)\n    article.tags.each { |tag| ... }\n  end\n\n  private\n    def options_for_global_id(model_class)\n      if model_class == Article\n        { includes: [:tags] }\n      else\n        super\n      end\n    end\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">Article</span> &lt; <span class=\"pl-v\">ApplicationRecord</span>\n  <span class=\"pl-smi\">self</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">strict_loading_by_default</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">true</span>\n\n  <span class=\"pl-en\">has_and_belongs_to_many</span> <span class=\"pl-pds\">:tags</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Tag</span> &lt; <span class=\"pl-v\">ApplicationRecord</span>\n  <span class=\"pl-en\">has_and_belongs_to_many</span> <span class=\"pl-pds\">:articles</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">PublishJob</span> &lt; <span class=\"pl-v\">ApplicationJob</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">perform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">article</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-s1\">article</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tags</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">each</span> <span class=\"pl-kos\">{</span> |<span class=\"pl-s1\">tag</span>| ... <span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">end</span>\n\n  <span class=\"pl-k\">private</span>\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">options_for_global_id</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">model_class</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-s1\">model_class</span> == <span class=\"pl-v\">Article</span>\n        <span class=\"pl-kos\">{</span> <span class=\"pl-pds\">includes</span>: <span class=\"pl-kos\">[</span><span class=\"pl-pds\">:tags</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span>\n      <span class=\"pl-k\">else</span>\n        <span class=\"pl-smi\">super</span>\n      <span class=\"pl-k\">end</span>\n    <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">The interface proposed in the current diff is awkward and not particularly well-named. It aims to demonstrate the necessary layers of abstraction that need to be breached in order for a Job to specify how to load records of a given model class. I'm hoping to gather feedback and guidance to shape the developer-facing public interface to configure how <code class=\"notranslate\">GlobalID::Locator.locate</code> is invoked. <strong>All feedback is welcomed</strong>.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/50341",
            "title": "Help Active Job comply with Strict Loading",
            "date_modified": "2023-12-13T15:49:45.000Z",
            "date_published": "2023-12-13T00:02:07.000Z",
            "author": {
                "name": "seanpdoyle",
                "url": "https://github.com/seanpdoyle"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/139634?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #49734.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1955634814\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/49734\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/49734/hovercard\" href=\"https://github.com/rails/rails/issues/49734\">#49734</a></p>\n\n<h3 dir=\"auto\">Motivation / Background</h3>\n\n<p dir=\"auto\">This allows Resque::DirtyExit exceptions to be handled in the same way as other exceptions in ActiveJobs.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This adds an <code class=\"notranslate\">on_failure</code> hook to the Resque JobWrapper class so that when a job is detected as having been killed (via prune_dead_workers) standard ActiveJob retry logic can be used to determine what to do next.</p>\n<h3 dir=\"auto\">Additional information</h3>\n\n<p dir=\"auto\">Because the Resque::DirtyExit exception is generated in the thread that sees that another worker has died (ie. the pruning thread) it's not visible to existing exception handling code in ActiveJob - it requires resque specific code to detect that this has happened and trigger the exception handler.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li>[?] Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/49735",
            "title": "Catch and handle Resque::DirtyExit exceptions in ActiveJob",
            "date_modified": "2023-11-01T10:12:15.000Z",
            "date_published": "2023-10-21T19:31:07.000Z",
            "author": {
                "name": "geoffyoungs",
                "url": "https://github.com/geoffyoungs"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/212648?u=26fba345a54b891629623ec9549fc0c54a2c2950&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">This Pull Request has been created because I needed <code class=\"notranslate\">retry_on attempts:</code> to use more complex logic than an Integer.</p>\n<p dir=\"auto\">In my specific case I was creating a concern for Jobs that would use <code class=\"notranslate\">retry_on</code> to allow jobs to quietly fail and retry. The concern was going to use a method to allow attempts to be customized in individual jobs.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    included do\n      retry_on(QuietRetryError, wait: :exponentially_longer, attempts: quiet_retry_attempts) do\n        # ...\n      end\n    end\"><pre class=\"notranslate\"><code class=\"notranslate\">    included do\n      retry_on(QuietRetryError, wait: :exponentially_longer, attempts: quiet_retry_attempts) do\n        # ...\n      end\n    end\n</code></pre></div>\n<p dir=\"auto\">However this ran into a state where the method needed to be defined and run when the concern was included instead of being available later in the job. It would be very fragile to have to define the method before including the concern. This lead to me to looking at if attempts accepted anything besides an integer. It did not but I saw there was already a pattern in place for wait to accept a Proc. I thought if that pattern was repeated for attempts than it would allow more flexibility for configuring attempts.</p>\n<p dir=\"auto\">My original thought was to have the Proc for attempts return a number similar to what the Proc for wait does. However, on thinking about it I decided that still did not leave much flexibility because attempts would still be determined by a number. Instead I switched it to return true/false so if the next attempt occurred could be determined by whatever logic was implemented in the Proc.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request changes ActiveJob retry_on attempts so it will accept a Proc.</p>\n<p dir=\"auto\">ActiveJob retry_on allowed the wait option to be set as a Proc that calculates the wait but did not give the same option for attempts. attempts could be set to only a number of times to attempt or unlimited. However, jobs sometimes need different logic than number of executions to determine if they should try again.</p>\n<p dir=\"auto\">This PR adds support for setting attempts to a Proc that returns either true or false. On true the retry will occur.</p>\n<p dir=\"auto\">As a an example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"retry_on ProcRetryError, attempts: -&gt;(executions) { executions &lt; 2 }\"><pre class=\"notranslate\"><code class=\"notranslate\">retry_on ProcRetryError, attempts: -&gt;(executions) { executions &lt; 2 }\n</code></pre></div>\n<h3 dir=\"auto\">Additional information</h3>\n\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> There are no typos in commit messages and comments.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Feature branch is up-to-date with <code class=\"notranslate\">main</code> (if not - rebase it).</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> PR is not in a draft state.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> CI is passing.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/46245",
            "title": "Add Proc as a type for ActiveJob retry_on attempts",
            "date_modified": "2022-10-18T21:34:58.000Z",
            "date_published": "2022-10-14T14:32:44.000Z",
            "author": {
                "name": "rosew",
                "url": "https://github.com/rosew"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/107635?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">I've been stuck on a failing test about a job that was supposed to be rescued from exceptions, and after an embarrassing amount of time I came to realise that using <code class=\"notranslate\">perform</code> shortcuts all of the ActiveJob niceties.</p>\n<p dir=\"auto\">This Pull Request has been created because I don't want other people to confuse the <code class=\"notranslate\">perform</code>, <code class=\"notranslate\">perform_now</code> or <code class=\"notranslate\">perform_later</code> altogether and waste valuable time trying to understand why the first one doesn't behave like the two others.</p>\n<p dir=\"auto\">Feel free to challenge the wording as you please ✌️</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request changes the ActiveJob guide.</p>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/49301",
            "title": "[ci skip] clarify the benefits of using ActiveJob's execution wrappers",
            "date_modified": "2023-09-23T12:55:07.000Z",
            "date_published": "2023-09-16T10:36:45.000Z",
            "author": {
                "name": "freesteph",
                "url": "https://github.com/freesteph"
            }
        }
    ]
}